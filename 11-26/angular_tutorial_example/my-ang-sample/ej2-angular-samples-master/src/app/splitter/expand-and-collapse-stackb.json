{"dependencies.json":"{\"@syncfusion/ej2-base\": \"*\", \"@syncfusion/ej2-buttons\": \"*\", \"@syncfusion/ej2-splitbuttons\": \"*\", \"@syncfusion/ej2-calendars\": \"*\", \"@syncfusion/ej2-charts\": \"*\", \"@syncfusion/ej2-diagrams\": \"*\", \"@syncfusion/ej2-maps\": \"*\", \"@syncfusion/ej2-treemap\": \"*\", \"@syncfusion/ej2-circulargauge\": \"*\", \"@syncfusion/ej2-data\": \"*\", \"@syncfusion/ej2-dropdowns\": \"*\", \"@syncfusion/ej2-grids\": \"*\", \"@syncfusion/ej2-inputs\": \"*\", \"@syncfusion/ej2-lists\": \"*\", \"@syncfusion/ej2-navigations\": \"*\", \"@syncfusion/ej2-popups\": \"*\", \"@syncfusion/ej2-lineargauge\": \"*\", \"@syncfusion/ej2-pdf-export\": \"*\", \"@syncfusion/ej2-compression\": \"*\", \"@syncfusion/ej2-excel-export\": \"*\", \"@syncfusion/ej2-file-utils\": \"*\", \"@syncfusion/ej2-svg-base\": \"*\", \"@syncfusion/ej2-documenteditor\": \"*\", \"@syncfusion/ej2-richtexteditor\": \"*\", \"@syncfusion/ej2-notifications\": \"*\", \"@syncfusion/ej2-heatmap\": \"*\", \"@syncfusion/ej2-pivotview\": \"*\", \"@syncfusion/ej2-schedule\": \"*\", \"@syncfusion/ej2-layouts\": \"*\", \"@syncfusion/ej2-angular-base\": \"*\", \"@syncfusion/ej2-angular-buttons\": \"*\", \"@syncfusion/ej2-angular-splitbuttons\": \"*\", \"@syncfusion/ej2-angular-calendars\": \"*\", \"@syncfusion/ej2-angular-charts\": \"*\", \"@syncfusion/ej2-angular-diagrams\": \"*\", \"@syncfusion/ej2-angular-maps\": \"*\", \"@syncfusion/ej2-angular-treemap\": \"*\", \"@syncfusion/ej2-angular-circulargauge\": \"*\", \"@syncfusion/ej2-angular-dropdowns\": \"*\", \"@syncfusion/ej2-angular-grids\": \"*\", \"@syncfusion/ej2-angular-inputs\": \"*\", \"@syncfusion/ej2-angular-lists\": \"*\", \"@syncfusion/ej2-angular-navigations\": \"*\", \"@syncfusion/ej2-angular-popups\": \"*\", \"@syncfusion/ej2-angular-lineargauge\": \"*\", \"@syncfusion/ej2-angular-documenteditor\": \"*\", \"@syncfusion/ej2-angular-richtexteditor\": \"*\", \"@syncfusion/ej2-angular-notifications\": \"*\", \"@syncfusion/ej2-angular-heatmap\": \"*\", \"@syncfusion/ej2-angular-pivotview\": \"*\", \"@syncfusion/ej2-angular-schedule\": \"*\", \"@syncfusion/ej2-angular-layouts\": \"*\" , \"@angular/http\": \"*\", \"rxjs-compat\":\"*\", \"core-js\": \"2.6.9\"}","main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"//cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\n/**\n * Splitter Expand and Collapse\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {}\n","app/app.module.ts":"import { RichTextEditorModule } from '@syncfusion/ej2-angular-richtexteditor';\n\nimport { AccordionAllModule, TreeViewModule } from '@syncfusion/ej2-angular-navigations';\n\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { ListViewAllModule } from '@syncfusion/ej2-angular-lists';\n\nimport { TextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { SplitterModule } from '@syncfusion/ej2-angular-layouts';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ ButtonModule, RichTextEditorModule, TreeViewModule, SplitterModule, BrowserModule,CommonModule, TextBoxModule, ListViewAllModule, AccordionAllModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div id=\"target\" class=\"control-section default-splitter\">\n    <ejs-splitter id='outterSplitter' #splitterInstance class=\"splitter-expand\" #horizontal height='385px' width='100%'\n        separatorSize=3>\n        <e-panes>\n            <e-pane size='48%' [collapsible]='true'>\n                <ng-template #content>\n                    <div class='splitter-expand-content'>\n                        <a href=\"https://www.syncfusion.com/ebooks/neuralnetworks\" target=\"_blank\">Neural Networks Using\n                            C# Succinctly</a>\n                        <p>Neural networks are an exciting field of software development used to calculate outputs from\n                            input data.\n                            While the idea seems simple enough, the implications of such networks are staggering—think\n                            optical character recognition,\n                            speech recognition, and regression analysis. With Neural Networks Using C# Succinctly by\n                            James McCaffrey, you’ll learn\n                            how to create your own neural network to solve classification problems, or problems where\n                            the outcomes can only be one of\n                            several values. <br /><br />Learn about encoding and normalizing data, activation functions\n                            and how to choose the right one, and ultimately\n                            how to train a neural network to find weights and bias values that provide accurate\n                            predictions.\n                            An artificial neural network (sometimes abbreviated ANN, or shortened to just \"neural\n                            network\" when the context is clear) is\n                            a software system that loosely models biological neurons and synapses. Before explaining\n                            exactly how neural networks work, it is\n                            useful to understand what types of problems they can solve. The image represents a typical\n                            problem that might be\n                            solved using a neural network. <br /><br />The goal of the problem is to predict a person's\n                            political inclination based on his or her\n                            gender, age, home location, and annual income. One hurdle for those new to neural networks\n                            is that the vocabulary varies\n                            greatly.\n                        </p>\n                    </div>\n                </ng-template>\n            </e-pane>\n            <e-pane [collapsible]='true'>\n                <ng-template #content>\n                    <ng-container *ngTemplateOutlet=\"template1\"></ng-container>\n                </ng-template>\n            </e-pane>\n        </e-panes>\n    </ejs-splitter>\n</div>\n\n<ng-template #template1>\n    <div class=\"content\" style=\"height:100%\">\n        <ejs-splitter #innersplitter id=\"innerSplitter\" separatorSize=3 orientation=\"Vertical\" height=\"100%\" width=\"100%\">\n            <e-panes>\n                <e-pane [collapsible]='true' >\n                    <ng-template #content>\n                        <div class=\"splitter-expand-content\">\n                            <a href=\"https://www.syncfusion.com/ebooks/data_capture_and_extraction_with_c_sharp_succinctly\" target=\"_blank\">Data Capture and Extraction with C# Succinctly</a>\n                            <p>Capturing and extracting information is one of the most important tasks a developer can perform, and making this task more\n                                engaging without relying entirely on specialized tools is an efficient way to improve productivity. \n                                In Data Capture and Extraction with C# Succinctly, author Ed Freitas guides readers toward getting more out of C# in minimal time.\n                                Email has become a pillar of our modern and connected society, and it now serves as a primary means of communication. Because each email \n                                is filled with valuable information, data extraction has emerged as a worthwhile skill set for developers in today’s business world. \n                                If you can parse an email and extract data from it, companies that automate processes, e.g., helpdesk systems.\n                                <br/><br/>An email can be divided into several parts: subject, body, attachments, sender and receiver(s). \n                                We should also note that the headers section \n                                reveals important information about the mail servers involved in the process of sending and receiving an email. <br/><br/>Before addressing how we can \n                                extract information from each part of an email, we should understand that a mailbox can be viewed as a semistructured database that does \n                                not use a native querying language (e.g., SQL) to extract information.\n                            </p>\n                        </div>\n                    </ng-template>\n                </e-pane>\n                <e-pane size='50%' [collapsible]='true' >\n                    <ng-template #content>\n                        <div class=\"splitter-expand-content\">\n                            <a href=\"https://www.syncfusion.com/ebooks/spark\" target=\"_blank\">Spark Succinctly</a>\n                            <p>Mastering big data requires an aptitude at every step of information processing. \n                                Post-processing, one of the most important steps, is where you find Apache Spark frequently employed. \n                                Spark Succinctly, by Marko Svaljek, addresses Spark’s use in the ultimate step in handling big data. This e-book, the \n                                third installment in Svaljek’s IoT series, teaches the basics of using Spark and explores how to work with RDDs, Scala and\n                                Python tasks, JSON files, and Cassandra.Many of the leading companies in the world today face the problem of big data. \n                                There are various definitions by various authors on what big data actually is. <br/><br/> If you are a newcomer to the field, perhaps the easiest way to explain \n                                the concept is that it’s the data that can’t be handled with traditional computing technologies, which mostly used single \n                                machines to process data. I won’t go into corner cases like, \"what if you had a really powerful computer\" and so on. \n                                The easiest way to think about big data is that it’s data that can’t be processed or stored by a single machine.\n                                Note that on the figure Spark takes input data and produces output data using the same storage. \n                                In practice this can vary, as data can come in from multiple data sources. Most of the examples provided in this\n                                book will be relatively simple when it comes to data output and the number of data.\n                            </p>\n                        </div>\n                    </ng-template>\n                </e-pane>\n            </e-panes>\n        </ejs-splitter>\n    </div>\n</ng-template>","app.component.css":"\n.control-section {\n    min-height: 370px;\n    margin-bottom: 15px;\n    margin-top: 10px;\n}\n\n#Innersplitter {\n    border: none;\n}\n\n.default-splitter .splitter-expand-content p,\n.default-splitter .splitter-expand-content a {\n    padding: 10px;\n}\n\n.splitter-expand .splitter-expand-content {\n    padding: 12px;\n}\n\n.splitter-expand .splitter-expand-content {\n    padding: 10px;\n}\n\n/* styles to hide scroll bars */\n.splitter-expand .e-pane.e-pane-horizontal.e-scrollable::-webkit-scrollbar,\n.splitter-expand .e-pane.e-pane-vertical.e-scrollable::-webkit-scrollbar {\n    display: none;\n}\n\n.splitter-expand .e-pane.e-pane-horizontal.e-scrollable,\n.splitter-expand .e-pane.e-pane-vertical.e-scrollable {\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n}","dataSource.json":"{   \n    \"listdata\" : [\n        { \"id\": \"s_01\", \"text\": \"Robert\", \"avatar\": \"\", \"pic\": \"pic04\", \"color\": \"\" },\n        { \"id\": \"s_02\", \"text\": \"Nancy\", \"avatar\": \"N\", \"pic\": \"\", \"color\": \"green\" },\n        { \"id\": \"s_05\", \"text\": \"John\", \"pic\": \"pic01\", \"avatar\": \"\", \"color\": \"\" },\n        { \"id\": \"s_03\", \"text\": \"Andrew\", \"avatar\": \"A\", \"pic\": \"\", \"color\": \"blue\" },\n        { \"id\": \"s_06\", \"text\": \"Michael\", \"pic\": \"pic02\", \"avatar\": \"\", \"color\": \"\" },\n        { \"id\": \"s_07\", \"text\": \"Steven\", \"pic\": \"pic03\", \"avatar\": \"\", \"color\": \"\" },\n        { \"id\": \"s_08\", \"text\": \"Margaret\", \"avatar\": \"M\", \"pic\": \"\", \"color\": \"red\" }\n    ]\n}","data-source.ts":"\n/**\n * Card datasource\n */\n// tslint:disable:max-line-length\nexport let cardBook: Object[] = [\n    {\n        header_title: ' ASP.NET MVC',\n        header_subtitle: 'Nick Harrison',\n        cardImage: { url: './assets/card/images/Tile_1.png', tag: 'server' },\n        cardContent: 'ASP.NET Model View Controller design pattern to keep the data, views, and logic clearly separated in apps.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/ASPNET_MVC_Succinctly', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 1\n    },\n    {\n        header_title: ' Node.js',\n        header_subtitle: 'Emanuele DelBono ',\n        cardImage: { url: './assets/card/images/Tile_2.png', tag: 'client' },\n        cardContent: ' Node.js is a wildly popular platform for writing web applications that has revolutionized web development in many ways.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/nodejs', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 2\n    },\n    {\n        header_title: ' React.js',\n        header_subtitle: 'Dmitri Nesteruk',\n        cardImage: { url: './assets/card/images/Tile_3.png', tag: 'client' },\n        cardContent: 'React is a JavaScript library that has revolutionized how developers design and think about views in web applications.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/reactjs_succinctly', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 3\n    },\n    {\n        header_title: ' TypeScript',\n        header_subtitle: 'Steve Fenton',\n        cardImage: { url: './assets/card/images/Tile_4.png', tag: 'client' },\n        cardContent: 'Microsoft TypeScript extends many familiar features of .NET programming to JavaScript.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/typescript', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 4\n    },\n    {\n        header_title: ' PHP',\n        header_subtitle: 'Jose Roberto Olivas Mendoza',\n        cardImage: { url: './assets/card/images/Tile_5.png', tag: 'server' },\n        cardContent: 'Known for its straightforward simplicity, PHP is an open source, general-purpose scripting language oriented for web development.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/php_succinctly', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 5\n    },\n    {\n        header_title: ' CSS3',\n        header_subtitle: 'Peter Shaw',\n        cardImage: { url: './assets/card/images/Tile_6.png', tag: 'ui' },\n        cardContent: 'In CSS3 Succinctly, author Peter Shaw provides an overview of the latest features available for custom cascading style sheets.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/css3', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 6\n    },\n    {\n        header_title: ' ASP.NET Core',\n        header_subtitle: 'Simone Chiaretta and Ugo Lattanzi',\n        cardImage: { url: './assets/card/images/Tile_7.png', tag: 'server' },\n        cardContent: 'In ASP.NET Core Succinctly, seasoned authors Simone Chiaretta and Ugo Lattanzi update you on all the advances provided by Microsoft’s landmark framework.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/asp_net_core_succinctly', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 7\n    },\n    {\n        header_title: 'Aurelia',\n        header_subtitle: 'Matthew Duffield',\n        cardImage: { url: './assets/card/images/Tile_8.png', tag: 'client' },\n        cardContent: 'Aurelia is a relatively new, open-source JavaScript library/framework that simplifies the creation of web-based applications.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/aurelia_succinctly', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 8\n    },\n    {\n        header_title: 'ECMAScript 6 ',\n        header_subtitle: 'Matthew Duffield',\n        cardImage: { url: './assets/card/images/Tile_9.png', tag: 'client' },\n        cardContent: 'ECMAScript 6 (ES6), also known as ECMAScript 2015, brings new functionality and features to the table that developers have been wanting for a long time.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/ecmascript_6_succinctly', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 9\n    },\n    {\n        header_title: 'JavaScript',\n        header_subtitle: 'Cody Lindley',\n        cardImage: { url: './assets/card/images/Tile_10.png', tag: 'client' },\n        cardContent: 'JavaScript Succinctly was written to give readers an accurate, concise examination of JavaScript objects and their supporting nuances.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/javascript', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 10\n    },\n    {\n        header_title: 'Knockout.js',\n        header_subtitle: 'Ryan Hodson',\n        cardImage: { url: './assets/card/images/Tile_11.png', tag: 'client' },\n        cardContent: 'Knockout.js Succinctly is intended for professional web developers who need to build dynamic, scalable user interfaces with minimal code.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/knockoutjs', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 11\n    },\n    {\n        header_title: 'Angular 2',\n        header_subtitle: 'Joseph D. Booth',\n        cardImage: { url: './assets/card/images/Tile_12.png', tag: 'client' },\n        cardContent: 'Angular 2 is a massively popular JavaScript framework built to take advantage of component development in web apps.',\n        card_action_btn: {\n            action_btns: [{ tag: 'a', href: 'https://www.syncfusion.com/ebooks/angular2_succinctly', target: '_blank', text: 'Read More' }],\n            isVertical: true\n        },\n        isHorizontal: false,\n        id : 12\n    },\n];\n// tslint:enable:max-line-length","panels-data.ts":"/**\n * Datasource\n */\nlet panelData: any = [\n    {\n        'panel1': { 'sizeX': 4, 'sizeY': 3, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 2, 'sizeY': 3, 'row': 0, 'col': 4 },\n        'panel3': { 'sizeX': 6, 'sizeY': 2, 'row': 3, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 6, 'sizeY': 1, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 0 },\n        'panel3': { 'sizeX': 4, 'sizeY': 3, 'row': 1, 'col': 2 },\n        'panel4': { 'sizeX': 6, 'sizeY': 1, 'row': 4, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 6, 'sizeY': 1, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 3, 'sizeY': 3, 'row': 1, 'col': 0 },\n        'panel3': { 'sizeX': 3, 'sizeY': 3, 'row': 1, 'col': 3 },\n        'panel4': { 'sizeX': 6, 'sizeY': 1, 'row': 4, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 6, 'sizeY': 1, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 0 },\n        'panel3': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 2 },\n        'panel4': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 4 },\n        'panel5': { 'sizeX': 6, 'sizeY': 1, 'row': 4, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 6, 'sizeY': 1, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 4, 'sizeY': 3, 'row': 1, 'col': 0 },\n        'panel3': { 'sizeX': 2, 'sizeY': 3, 'row': 1, 'col': 4 },\n        'panel4': { 'sizeX': 6, 'sizeY': 1, 'row': 4, 'col': 0 }\n    },\n    {\n        'panel1': { 'sizeX': 2, 'sizeY': 3, 'row': 0, 'col': 0 },\n        'panel2': { 'sizeX': 2, 'sizeY': 3, 'row': 0, 'col': 2 },\n        'panel3': { 'sizeX': 2, 'sizeY': 3, 'row': 0, 'col': 4 },\n        'panel4': { 'sizeX': 6, 'sizeY': 2, 'row': 3, 'col': 0 }\n    }\n];\nexport default panelData;\n"}