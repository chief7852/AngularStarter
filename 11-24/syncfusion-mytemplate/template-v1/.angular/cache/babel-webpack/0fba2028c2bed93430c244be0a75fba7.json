{"ast":null,"code":"import _toConsumableArray from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Component, Event, EventHandler, NotifyPropertyChanges, Observer, Property, SanitizeHtmlHelper, addClass, append, attributes, closest, deleteObject, detach, getInstance, getUniqueID, getValue, isBlazor, isNullOrUndefined, isRippleEnabled, removeClass, rippleEffect, setValue } from '@syncfusion/ej2-base';\n/**\n * Initialize wrapper element for angular.\n *\n * @private\n *\n * @param {CreateElementArgs} createElement - Specifies created element args\n * @param {string} tag - Specifies tag name\n * @param {string} type - Specifies type name\n * @param {HTMLInputElement} element - Specifies input element\n * @param {string} WRAPPER - Specifies wrapper element\n * @param {string} role - Specifies role\n * @returns {HTMLInputElement} - Input Element\n */\n\nfunction wrapperInitialize(createElement, tag, type, element, WRAPPER, role) {\n  var input = element;\n\n  if (element.tagName === tag) {\n    var ejInstance = getValue('ej2_instances', element);\n    input = createElement('input', {\n      attrs: {\n        'type': type\n      }\n    });\n    var props = ['change', 'cssClass', 'label', 'labelPosition', 'id'];\n\n    for (var index = 0, len = element.attributes.length; index < len; index++) {\n      if (props.indexOf(element.attributes[index].nodeName) === -1) {\n        input.setAttribute(element.attributes[index].nodeName, element.attributes[index].nodeValue);\n      }\n    }\n\n    attributes(element, {\n      'class': WRAPPER,\n      'role': role,\n      'aria-checked': 'false'\n    });\n    element.appendChild(input);\n    setValue('ej2_instances', ejInstance, input);\n    deleteObject(element, 'ej2_instances');\n  }\n\n  return input;\n}\n/**\n * Get the text node.\n *\n * @param {HTMLElement} element - Specifies html element\n * @private\n * @returns {Node} - Text node.\n */\n\n\nfunction getTextNode(element) {\n  var node;\n  var childnode = element.childNodes;\n\n  for (var i = 0; i < childnode.length; i++) {\n    node = childnode[i];\n\n    if (node.nodeType === 3) {\n      return node;\n    }\n  }\n\n  return null;\n}\n/**\n * Destroy the button components.\n *\n * @private\n * @param {Switch | CheckBox} ejInst - Specifies eJ2 Instance\n * @param {Element} wrapper - Specifies wrapper element\n * @param {string} tagName - Specifies tag name\n * @returns {void}\n */\n\n\nfunction _destroy(ejInst, wrapper, tagName) {\n  if (tagName === 'INPUT') {\n    wrapper.parentNode.insertBefore(ejInst.element, wrapper);\n    detach(wrapper);\n    ejInst.element.checked = false;\n    ['name', 'value', 'disabled'].forEach(function (key) {\n      ejInst.element.removeAttribute(key);\n    });\n  } else {\n    ['role', 'aria-checked', 'class'].forEach(function (key) {\n      wrapper.removeAttribute(key);\n    });\n    wrapper.innerHTML = '';\n  }\n}\n/**\n * Initialize control pre rendering.\n *\n * @private\n * @param {Switch | CheckBox} proxy - Specifies proxy\n * @param {string} control - Specifies control\n * @param {string} wrapper - Specifies wrapper element\n * @param {HTMLInputElement} element - Specifies input element\n * @param {string} moduleName - Specifies module name\n * @returns {void}\n */\n\n\nfunction _preRender(proxy, control, wrapper, element, moduleName) {\n  element = wrapperInitialize(proxy.createElement, control, 'checkbox', element, wrapper, moduleName);\n  proxy.element = element;\n\n  if (proxy.element.getAttribute('type') !== 'checkbox') {\n    proxy.element.setAttribute('type', 'checkbox');\n  }\n\n  if (!proxy.element.id) {\n    proxy.element.id = getUniqueID('e-' + moduleName);\n  }\n}\n/**\n * Creates CheckBox component UI with theming and ripple support.\n *\n * @private\n * @param {CreateElementArgs} createElement - Specifies Created Element args\n * @param {boolean} enableRipple - Specifies ripple effect\n * @param {CheckBoxUtilModel} options - Specifies Checkbox util Model\n * @returns {Element} - Checkbox Element\n */\n\n\nfunction createCheckBox(createElement) {\n  var enableRipple = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var wrapper = createElement('div', {\n    className: 'e-checkbox-wrapper e-css'\n  });\n\n  if (options.cssClass) {\n    addClass([wrapper], options.cssClass.split(' '));\n  }\n\n  if (options.enableRtl) {\n    wrapper.classList.add('e-rtl');\n  }\n\n  if (enableRipple) {\n    var rippleSpan = createElement('span', {\n      className: 'e-ripple-container'\n    });\n    rippleEffect(rippleSpan, {\n      isCenterRipple: true,\n      duration: 400\n    });\n    wrapper.appendChild(rippleSpan);\n  }\n\n  var frameSpan = createElement('span', {\n    className: 'e-frame e-icons'\n  });\n\n  if (options.checked) {\n    frameSpan.classList.add('e-check');\n  }\n\n  wrapper.appendChild(frameSpan);\n\n  if (options.label) {\n    var labelSpan = createElement('span', {\n      className: 'e-label'\n    });\n\n    if (options.disableHtmlEncode) {\n      labelSpan.textContent = options.label;\n    } else {\n      labelSpan.innerHTML = options.label;\n    }\n\n    wrapper.appendChild(labelSpan);\n  }\n\n  return wrapper;\n}\n/**\n * Handles ripple mouse.\n *\n * @private\n * @param {MouseEvent} e - Specifies mouse event\n * @param {Element} rippleSpan - Specifies Ripple span element\n * @returns {void}\n */\n\n\nfunction rippleMouseHandler(e, rippleSpan) {\n  if (rippleSpan) {\n    var event = document.createEvent('MouseEvents');\n    event.initEvent(e.type, false, true);\n    rippleSpan.dispatchEvent(event);\n  }\n}\n/**\n * Append hidden input to given element\n *\n * @private\n * @param {Switch | CheckBox} proxy - Specifies Proxy\n * @param {Element} wrap - Specifies Wrapper ELement\n * @returns {void}\n */\n\n\nfunction setHiddenInput(proxy, wrap) {\n  if (proxy.element.getAttribute('ejs-for')) {\n    wrap.appendChild(proxy.createElement('input', {\n      attrs: {\n        'name': proxy.name || proxy.element.name,\n        'value': 'false',\n        'type': 'hidden'\n      }\n    }));\n  }\n}\n/**\n * Common modules\n */\n\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar buttonObserver = new Observer();\nvar cssClassName = {\n  RTL: 'e-rtl',\n  BUTTON: 'e-btn',\n  PRIMARY: 'e-primary',\n  ICONBTN: 'e-icon-btn'\n};\n/**\n * The Button is a graphical user interface element that triggers an event on its click action. It can contain a text, an image, or both.\n * ```html\n * <button id=\"button\">Button</button>\n * ```\n * ```typescript\n * <script>\n * var btnObj = new Button();\n * btnObj.appendTo(\"#button\");\n * </script>\n * ```\n */\n\nvar Button = /*#__PURE__*/function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  /**\n   * Constructor for creating the widget\n   *\n   * @param  {ButtonModel} options - Specifies the button model\n   * @param  {string|HTMLButtonElement} element - Specifies the target element\n   */\n  function Button(options, element) {\n    _classCallCheck(this, Button);\n\n    return _super.call(this, options, element);\n  }\n\n  _createClass(Button, [{\n    key: \"preRender\",\n    value: function preRender() {// pre render code snippets\n    }\n    /**\n     * Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.initialize();\n      this.removeRippleEffect = rippleEffect(this.element, {\n        selector: '.' + cssClassName.BUTTON\n      });\n      this.renderComplete();\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      if (this.cssClass) {\n        addClass([this.element], this.cssClass.split(' '));\n      }\n\n      if (this.isPrimary) {\n        this.element.classList.add(cssClassName.PRIMARY);\n      }\n\n      if (!isBlazor() || isBlazor() && this.getModuleName() !== 'progress-btn') {\n        if (this.content) {\n          var tempContent = this.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(this.content) : this.content;\n          this.element.innerHTML = tempContent;\n        }\n\n        this.setIconCss();\n      }\n\n      if (this.enableRtl) {\n        this.element.classList.add(cssClassName.RTL);\n      }\n\n      if (this.disabled) {\n        this.controlStatus(this.disabled);\n      } else {\n        this.wireEvents();\n      }\n    }\n  }, {\n    key: \"controlStatus\",\n    value: function controlStatus(disabled) {\n      this.element.disabled = disabled;\n    }\n  }, {\n    key: \"setIconCss\",\n    value: function setIconCss() {\n      if (this.iconCss) {\n        var span = this.createElement('span', {\n          className: 'e-btn-icon ' + this.iconCss\n        });\n\n        if (!this.element.textContent.trim()) {\n          this.element.classList.add(cssClassName.ICONBTN);\n        } else {\n          span.classList.add('e-icon-' + this.iconPosition.toLowerCase());\n\n          if (this.iconPosition === 'Top' || this.iconPosition === 'Bottom') {\n            this.element.classList.add('e-' + this.iconPosition.toLowerCase() + '-icon-btn');\n          }\n        }\n\n        var node = this.element.childNodes[0];\n\n        if (node && (this.iconPosition === 'Left' || this.iconPosition === 'Top')) {\n          this.element.insertBefore(span, node);\n        } else {\n          this.element.appendChild(span);\n        }\n      }\n    }\n  }, {\n    key: \"wireEvents\",\n    value: function wireEvents() {\n      if (this.isToggle) {\n        EventHandler.add(this.element, 'click', this.btnClickHandler, this);\n      }\n    }\n  }, {\n    key: \"unWireEvents\",\n    value: function unWireEvents() {\n      if (this.isToggle) {\n        EventHandler.remove(this.element, 'click', this.btnClickHandler);\n      }\n    }\n  }, {\n    key: \"btnClickHandler\",\n    value: function btnClickHandler() {\n      if (this.element.classList.contains('e-active')) {\n        this.element.classList.remove('e-active');\n      } else {\n        this.element.classList.add('e-active');\n      }\n    }\n    /**\n     * Destroys the widget.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var classList = [cssClassName.PRIMARY, cssClassName.RTL, cssClassName.ICONBTN, 'e-success', 'e-info', 'e-danger', 'e-warning', 'e-flat', 'e-outline', 'e-small', 'e-bigger', 'e-active', 'e-round', 'e-top-icon-btn', 'e-bottom-icon-btn'];\n\n      if (this.cssClass) {\n        classList = classList.concat(this.cssClass.split(' '));\n      }\n\n      _get(_getPrototypeOf(Button.prototype), \"destroy\", this).call(this);\n\n      removeClass([this.element], classList);\n\n      if (!this.element.getAttribute('class')) {\n        this.element.removeAttribute('class');\n      }\n\n      if (this.disabled) {\n        this.element.removeAttribute('disabled');\n      }\n\n      if (this.content) {\n        this.element.innerHTML = this.element.innerHTML.replace(this.content, '');\n      }\n\n      var span = this.element.querySelector('span.e-btn-icon');\n\n      if (span) {\n        detach(span);\n      }\n\n      this.unWireEvents();\n\n      if (isRippleEnabled) {\n        this.removeRippleEffect();\n      }\n    }\n    /**\n     * Get component name.\n     *\n     * @returns {string} - Module name\n     * @private\n     */\n\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return 'btn';\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Persist Data\n     * @private\n     */\n\n  }, {\n    key: \"getPersistData\",\n    value: function getPersistData() {\n      return this.addOnPersist([]);\n    }\n    /**\n     * Dynamically injects the required modules to the component.\n     *\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"onPropertyChanged\",\n    value:\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param  {ButtonModel} newProp - Specifies new properties\n     * @param  {ButtonModel} oldProp - Specifies old properties\n     * @returns {void}\n     * @private\n     */\n    function onPropertyChanged(newProp, oldProp) {\n      var span = this.element.querySelector('span.e-btn-icon');\n\n      for (var _i = 0, _Object$keys = Object.keys(newProp); _i < _Object$keys.length; _i++) {\n        var prop = _Object$keys[_i];\n\n        switch (prop) {\n          case 'isPrimary':\n            if (newProp.isPrimary) {\n              this.element.classList.add(cssClassName.PRIMARY);\n            } else {\n              this.element.classList.remove(cssClassName.PRIMARY);\n            }\n\n            break;\n\n          case 'disabled':\n            this.controlStatus(newProp.disabled);\n            break;\n\n          case 'iconCss':\n            {\n              if (span) {\n                if (newProp.iconCss) {\n                  span.className = 'e-btn-icon ' + newProp.iconCss;\n\n                  if (this.element.textContent.trim()) {\n                    if (this.iconPosition === 'Left') {\n                      span.classList.add('e-icon-left');\n                    } else {\n                      span.classList.add('e-icon-right');\n                    }\n                  }\n                } else {\n                  detach(span);\n                }\n              } else {\n                this.setIconCss();\n              }\n\n              break;\n            }\n\n          case 'iconPosition':\n            removeClass([this.element], ['e-top-icon-btn', 'e-bottom-icon-btn']);\n            span = this.element.querySelector('span.e-btn-icon');\n\n            if (span) {\n              detach(span);\n            }\n\n            this.setIconCss();\n            break;\n\n          case 'cssClass':\n            if (oldProp.cssClass) {\n              removeClass([this.element], oldProp.cssClass.split(' '));\n            }\n\n            if (newProp.cssClass) {\n              addClass([this.element], newProp.cssClass.split(' '));\n            }\n\n            break;\n\n          case 'enableRtl':\n            if (newProp.enableRtl) {\n              this.element.classList.add(cssClassName.RTL);\n            } else {\n              this.element.classList.remove(cssClassName.RTL);\n            }\n\n            break;\n\n          case 'content':\n            {\n              var node = getTextNode(this.element);\n\n              if (!node) {\n                this.element.classList.remove(cssClassName.ICONBTN);\n              }\n\n              if (!isBlazor() || isBlazor() && !this.isServerRendered && this.getModuleName() !== 'progress-btn') {\n                if (this.enableHtmlSanitizer) {\n                  newProp.content = SanitizeHtmlHelper.sanitize(newProp.content);\n                }\n\n                this.element.innerHTML = newProp.content;\n                this.setIconCss();\n              }\n\n              break;\n            }\n\n          case 'isToggle':\n            if (newProp.isToggle) {\n              EventHandler.add(this.element, 'click', this.btnClickHandler, this);\n            } else {\n              EventHandler.remove(this.element, 'click', this.btnClickHandler);\n              removeClass([this.element], ['e-active']);\n            }\n\n            break;\n        }\n      }\n    }\n    /**\n     * Click the button element\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.element.click();\n    }\n    /**\n     * Sets the focus to Button\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: \"focusIn\",\n    value: function focusIn() {\n      this.element.focus();\n    }\n  }], [{\n    key: \"Inject\",\n    value: function Inject() {// Inject code snippets\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n__decorate([Property('Left')], Button.prototype, \"iconPosition\", void 0);\n\n__decorate([Property('')], Button.prototype, \"iconCss\", void 0);\n\n__decorate([Property(false)], Button.prototype, \"disabled\", void 0);\n\n__decorate([Property(false)], Button.prototype, \"isPrimary\", void 0);\n\n__decorate([Property('')], Button.prototype, \"cssClass\", void 0);\n\n__decorate([Property('')], Button.prototype, \"content\", void 0);\n\n__decorate([Property(false)], Button.prototype, \"isToggle\", void 0);\n\n__decorate([Property()], Button.prototype, \"locale\", void 0);\n\n__decorate([Property(false)], Button.prototype, \"enableHtmlSanitizer\", void 0);\n\n__decorate([Event()], Button.prototype, \"created\", void 0);\n\nButton = __decorate([NotifyPropertyChanges], Button);\n/**\n * Button modules\n */\n\nvar __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar CHECK = 'e-check';\nvar DISABLED = 'e-checkbox-disabled';\nvar FRAME = 'e-frame';\nvar INDETERMINATE = 'e-stop';\nvar LABEL = 'e-label';\nvar RIPPLE = 'e-ripple-container';\nvar RIPPLECHECK = 'e-ripple-check';\nvar RIPPLEINDETERMINATE = 'e-ripple-stop';\nvar RTL = 'e-rtl';\nvar WRAPPER = 'e-checkbox-wrapper';\nvar containerAttr = ['title', 'class', 'style', 'disabled', 'readonly', 'name', 'value'];\n/**\n * The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.\n * It contains checked, unchecked, and indeterminate states.\n * ```html\n * <input type=\"checkbox\" id=\"checkbox\"/>\n * <script>\n * var checkboxObj = new CheckBox({ label: \"Default\" });\n * checkboxObj.appendTo(\"#checkbox\");\n * </script>\n * ```\n */\n\nvar CheckBox = /*#__PURE__*/function (_Component2) {\n  _inherits(CheckBox, _Component2);\n\n  var _super2 = _createSuper(CheckBox);\n\n  /**\n   * Constructor for creating the widget\n   *\n   * @private\n   * @param {CheckBoxModel} options - Specifies checkbox model\n   * @param {string | HTMLInputElement} element - Specifies target element\n   */\n  function CheckBox(options, element) {\n    var _this;\n\n    _classCallCheck(this, CheckBox);\n\n    _this = _super2.call(this, options, element);\n    _this.isFocused = false;\n    _this.isMouseClick = false;\n    return _this;\n  }\n\n  _createClass(CheckBox, [{\n    key: \"changeState\",\n    value: function changeState(state) {\n      var ariaState;\n      var rippleSpan;\n      var frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];\n\n      if (isRippleEnabled) {\n        rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n      }\n\n      if (state === 'check') {\n        frameSpan.classList.remove(INDETERMINATE);\n        frameSpan.classList.add(CHECK);\n\n        if (rippleSpan) {\n          rippleSpan.classList.remove(RIPPLEINDETERMINATE);\n          rippleSpan.classList.add(RIPPLECHECK);\n        }\n\n        ariaState = 'true';\n        this.element.checked = true;\n      } else if (state === 'uncheck') {\n        removeClass([frameSpan], [CHECK, INDETERMINATE]);\n\n        if (rippleSpan) {\n          removeClass([rippleSpan], [RIPPLECHECK, RIPPLEINDETERMINATE]);\n        }\n\n        ariaState = 'false';\n        this.element.checked = false;\n      } else {\n        frameSpan.classList.remove(CHECK);\n        frameSpan.classList.add(INDETERMINATE);\n\n        if (rippleSpan) {\n          rippleSpan.classList.remove(RIPPLECHECK);\n          rippleSpan.classList.add(RIPPLEINDETERMINATE);\n        }\n\n        ariaState = 'mixed';\n        this.element.indeterminate = true;\n      }\n\n      this.getWrapper().setAttribute('aria-checked', ariaState);\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(event) {\n      if (this.isMouseClick) {\n        this.focusOutHandler();\n        this.isMouseClick = false;\n      }\n\n      if (this.indeterminate) {\n        this.changeState(this.checked ? 'check' : 'uncheck');\n        this.indeterminate = false;\n        this.element.indeterminate = false;\n      } else if (this.checked) {\n        this.changeState('uncheck');\n        this.checked = false;\n      } else {\n        this.changeState('check');\n        this.checked = true;\n      }\n\n      var changeEventArgs = {\n        checked: this.updateVueArrayModel(false),\n        event: event\n      };\n      this.trigger('change', changeEventArgs);\n      event.stopPropagation();\n    }\n    /**\n     * Destroys the widget.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      var wrapper = this.getWrapper();\n\n      _get(_getPrototypeOf(CheckBox.prototype), \"destroy\", this).call(this);\n\n      if (this.wrapper) {\n        wrapper = this.wrapper;\n\n        if (!this.disabled) {\n          this.unWireEvents();\n        }\n\n        if (this.tagName === 'INPUT') {\n          if (this.getWrapper() && wrapper.parentNode) {\n            wrapper.parentNode.insertBefore(this.element, wrapper);\n          }\n\n          detach(wrapper);\n          this.element.checked = false;\n\n          if (this.indeterminate) {\n            this.element.indeterminate = false;\n          }\n\n          ['name', 'value', 'disabled'].forEach(function (key) {\n            _this2.element.removeAttribute(key);\n          });\n        } else {\n          ['role', 'aria-checked', 'class'].forEach(function (key) {\n            wrapper.removeAttribute(key);\n          });\n          wrapper.innerHTML = '';\n        }\n      }\n    }\n  }, {\n    key: \"focusHandler\",\n    value: function focusHandler() {\n      this.isFocused = true;\n    }\n  }, {\n    key: \"focusOutHandler\",\n    value: function focusOutHandler() {\n      var wrapper = this.getWrapper();\n\n      if (wrapper) {\n        wrapper.classList.remove('e-focus');\n      }\n\n      this.isFocused = false;\n    }\n    /**\n     * Gets the module name.\n     *\n     * @private\n     * @returns {string} - Module Name\n     */\n\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return 'checkbox';\n    }\n    /**\n     * Gets the properties to be maintained in the persistence state.\n     *\n     * @private\n     * @returns {string} - Persist Data\n     */\n\n  }, {\n    key: \"getPersistData\",\n    value: function getPersistData() {\n      return this.addOnPersist(['checked', 'indeterminate']);\n    }\n  }, {\n    key: \"getWrapper\",\n    value: function getWrapper() {\n      if (this.element && this.element.parentElement) {\n        return this.element.parentElement.parentElement;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      if (isNullOrUndefined(this.initialCheckedValue)) {\n        this.initialCheckedValue = this.checked;\n      }\n\n      if (this.name) {\n        this.element.setAttribute('name', this.name);\n      }\n\n      if (this.value) {\n        this.element.setAttribute('value', this.value);\n\n        if (this.isVue && typeof this.value === 'boolean' && this.value === true) {\n          this.setProperties({\n            'checked': true\n          }, true);\n        }\n      }\n\n      if (this.checked) {\n        this.changeState('check');\n      }\n\n      if (this.indeterminate) {\n        this.changeState();\n      }\n\n      if (this.disabled) {\n        this.setDisabled();\n      }\n    }\n  }, {\n    key: \"initWrapper\",\n    value: function initWrapper() {\n      var wrapper = this.element.parentElement;\n\n      if (!wrapper.classList.contains(WRAPPER)) {\n        wrapper = this.createElement('div', {\n          className: WRAPPER,\n          attrs: {\n            'role': 'checkbox',\n            'aria-checked': 'false'\n          }\n        });\n        this.element.parentNode.insertBefore(wrapper, this.element);\n      }\n\n      var label = this.createElement('label', {\n        attrs: {\n          for: this.element.id\n        }\n      });\n      var frameSpan = this.createElement('span', {\n        className: 'e-icons ' + FRAME\n      });\n      wrapper.classList.add('e-wrapper');\n\n      if (this.enableRtl) {\n        wrapper.classList.add(RTL);\n      }\n\n      if (this.cssClass) {\n        addClass([wrapper], this.cssClass.split(' '));\n      }\n\n      wrapper.appendChild(label);\n      label.appendChild(this.element);\n      setHiddenInput(this, label);\n      label.appendChild(frameSpan);\n\n      if (isRippleEnabled) {\n        var rippleSpan = this.createElement('span', {\n          className: RIPPLE\n        });\n\n        if (this.labelPosition === 'Before') {\n          label.appendChild(rippleSpan);\n        } else {\n          label.insertBefore(rippleSpan, frameSpan);\n        }\n\n        rippleEffect(rippleSpan, {\n          duration: 400,\n          isCenterRipple: true\n        });\n      }\n\n      if (this.label) {\n        this.setText(this.label);\n      }\n    }\n  }, {\n    key: \"keyUpHandler\",\n    value: function keyUpHandler() {\n      if (this.isFocused) {\n        this.getWrapper().classList.add('e-focus');\n      }\n    }\n  }, {\n    key: \"labelMouseDownHandler\",\n    value: function labelMouseDownHandler(e) {\n      this.isMouseClick = true;\n      var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n      rippleMouseHandler(e, rippleSpan);\n    }\n  }, {\n    key: \"labelMouseUpHandler\",\n    value: function labelMouseUpHandler(e) {\n      this.isMouseClick = true;\n      var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n\n      if (rippleSpan) {\n        var rippleElem = rippleSpan.querySelectorAll('.e-ripple-element');\n\n        for (var i = 0; i < rippleElem.length - 1; i++) {\n          rippleSpan.removeChild(rippleSpan.childNodes[i]);\n        }\n\n        rippleMouseHandler(e, rippleSpan);\n      }\n    }\n    /**\n     * Called internally if any of the property value changes.\n     *\n     * @private\n     * @param {CheckBoxModel} newProp - Specifies new Properties\n     * @param {CheckBoxModel} oldProp - Specifies old Properties\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"onPropertyChanged\",\n    value: function onPropertyChanged(newProp, oldProp) {\n      var wrapper = this.getWrapper();\n\n      for (var _i2 = 0, _Object$keys2 = Object.keys(newProp); _i2 < _Object$keys2.length; _i2++) {\n        var prop = _Object$keys2[_i2];\n\n        switch (prop) {\n          case 'checked':\n            this.indeterminate = false;\n            this.element.indeterminate = false;\n            this.changeState(newProp.checked ? 'check' : 'uncheck');\n            break;\n\n          case 'indeterminate':\n            if (newProp.indeterminate) {\n              this.changeState();\n            } else {\n              this.element.indeterminate = false;\n              this.changeState(this.checked ? 'check' : 'uncheck');\n            }\n\n            break;\n\n          case 'disabled':\n            if (newProp.disabled) {\n              this.setDisabled();\n              this.wrapper = this.getWrapper();\n              this.unWireEvents();\n            } else {\n              this.element.disabled = false;\n              wrapper.classList.remove(DISABLED);\n              wrapper.setAttribute('aria-disabled', 'false');\n              this.wireEvents();\n            }\n\n            break;\n\n          case 'cssClass':\n            if (oldProp.cssClass) {\n              removeClass([wrapper], oldProp.cssClass.split(' '));\n            }\n\n            if (newProp.cssClass) {\n              addClass([wrapper], newProp.cssClass.split(' '));\n            }\n\n            break;\n\n          case 'enableRtl':\n            if (newProp.enableRtl) {\n              wrapper.classList.add(RTL);\n            } else {\n              wrapper.classList.remove(RTL);\n            }\n\n            break;\n\n          case 'label':\n            this.setText(newProp.label);\n            break;\n\n          case 'labelPosition':\n            {\n              var label = wrapper.getElementsByClassName(LABEL)[0];\n              var labelWrap = wrapper.getElementsByTagName('label')[0];\n              detach(label);\n\n              if (newProp.labelPosition === 'After') {\n                labelWrap.appendChild(label);\n              } else {\n                labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);\n              }\n\n              break;\n            }\n\n          case 'name':\n            this.element.setAttribute('name', newProp.name);\n            break;\n\n          case 'value':\n            if (this.isVue && typeof newProp.value === 'object') {\n              break;\n            }\n\n            this.element.setAttribute('value', newProp.value);\n            break;\n\n          case 'htmlAttributes':\n            this.updateHtmlAttributeToWrapper();\n            break;\n        }\n      }\n    }\n    /**\n     * Initialize Angular, React and Unique ID support.\n     *\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"preRender\",\n    value: function preRender() {\n      var element = this.element;\n      this.formElement = closest(this.element, 'form');\n      this.tagName = this.element.tagName;\n      element = wrapperInitialize(this.createElement, 'EJS-CHECKBOX', 'checkbox', element, WRAPPER, 'checkbox');\n      this.element = element;\n\n      if (this.element.getAttribute('type') !== 'checkbox') {\n        this.element.setAttribute('type', 'checkbox');\n      }\n\n      if (!this.element.id) {\n        this.element.id = getUniqueID('e-' + this.getModuleName());\n      }\n    }\n    /**\n     * Initialize the control rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.initWrapper();\n      this.initialize();\n\n      if (!this.disabled) {\n        this.wireEvents();\n      }\n\n      this.updateHtmlAttributeToWrapper();\n      this.updateVueArrayModel(true);\n      this.renderComplete();\n      this.wrapper = this.getWrapper();\n    }\n  }, {\n    key: \"setDisabled\",\n    value: function setDisabled() {\n      var wrapper = this.getWrapper();\n      this.element.disabled = true;\n      wrapper.classList.add(DISABLED);\n      wrapper.setAttribute('aria-disabled', 'true');\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      var wrapper = this.getWrapper();\n\n      if (!wrapper) {\n        return;\n      }\n\n      var label = wrapper.getElementsByClassName(LABEL)[0];\n\n      if (label) {\n        label.textContent = text;\n      } else {\n        text = this.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(text) : text;\n        label = this.createElement('span', {\n          className: LABEL,\n          innerHTML: text\n        });\n        var labelWrap = wrapper.getElementsByTagName('label')[0];\n\n        if (this.labelPosition === 'Before') {\n          labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);\n        } else {\n          labelWrap.appendChild(label);\n        }\n      }\n    }\n  }, {\n    key: \"changeHandler\",\n    value: function changeHandler(e) {\n      e.stopPropagation();\n    }\n  }, {\n    key: \"formResetHandler\",\n    value: function formResetHandler() {\n      this.checked = this.initialCheckedValue;\n      this.element.checked = this.initialCheckedValue;\n    }\n  }, {\n    key: \"unWireEvents\",\n    value: function unWireEvents() {\n      var wrapper = this.wrapper;\n      EventHandler.remove(this.element, 'click', this.clickHandler);\n      EventHandler.remove(this.element, 'keyup', this.keyUpHandler);\n      EventHandler.remove(this.element, 'focus', this.focusHandler);\n      EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n      var label = wrapper.getElementsByTagName('label')[0];\n      EventHandler.remove(label, 'mousedown', this.labelMouseDownHandler);\n      EventHandler.remove(label, 'mouseup', this.labelMouseUpHandler);\n\n      if (this.formElement) {\n        EventHandler.remove(this.formElement, 'reset', this.formResetHandler);\n      }\n\n      if (this.tagName === 'EJS-CHECKBOX') {\n        EventHandler.remove(this.element, 'change', this.changeHandler);\n      }\n    }\n  }, {\n    key: \"wireEvents\",\n    value: function wireEvents() {\n      var wrapper = this.getWrapper();\n      EventHandler.add(this.element, 'click', this.clickHandler, this);\n      EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);\n      EventHandler.add(this.element, 'focus', this.focusHandler, this);\n      EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n      var label = wrapper.getElementsByTagName('label')[0];\n      EventHandler.add(label, 'mousedown', this.labelMouseDownHandler, this);\n      EventHandler.add(label, 'mouseup', this.labelMouseUpHandler, this);\n\n      if (this.formElement) {\n        EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n      }\n\n      if (this.tagName === 'EJS-CHECKBOX') {\n        EventHandler.add(this.element, 'change', this.changeHandler, this);\n      }\n    }\n  }, {\n    key: \"updateVueArrayModel\",\n    value: function updateVueArrayModel(init) {\n      if (this.isVue && typeof this.value === 'object') {\n        var value = this.element.value;\n\n        if (value && this.value) {\n          if (init) {\n            for (var i = 0; i < this.value.length; i++) {\n              if (value === this.value[i]) {\n                this.changeState('check');\n                this.setProperties({\n                  'checked': true\n                }, true);\n              }\n            }\n          } else {\n            var index = this.value.indexOf(value);\n\n            if (this.checked) {\n              if (index < 0) {\n                this.value.push(value);\n              }\n            } else {\n              if (index > -1) {\n                this.value.splice(index, 1);\n              }\n            } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n            return this.value;\n          }\n        }\n      }\n\n      return this.element.checked;\n    }\n  }, {\n    key: \"updateHtmlAttributeToWrapper\",\n    value: function updateHtmlAttributeToWrapper() {\n      if (!isNullOrUndefined(this.htmlAttributes)) {\n        for (var _i3 = 0, _Object$keys3 = Object.keys(this.htmlAttributes); _i3 < _Object$keys3.length; _i3++) {\n          var key = _Object$keys3[_i3];\n\n          if (containerAttr.indexOf(key) > -1) {\n            var wrapper = this.getWrapper();\n\n            if (key === 'class') {\n              addClass([wrapper], this.htmlAttributes[key].split(' '));\n            } else if (key === 'title') {\n              wrapper.setAttribute(key, this.htmlAttributes[key]);\n            } else if (key === 'style') {\n              var frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];\n              frameSpan.setAttribute(key, this.htmlAttributes[key]);\n            } else {\n              this.element.setAttribute(key, this.htmlAttributes[key]);\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Click the CheckBox element\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.element.click();\n    }\n    /**\n     * Sets the focus to CheckBox\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: \"focusIn\",\n    value: function focusIn() {\n      this.element.focus();\n    }\n  }]);\n\n  return CheckBox;\n}(Component);\n\n__decorate$1([Event()], CheckBox.prototype, \"change\", void 0);\n\n__decorate$1([Event()], CheckBox.prototype, \"created\", void 0);\n\n__decorate$1([Property(false)], CheckBox.prototype, \"checked\", void 0);\n\n__decorate$1([Property('')], CheckBox.prototype, \"cssClass\", void 0);\n\n__decorate$1([Property(false)], CheckBox.prototype, \"disabled\", void 0);\n\n__decorate$1([Property(false)], CheckBox.prototype, \"indeterminate\", void 0);\n\n__decorate$1([Property('')], CheckBox.prototype, \"label\", void 0);\n\n__decorate$1([Property('After')], CheckBox.prototype, \"labelPosition\", void 0);\n\n__decorate$1([Property('')], CheckBox.prototype, \"name\", void 0);\n\n__decorate$1([Property('')], CheckBox.prototype, \"value\", void 0);\n\n__decorate$1([Property(false)], CheckBox.prototype, \"enableHtmlSanitizer\", void 0);\n\n__decorate$1([Property({})], CheckBox.prototype, \"htmlAttributes\", void 0);\n\nCheckBox = __decorate$1([NotifyPropertyChanges], CheckBox);\n/**\n * CheckBox modules\n */\n\nvar __decorate$2 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar RadioButton_1;\nvar LABEL$1 = 'e-label';\nvar RIPPLE$1 = 'e-ripple-container';\nvar RTL$1 = 'e-rtl';\nvar WRAPPER$1 = 'e-radio-wrapper';\nvar ATTRIBUTES = ['title', 'class', 'style', 'disabled', 'readonly', 'name', 'value'];\n/**\n * The RadioButton is a graphical user interface element that allows you to select one option from the choices.\n * It contains checked and unchecked states.\n * ```html\n * <input type=\"radio\" id=\"radio\"/>\n * <script>\n * var radioObj = new RadioButton({ label: \"Default\" });\n * radioObj.appendTo(\"#radio\");\n * </script>\n * ```\n */\n\nvar RadioButton = RadioButton_1 = /*#__PURE__*/function (_Component3) {\n  _inherits(RadioButton, _Component3);\n\n  var _super3 = _createSuper(RadioButton);\n\n  /**\n   * Constructor for creating the widget\n   *\n   * @private\n   * @param {RadioButtonModel} options - Specifies Radio button model\n   * @param {string | HTMLInputElement} element - Specifies target element\n   */\n  function RadioButton(options, element) {\n    var _this3;\n\n    _classCallCheck(this, RadioButton);\n\n    _this3 = _super3.call(this, options, element);\n    _this3.isFocused = false;\n    return _this3;\n  }\n\n  _createClass(RadioButton, [{\n    key: \"changeHandler\",\n    value: function changeHandler(event) {\n      this.checked = true;\n      this.dataBind();\n      var value = this.element.getAttribute('value');\n      value = this.isVue && value ? this.element.value : this.value;\n      this.trigger('change', {\n        value: value,\n        event: event\n      });\n\n      if (this.tagName === 'EJS-RADIOBUTTON') {\n        event.stopPropagation();\n      }\n    }\n  }, {\n    key: \"updateChange\",\n    value: function updateChange() {\n      var input;\n      var instance;\n      var radioGrp = this.getRadioGroup();\n\n      for (var i = 0; i < radioGrp.length; i++) {\n        input = radioGrp[i];\n\n        if (input !== this.element) {\n          instance = getInstance(input, RadioButton_1);\n          instance.checked = false;\n\n          if (this.tagName === 'EJS-RADIOBUTTON') {\n            instance.angularValue = this.value;\n          }\n        }\n      }\n    }\n    /**\n     * Destroys the widget.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this4 = this;\n\n      var radioWrap = this.element.parentElement;\n\n      _get(_getPrototypeOf(RadioButton.prototype), \"destroy\", this).call(this);\n\n      if (!this.disabled) {\n        this.unWireEvents();\n      }\n\n      if (this.tagName === 'INPUT') {\n        if (radioWrap.parentNode) {\n          radioWrap.parentNode.insertBefore(this.element, radioWrap);\n        }\n\n        detach(radioWrap);\n        this.element.checked = false;\n        ['name', 'value', 'disabled'].forEach(function (key) {\n          _this4.element.removeAttribute(key);\n        });\n      } else {\n        ['role', 'aria-checked', 'class'].forEach(function (key) {\n          radioWrap.removeAttribute(key);\n        });\n        radioWrap.innerHTML = '';\n      }\n    }\n  }, {\n    key: \"focusHandler\",\n    value: function focusHandler() {\n      this.isFocused = true;\n    }\n  }, {\n    key: \"focusOutHandler\",\n    value: function focusOutHandler() {\n      var label = this.getLabel();\n\n      if (label) {\n        label.classList.remove('e-focus');\n      }\n    }\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return 'radio';\n    }\n    /**\n     * To get the value of selected radio button in a group.\n     *\n     * @method getSelectedValue\n     * @returns {string} - Selected Value\n     */\n\n  }, {\n    key: \"getSelectedValue\",\n    value: function getSelectedValue() {\n      var input;\n      var radioGrp = this.getRadioGroup();\n\n      for (var i = 0, len = radioGrp.length; i < len; i++) {\n        input = radioGrp[i];\n\n        if (input.checked) {\n          return input.value;\n        }\n      }\n\n      return '';\n    }\n  }, {\n    key: \"getRadioGroup\",\n    value: function getRadioGroup() {\n      return document.querySelectorAll('input.e-radio[name=\"' + this.element.getAttribute('name') + '\"]');\n    }\n    /**\n     * Gets the properties to be maintained in the persistence state.\n     *\n     * @private\n     * @returns {string} - Persist Data\n     */\n\n  }, {\n    key: \"getPersistData\",\n    value: function getPersistData() {\n      return this.addOnPersist(['checked']);\n    }\n  }, {\n    key: \"getWrapper\",\n    value: function getWrapper() {\n      if (this.element) {\n        return this.element.parentElement;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      if (this.element) {\n        return this.element.nextElementSibling;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      if (isNullOrUndefined(this.initialCheckedValue)) {\n        this.initialCheckedValue = this.checked;\n      }\n\n      this.initWrapper();\n      this.updateHtmlAttribute();\n\n      if (this.name) {\n        this.element.setAttribute('name', this.name);\n      }\n\n      var value = this.element.getAttribute('value');\n\n      if (this.isVue && value && value === this.value) {\n        this.checked = true;\n      }\n\n      if (this.isVue ? this.value && !value : this.value) {\n        this.element.setAttribute('value', this.value);\n      }\n\n      if (this.checked) {\n        this.element.checked = true;\n      }\n\n      if (this.disabled) {\n        this.setDisabled();\n      }\n    }\n  }, {\n    key: \"initWrapper\",\n    value: function initWrapper() {\n      var rippleSpan;\n      var wrapper = this.element.parentElement;\n\n      if (!wrapper.classList.contains(WRAPPER$1)) {\n        wrapper = this.createElement('div', {\n          className: WRAPPER$1\n        });\n        this.element.parentNode.insertBefore(wrapper, this.element);\n      }\n\n      var label = this.createElement('label', {\n        attrs: {\n          for: this.element.id\n        }\n      });\n      wrapper.appendChild(this.element);\n      wrapper.appendChild(label);\n\n      if (isRippleEnabled) {\n        rippleSpan = this.createElement('span', {\n          className: RIPPLE$1\n        });\n        label.appendChild(rippleSpan);\n        rippleEffect(rippleSpan, {\n          duration: 400,\n          isCenterRipple: true\n        });\n      }\n\n      wrapper.classList.add('e-wrapper');\n\n      if (this.enableRtl) {\n        label.classList.add(RTL$1);\n      }\n\n      if (this.cssClass) {\n        addClass([wrapper], this.cssClass.split(' '));\n      }\n\n      if (this.label) {\n        this.setText(this.label);\n      }\n    }\n  }, {\n    key: \"keyUpHandler\",\n    value: function keyUpHandler() {\n      if (this.isFocused) {\n        this.getLabel().classList.add('e-focus');\n      }\n    }\n  }, {\n    key: \"labelRippleHandler\",\n    value: function labelRippleHandler(e) {\n      var ripple = this.getLabel().getElementsByClassName(RIPPLE$1)[0];\n      rippleMouseHandler(e, ripple);\n    }\n  }, {\n    key: \"formResetHandler\",\n    value: function formResetHandler() {\n      this.checked = this.initialCheckedValue;\n\n      if (this.initialCheckedValue) {\n        attributes(this.element, {\n          'checked': 'true'\n        });\n      }\n    }\n    /**\n     * Called internally if any of the property value changes.\n     *\n     * @private\n     * @param {RadioButtonModel} newProp - Specifies New Properties\n     * @param {RadioButtonModel} oldProp - Specifies Old Properties\n     * @returns {void}\n     */\n\n  }, {\n    key: \"onPropertyChanged\",\n    value: function onPropertyChanged(newProp, oldProp) {\n      var wrap = this.getWrapper();\n      var label = this.getLabel();\n\n      for (var _i4 = 0, _Object$keys4 = Object.keys(newProp); _i4 < _Object$keys4.length; _i4++) {\n        var prop = _Object$keys4[_i4];\n\n        switch (prop) {\n          case 'checked':\n            if (newProp.checked) {\n              this.updateChange();\n            }\n\n            this.element.checked = newProp.checked;\n            break;\n\n          case 'disabled':\n            if (newProp.disabled) {\n              this.setDisabled();\n              this.unWireEvents();\n            } else {\n              this.element.disabled = false;\n              this.wireEvents();\n            }\n\n            break;\n\n          case 'cssClass':\n            if (oldProp.cssClass) {\n              removeClass([wrap], oldProp.cssClass.split(' '));\n            }\n\n            if (newProp.cssClass) {\n              addClass([wrap], newProp.cssClass.split(' '));\n            }\n\n            break;\n\n          case 'enableRtl':\n            if (newProp.enableRtl) {\n              label.classList.add(RTL$1);\n            } else {\n              label.classList.remove(RTL$1);\n            }\n\n            break;\n\n          case 'label':\n            this.setText(newProp.label);\n            break;\n\n          case 'labelPosition':\n            if (newProp.labelPosition === 'Before') {\n              label.classList.add('e-right');\n            } else {\n              label.classList.remove('e-right');\n            }\n\n            break;\n\n          case 'name':\n            this.element.setAttribute('name', newProp.name);\n            break;\n\n          case 'value':\n            if (!isNullOrUndefined(this.htmlAttributes) && this.htmlAttributes.value) {\n              break;\n            }\n\n            this.element.setAttribute('value', newProp.value);\n            break;\n\n          case 'htmlAttributes':\n            this.updateHtmlAttribute();\n            break;\n        }\n      }\n    }\n    /**\n     * Initialize checked Property, Angular and React and Unique ID support.\n     *\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"preRender\",\n    value: function preRender() {\n      var element = this.element;\n      this.formElement = closest(this.element, 'form');\n      this.tagName = this.element.tagName;\n      element = wrapperInitialize(this.createElement, 'EJS-RADIOBUTTON', 'radio', element, WRAPPER$1, 'radio');\n      this.element = element;\n\n      if (this.element.getAttribute('type') !== 'radio') {\n        this.element.setAttribute('type', 'radio');\n      }\n\n      if (!this.element.id) {\n        this.element.id = getUniqueID('e-' + this.getModuleName());\n      }\n\n      if (this.tagName === 'EJS-RADIOBUTTON') {\n        var formControlName = this.element.getAttribute('formcontrolname');\n\n        if (formControlName) {\n          this.setProperties({\n            'name': formControlName\n          }, true);\n          this.element.setAttribute('name', formControlName);\n        }\n      }\n    }\n    /**\n     * Initialize the control rendering\n     *\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.initialize();\n\n      if (!this.disabled) {\n        this.wireEvents();\n      }\n\n      this.renderComplete();\n    }\n  }, {\n    key: \"setDisabled\",\n    value: function setDisabled() {\n      this.element.disabled = true;\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      var label = this.getLabel();\n      var textLabel = label.getElementsByClassName(LABEL$1)[0];\n\n      if (textLabel) {\n        textLabel.textContent = text;\n      } else {\n        text = this.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(text) : text;\n        textLabel = this.createElement('span', {\n          className: LABEL$1,\n          innerHTML: text\n        });\n        label.appendChild(textLabel);\n      }\n\n      if (this.labelPosition === 'Before') {\n        this.getLabel().classList.add('e-right');\n      } else {\n        this.getLabel().classList.remove('e-right');\n      }\n    }\n  }, {\n    key: \"updateHtmlAttribute\",\n    value: function updateHtmlAttribute() {\n      if (!isNullOrUndefined(this.htmlAttributes)) {\n        for (var _i5 = 0, _Object$keys5 = Object.keys(this.htmlAttributes); _i5 < _Object$keys5.length; _i5++) {\n          var key = _Object$keys5[_i5];\n\n          if (ATTRIBUTES.indexOf(key) > -1) {\n            var wrapper = this.element.parentElement;\n\n            if (key === 'class') {\n              addClass([wrapper], this.htmlAttributes[key].split(' '));\n            } else if (key === 'title' || key === 'style') {\n              wrapper.setAttribute(key, this.htmlAttributes[key]);\n            } else {\n              this.element.setAttribute(key, this.htmlAttributes[key]);\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"unWireEvents\",\n    value: function unWireEvents() {\n      var label = this.getLabel();\n      EventHandler.remove(this.element, 'change', this.changeHandler);\n      EventHandler.remove(this.element, 'focus', this.focusHandler);\n      EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n      EventHandler.remove(this.element, 'keyup', this.keyUpHandler);\n      var rippleLabel = label.getElementsByClassName(LABEL$1)[0];\n\n      if (rippleLabel) {\n        EventHandler.remove(rippleLabel, 'mousedown', this.labelRippleHandler);\n        EventHandler.remove(rippleLabel, 'mouseup', this.labelRippleHandler);\n      }\n\n      if (this.formElement) {\n        EventHandler.remove(this.formElement, 'reset', this.formResetHandler);\n      }\n    }\n  }, {\n    key: \"wireEvents\",\n    value: function wireEvents() {\n      var label = this.getLabel();\n      EventHandler.add(this.element, 'change', this.changeHandler, this);\n      EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);\n      EventHandler.add(this.element, 'focus', this.focusHandler, this);\n      EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n      var rippleLabel = label.getElementsByClassName(LABEL$1)[0];\n\n      if (rippleLabel) {\n        EventHandler.add(rippleLabel, 'mousedown', this.labelRippleHandler, this);\n        EventHandler.add(rippleLabel, 'mouseup', this.labelRippleHandler, this);\n      }\n\n      if (this.formElement) {\n        EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n      }\n    }\n    /**\n     * Click the RadioButton element\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.element.click();\n    }\n    /**\n     * Sets the focus to RadioButton\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: \"focusIn\",\n    value: function focusIn() {\n      this.element.focus();\n    }\n  }]);\n\n  return RadioButton;\n}(Component);\n\n__decorate$2([Event()], RadioButton.prototype, \"change\", void 0);\n\n__decorate$2([Event()], RadioButton.prototype, \"created\", void 0);\n\n__decorate$2([Property(false)], RadioButton.prototype, \"checked\", void 0);\n\n__decorate$2([Property('')], RadioButton.prototype, \"cssClass\", void 0);\n\n__decorate$2([Property(false)], RadioButton.prototype, \"disabled\", void 0);\n\n__decorate$2([Property('')], RadioButton.prototype, \"label\", void 0);\n\n__decorate$2([Property('After')], RadioButton.prototype, \"labelPosition\", void 0);\n\n__decorate$2([Property('')], RadioButton.prototype, \"name\", void 0);\n\n__decorate$2([Property('')], RadioButton.prototype, \"value\", void 0);\n\n__decorate$2([Property(false)], RadioButton.prototype, \"enableHtmlSanitizer\", void 0);\n\n__decorate$2([Property({})], RadioButton.prototype, \"htmlAttributes\", void 0);\n\nRadioButton = RadioButton_1 = __decorate$2([NotifyPropertyChanges], RadioButton);\n/**\n * RadioButton modules\n */\n\nvar __decorate$3 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar DISABLED$1 = 'e-switch-disabled';\nvar RIPPLE$2 = 'e-ripple-container';\nvar RIPPLE_CHECK = 'e-ripple-check';\nvar RTL$2 = 'e-rtl';\nvar WRAPPER$2 = 'e-switch-wrapper';\nvar ACTIVE = 'e-switch-active';\n/**\n * The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.\n * ```html\n * <input type=\"checkbox\" id=\"switch\"/>\n * <script>\n * var switchObj = new Switch({});\n * switchObj.appendTo(\"#switch\");\n * </script>\n * ```\n */\n\nvar Switch = /*#__PURE__*/function (_Component4) {\n  _inherits(Switch, _Component4);\n\n  var _super4 = _createSuper(Switch);\n\n  /**\n   * Constructor for creating the widget.\n   *\n   * @private\n   *\n   * @param {SwitchModel} options switch model\n   * @param {string | HTMLInputElement} element target element\n   *\n   */\n  function Switch(options, element) {\n    var _this5;\n\n    _classCallCheck(this, Switch);\n\n    _this5 = _super4.call(this, options, element);\n    _this5.isFocused = false;\n    _this5.isDrag = false;\n    return _this5;\n  }\n\n  _createClass(Switch, [{\n    key: \"changeState\",\n    value: function changeState(state) {\n      var ariaState;\n      var rippleSpan;\n      var wrapper = this.getWrapper();\n      var bar = wrapper.querySelector('.e-switch-inner');\n      var handle = wrapper.querySelector('.e-switch-handle');\n\n      if (isRippleEnabled) {\n        rippleSpan = wrapper.getElementsByClassName(RIPPLE$2)[0];\n      }\n\n      if (state) {\n        addClass([bar, handle], ACTIVE);\n        ariaState = 'true';\n        this.element.checked = true;\n        this.checked = true;\n\n        if (rippleSpan) {\n          addClass([rippleSpan], [RIPPLE_CHECK]);\n        }\n      } else {\n        removeClass([bar, handle], ACTIVE);\n        ariaState = 'false';\n        this.element.checked = false;\n        this.checked = false;\n\n        if (rippleSpan) {\n          removeClass([rippleSpan], [RIPPLE_CHECK]);\n        }\n      }\n\n      wrapper.setAttribute('aria-checked', ariaState);\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(evt) {\n      this.isDrag = false;\n      this.focusOutHandler();\n      this.changeState(!this.checked);\n      this.element.focus();\n      var changeEventArgs = {\n        checked: this.element.checked,\n        event: evt\n      };\n      this.trigger('change', changeEventArgs);\n    }\n    /**\n     * Destroys the Switch widget.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Switch.prototype), \"destroy\", this).call(this);\n\n      if (!this.disabled) {\n        this.unWireEvents();\n      }\n\n      _destroy(this, this.getWrapper(), this.tagName);\n    }\n  }, {\n    key: \"focusHandler\",\n    value: function focusHandler() {\n      this.isFocused = true;\n    }\n  }, {\n    key: \"focusOutHandler\",\n    value: function focusOutHandler() {\n      this.getWrapper().classList.remove('e-focus');\n    }\n    /**\n     * Gets the module name.\n     *\n     * @private\n     * @returns {string} - Module Name\n     */\n\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return 'switch';\n    }\n    /**\n     * Gets the properties to be maintained in the persistence state.\n     *\n     * @private\n     * @returns {string} - Persist data\n     */\n\n  }, {\n    key: \"getPersistData\",\n    value: function getPersistData() {\n      return this.addOnPersist(['checked']);\n    }\n  }, {\n    key: \"getWrapper\",\n    value: function getWrapper() {\n      return this.element.parentElement;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      if (isNullOrUndefined(this.initialSwitchCheckedValue)) {\n        this.initialSwitchCheckedValue = this.checked;\n      }\n\n      if (this.name) {\n        this.element.setAttribute('name', this.name);\n      }\n\n      if (this.value) {\n        this.element.setAttribute('value', this.value);\n      }\n\n      if (this.checked) {\n        this.changeState(true);\n      }\n\n      if (this.disabled) {\n        this.setDisabled();\n      }\n\n      if (this.onLabel || this.offLabel) {\n        this.setLabel(this.onLabel, this.offLabel);\n      }\n    }\n  }, {\n    key: \"initWrapper\",\n    value: function initWrapper() {\n      var wrapper = this.element.parentElement;\n\n      if (!wrapper.classList.contains(WRAPPER$2)) {\n        wrapper = this.createElement('div', {\n          className: WRAPPER$2,\n          attrs: {\n            'role': 'switch',\n            'aria-checked': 'false'\n          }\n        });\n        this.element.parentNode.insertBefore(wrapper, this.element);\n      }\n\n      var switchInner = this.createElement('span', {\n        className: 'e-switch-inner'\n      });\n      var onLabel = this.createElement('span', {\n        className: 'e-switch-on'\n      });\n      var offLabel = this.createElement('span', {\n        className: 'e-switch-off'\n      });\n      var handle = this.createElement('span', {\n        className: 'e-switch-handle'\n      });\n      wrapper.appendChild(this.element);\n      setHiddenInput(this, wrapper);\n      switchInner.appendChild(onLabel);\n      switchInner.appendChild(offLabel);\n      wrapper.appendChild(switchInner);\n      wrapper.appendChild(handle);\n\n      if (isRippleEnabled) {\n        var rippleSpan = this.createElement('span', {\n          className: RIPPLE$2\n        });\n        handle.appendChild(rippleSpan);\n        rippleEffect(rippleSpan, {\n          duration: 400,\n          isCenterRipple: true\n        });\n      }\n\n      wrapper.classList.add('e-wrapper');\n\n      if (this.enableRtl) {\n        wrapper.classList.add(RTL$2);\n      }\n\n      if (this.cssClass) {\n        addClass([wrapper], this.cssClass.split(' '));\n      }\n    }\n    /**\n     * Called internally if any of the property value changes.\n     *\n     * @private\n     * @param {SwitchModel} newProp - Specifies New Properties\n     * @param {SwitchModel} oldProp - Specifies Old Properties\n     * @returns {void}\n     */\n\n  }, {\n    key: \"onPropertyChanged\",\n    value: function onPropertyChanged(newProp, oldProp) {\n      var wrapper = this.getWrapper();\n\n      for (var _i6 = 0, _Object$keys6 = Object.keys(newProp); _i6 < _Object$keys6.length; _i6++) {\n        var prop = _Object$keys6[_i6];\n\n        switch (prop) {\n          case 'checked':\n            this.changeState(newProp.checked);\n            break;\n\n          case 'disabled':\n            if (newProp.disabled) {\n              this.setDisabled();\n              this.unWireEvents();\n            } else {\n              this.element.disabled = false;\n              wrapper.classList.remove(DISABLED$1);\n              wrapper.setAttribute('aria-disabled', 'false');\n              this.wireEvents();\n            }\n\n            break;\n\n          case 'value':\n            this.element.setAttribute('value', newProp.value);\n            break;\n\n          case 'name':\n            this.element.setAttribute('name', newProp.name);\n            break;\n\n          case 'onLabel':\n          case 'offLabel':\n            this.setLabel(newProp.onLabel, newProp.offLabel);\n            break;\n\n          case 'enableRtl':\n            if (newProp.enableRtl) {\n              wrapper.classList.add(RTL$2);\n            } else {\n              wrapper.classList.remove(RTL$2);\n            }\n\n            break;\n\n          case 'cssClass':\n            if (oldProp.cssClass) {\n              removeClass([wrapper], oldProp.cssClass.split(' '));\n            }\n\n            if (newProp.cssClass) {\n              addClass([wrapper], newProp.cssClass.split(' '));\n            }\n\n            break;\n        }\n      }\n    }\n    /**\n     * Initialize Angular, React and Unique ID support.\n     *\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"preRender\",\n    value: function preRender() {\n      var element = this.element;\n      this.formElement = closest(this.element, 'form');\n      this.tagName = this.element.tagName;\n\n      _preRender(this, 'EJS-SWITCH', WRAPPER$2, element, this.getModuleName());\n    }\n    /**\n     * Initialize control rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.initWrapper();\n      this.initialize();\n\n      if (!this.disabled) {\n        this.wireEvents();\n      }\n\n      this.renderComplete();\n    }\n  }, {\n    key: \"rippleHandler\",\n    value: function rippleHandler(e) {\n      var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE$2)[0];\n      rippleMouseHandler(e, rippleSpan);\n\n      if (e.type === 'mousedown' && e.currentTarget.classList.contains('e-switch-wrapper') && e.which === 1) {\n        this.isDrag = true;\n        this.isFocused = false;\n      }\n    }\n  }, {\n    key: \"rippleTouchHandler\",\n    value: function rippleTouchHandler(eventType) {\n      var rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE$2)[0];\n\n      if (rippleSpan) {\n        var event = document.createEvent('MouseEvents');\n        event.initEvent(eventType, false, true);\n        rippleSpan.dispatchEvent(event);\n      }\n    }\n  }, {\n    key: \"setDisabled\",\n    value: function setDisabled() {\n      var wrapper = this.getWrapper();\n      this.element.disabled = true;\n      wrapper.classList.add(DISABLED$1);\n      wrapper.setAttribute('aria-disabled', 'true');\n    }\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(onText, offText) {\n      var wrapper = this.getWrapper();\n\n      if (onText) {\n        wrapper.querySelector('.e-switch-on').textContent = onText;\n      }\n\n      if (offText) {\n        wrapper.querySelector('.e-switch-off').textContent = offText;\n      }\n    }\n  }, {\n    key: \"switchFocusHandler\",\n    value: function switchFocusHandler() {\n      if (this.isFocused) {\n        this.getWrapper().classList.add('e-focus');\n      }\n    }\n  }, {\n    key: \"switchMouseUp\",\n    value: function switchMouseUp(e) {\n      var target = e.target;\n\n      if (e.type === 'touchmove') {\n        e.preventDefault();\n      }\n\n      if (e.type === 'touchstart') {\n        this.isDrag = true;\n        this.rippleTouchHandler('mousedown');\n      }\n\n      if (this.isDrag) {\n        if (e.type === 'mouseup' && target.className.indexOf('e-switch') < 0 || e.type === 'touchend') {\n          this.clickHandler(e);\n          this.rippleTouchHandler('mouseup');\n          e.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"formResetHandler\",\n    value: function formResetHandler() {\n      this.checked = this.initialSwitchCheckedValue;\n      this.element.checked = this.initialSwitchCheckedValue;\n    }\n    /**\n     * Toggle the Switch component state into checked/unchecked.\n     *\n     * @returns {void}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.clickHandler();\n    }\n  }, {\n    key: \"wireEvents\",\n    value: function wireEvents() {\n      var wrapper = this.getWrapper();\n      this.delegateMouseUpHandler = this.switchMouseUp.bind(this);\n      this.delegateKeyUpHandler = this.switchFocusHandler.bind(this);\n      EventHandler.add(wrapper, 'click', this.clickHandler, this);\n      EventHandler.add(this.element, 'focus', this.focusHandler, this);\n      EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n      EventHandler.add(this.element, 'mouseup', this.delegateMouseUpHandler, this);\n      EventHandler.add(this.element, 'keyup', this.delegateKeyUpHandler, this);\n      EventHandler.add(wrapper, 'mousedown mouseup', this.rippleHandler, this);\n      EventHandler.add(wrapper, 'touchstart touchmove touchend', this.switchMouseUp, this);\n\n      if (this.formElement) {\n        EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n      }\n    }\n  }, {\n    key: \"unWireEvents\",\n    value: function unWireEvents() {\n      var wrapper = this.getWrapper();\n      EventHandler.remove(wrapper, 'click', this.clickHandler);\n      EventHandler.remove(this.element, 'focus', this.focusHandler);\n      EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n      EventHandler.remove(this.element, 'mouseup', this.delegateMouseUpHandler);\n      EventHandler.remove(this.element, 'keyup', this.delegateKeyUpHandler);\n      EventHandler.remove(wrapper, 'mousedown mouseup', this.rippleHandler);\n      EventHandler.remove(wrapper, 'touchstart touchmove touchend', this.switchMouseUp);\n\n      if (this.formElement) {\n        EventHandler.remove(this.formElement, 'reset', this.formResetHandler);\n      }\n    }\n    /**\n     * Click the switch element\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.element.click();\n    }\n    /**\n     * Sets the focus to Switch\n     * its native method\n     *\n     * @public\n     */\n\n  }, {\n    key: \"focusIn\",\n    value: function focusIn() {\n      this.element.focus();\n    }\n  }]);\n\n  return Switch;\n}(Component);\n\n__decorate$3([Event()], Switch.prototype, \"change\", void 0);\n\n__decorate$3([Event()], Switch.prototype, \"created\", void 0);\n\n__decorate$3([Property(false)], Switch.prototype, \"checked\", void 0);\n\n__decorate$3([Property('')], Switch.prototype, \"cssClass\", void 0);\n\n__decorate$3([Property(false)], Switch.prototype, \"disabled\", void 0);\n\n__decorate$3([Property('')], Switch.prototype, \"name\", void 0);\n\n__decorate$3([Property('')], Switch.prototype, \"onLabel\", void 0);\n\n__decorate$3([Property('')], Switch.prototype, \"offLabel\", void 0);\n\n__decorate$3([Property('')], Switch.prototype, \"value\", void 0);\n\nSwitch = __decorate$3([NotifyPropertyChanges], Switch);\n/**\n * Switch modules\n */\n\nvar __decorate$4 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar classNames = {\n  chipSet: 'e-chip-set',\n  chip: 'e-chip',\n  avatar: 'e-chip-avatar',\n  text: 'e-chip-text',\n  icon: 'e-chip-icon',\n  delete: 'e-chip-delete',\n  deleteIcon: 'e-dlt-btn',\n  multiSelection: 'e-multi-selection',\n  singleSelection: 'e-selection',\n  active: 'e-active',\n  chipWrapper: 'e-chip-avatar-wrap',\n  iconWrapper: 'e-chip-icon-wrap',\n  focused: 'e-focused',\n  disabled: 'e-disabled',\n  rtl: 'e-rtl'\n};\n/**\n * A chip component is a small block of essential information, mostly used on contacts or filter tags.\n * ```html\n * <div id=\"chip\"></div>\n * ```\n * ```typescript\n * <script>\n * var chipObj = new ChipList();\n * chipObj.appendTo(\"#chip\");\n * </script>\n * ```\n */\n\nvar ChipList = /*#__PURE__*/function (_Component5) {\n  _inherits(ChipList, _Component5);\n\n  var _super5 = _createSuper(ChipList);\n\n  function ChipList(options, element) {\n    var _this6;\n\n    _classCallCheck(this, ChipList);\n\n    _this6 = _super5.call(this, options, element);\n    _this6.multiSelectedChip = [];\n    return _this6;\n  }\n  /**\n   * Initialize the event handler\n   *\n   * @private\n   */\n\n\n  _createClass(ChipList, [{\n    key: \"preRender\",\n    value: function preRender() {//prerender\n    }\n    /**\n     * To find the chips length.\n     *\n     * @returns boolean\n     * @private\n     */\n\n  }, {\n    key: \"chipType\",\n    value: function chipType() {\n      return this.chips && this.chips.length && this.chips.length > 0;\n    }\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var property;\n      this.type = this.chips.length ? 'chipset' : this.text || this.element.innerText ? 'chip' : 'chipset';\n      this.setAttributes();\n      this.createChip();\n      this.setRtl();\n      this.select(this.selectedChips, property);\n      this.wireEvent(false);\n      this.rippleFunction = rippleEffect(this.element, {\n        selector: '.e-chip'\n      });\n      this.renderComplete();\n    }\n  }, {\n    key: \"createChip\",\n    value: function createChip() {\n      // eslint-disable-next-line\n      this.innerText = this.element.innerText && this.element.innerText.length !== 0 ? this.element.innerText.trim() : this.element.innerText;\n      this.element.innerHTML = '';\n      this.chipCreation(this.type === 'chip' ? [this.innerText ? this.innerText : this.text] : this.chips);\n    }\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes() {\n      if (this.type === 'chip') {\n        this.element.tabIndex = 0;\n        this.element.setAttribute('role', 'option');\n      } else {\n        this.element.classList.add(classNames.chipSet);\n        this.element.setAttribute('role', 'listbox');\n\n        if (this.selection === 'Multiple') {\n          this.element.classList.add(classNames.multiSelection);\n          this.element.setAttribute('aria-multiselectable', 'true');\n        } else if (this.selection === 'Single') {\n          this.element.classList.add(classNames.singleSelection);\n          this.element.setAttribute('aria-multiselectable', 'false');\n        } else {\n          this.element.setAttribute('aria-multiselectable', 'false');\n        }\n      }\n    }\n  }, {\n    key: \"setRtl\",\n    value: function setRtl() {\n      this.element.classList[this.enableRtl ? 'add' : 'remove'](classNames.rtl);\n    }\n  }, {\n    key: \"chipCreation\",\n    value: function chipCreation(data) {\n      var chipListArray = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var fieldsData = this.getFieldValues(data[i]);\n        var chipArray = this.elementCreation(fieldsData);\n        var className = (classNames.chip + ' ' + (fieldsData.enabled ? ' ' : classNames.disabled) + ' ' + (fieldsData.avatarIconCss || fieldsData.avatarText ? classNames.chipWrapper : fieldsData.leadingIconCss ? classNames.iconWrapper : ' ') + ' ' + fieldsData.cssClass).split(' ').filter(function (css) {\n          return css;\n        });\n\n        if (!this.chipType()) {\n          chipListArray = chipArray;\n          addClass([this.element], className);\n          this.element.setAttribute('aria-label', fieldsData.text);\n\n          if (fieldsData.value) {\n            this.element.setAttribute('data-value', fieldsData.value.toString());\n          }\n        } else {\n          var wrapper = this.createElement('DIV', {\n            className: className.join(' '),\n            attrs: {\n              tabIndex: '0',\n              role: 'option',\n              'aria-label': fieldsData.text,\n              'aria-selected': 'false'\n            }\n          });\n\n          if (fieldsData.value) {\n            wrapper.setAttribute('data-value', fieldsData.value.toString());\n          }\n\n          append(chipArray, wrapper);\n          chipListArray.push(wrapper);\n        }\n      }\n\n      append(chipListArray, this.element);\n    }\n  }, {\n    key: \"getFieldValues\",\n    value: function getFieldValues(data) {\n      var chipEnabled = !(this.enabled.toString() === 'false');\n      var fields = {\n        text: typeof data === 'object' ? data.text ? data.text.toString() : this.text.toString() : !this.chipType() ? this.innerText ? this.innerText : this.text.toString() : data.toString(),\n        cssClass: typeof data === 'object' ? data.cssClass ? data.cssClass.toString() : this.cssClass.toString() : this.cssClass.toString(),\n        leadingIconCss: typeof data === 'object' ? data.leadingIconCss ? data.leadingIconCss.toString() : this.leadingIconCss.toString() : this.leadingIconCss.toString(),\n        avatarIconCss: typeof data === 'object' ? data.avatarIconCss ? data.avatarIconCss.toString() : this.avatarIconCss.toString() : this.avatarIconCss.toString(),\n        avatarText: typeof data === 'object' ? data.avatarText ? data.avatarText.toString() : this.avatarText.toString() : this.avatarText.toString(),\n        trailingIconCss: typeof data === 'object' ? data.trailingIconCss ? data.trailingIconCss.toString() : this.trailingIconCss.toString() : this.trailingIconCss.toString(),\n        enabled: typeof data === 'object' ? !isNullOrUndefined(data.enabled) ? data.enabled.toString() === 'false' ? false : true : chipEnabled : chipEnabled,\n        value: typeof data === 'object' ? data.value ? data.value.toString() : null : null,\n        leadingIconUrl: typeof data === 'object' ? data.leadingIconUrl ? data.leadingIconUrl.toString() : this.leadingIconUrl : this.leadingIconUrl,\n        trailingIconUrl: typeof data === 'object' ? data.trailingIconUrl ? data.trailingIconUrl.toString() : this.trailingIconUrl : this.trailingIconUrl\n      };\n      return fields;\n    }\n  }, {\n    key: \"elementCreation\",\n    value: function elementCreation(fields) {\n      var chipArray = [];\n\n      if (fields.avatarText || fields.avatarIconCss) {\n        var className = (classNames.avatar + ' ' + fields.avatarIconCss).trim();\n        var chipAvatarElement = this.createElement('span', {\n          className: className\n        });\n        chipAvatarElement.innerText = fields.avatarText;\n        chipArray.push(chipAvatarElement);\n      } else if (fields.leadingIconCss) {\n        var _className = (classNames.icon + ' ' + fields.leadingIconCss).trim();\n\n        var chipIconElement = this.createElement('span', {\n          className: _className\n        });\n        chipArray.push(chipIconElement);\n      } else if (fields.leadingIconUrl) {\n        var _className2 = (classNames.avatar + ' ' + 'image-url').trim();\n\n        var _chipIconElement = this.createElement('span', {\n          className: _className2\n        });\n\n        _chipIconElement.style.backgroundImage = 'url(' + fields.leadingIconUrl + ')';\n        chipArray.push(_chipIconElement);\n      }\n\n      var chipTextElement = this.createElement('span', {\n        className: classNames.text\n      });\n      chipTextElement.innerText = fields.text;\n      chipArray.push(chipTextElement);\n\n      if (fields.trailingIconCss || this.chipType() && this.enableDelete) {\n        var _className3 = (classNames.delete + ' ' + (fields.trailingIconCss ? fields.trailingIconCss : classNames.deleteIcon)).trim();\n\n        var chipdeleteElement = this.createElement('span', {\n          className: _className3\n        });\n        chipArray.push(chipdeleteElement);\n      } else if (fields.trailingIconUrl) {\n        var _className4 = 'trailing-icon-url'.trim();\n\n        var chipIconsElement = this.createElement('span', {\n          className: _className4\n        });\n        chipIconsElement.style.backgroundImage = 'url(' + fields.trailingIconUrl + ')';\n        chipArray.push(chipIconsElement);\n      }\n\n      return chipArray;\n    }\n    /**\n     * A function that finds chip based on given input.\n     *\n     * @param  {number | HTMLElement } fields - We can pass index number or element of chip.\n     * {% codeBlock src='chips/find/index.md' %}{% endcodeBlock %}.\n     */\n\n  }, {\n    key: \"find\",\n    value: function find(fields) {\n      var chipData;\n      var chipElement = fields instanceof HTMLElement ? fields : this.element.querySelectorAll('.' + classNames.chip)[fields];\n\n      if (chipElement && this.chipType()) {\n        chipData = {\n          text: undefined,\n          index: undefined,\n          element: undefined,\n          data: undefined\n        };\n        chipData.index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipElement);\n        chipData.text = typeof this.chips[chipData.index] === 'object' ? this.chips[chipData.index].text ? this.chips[chipData.index].text.toString() : '' : this.chips[chipData.index].toString();\n        chipData.data = this.chips[chipData.index];\n        chipData.element = chipElement;\n      }\n\n      return chipData;\n    }\n    /**\n     * Allows adding the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     *\n     * @param  {string[] | number[] | ChipModel[] | string | number | ChipModel} chipsData - We can pass array of string or\n     *  array of number or array of chip model or string data or number data or chip model.\n     * {% codeBlock src='chips/add/index.md' %}{% endcodeBlock %}\n     * @deprecated\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(chipsData) {\n      if (this.type !== 'chip') {\n        var _this$chips;\n\n        var fieldData = chipsData instanceof Array ? chipsData : [chipsData];\n\n        (_this$chips = this.chips).push.apply(_this$chips, _toConsumableArray(fieldData));\n\n        this.chipCreation(fieldData);\n      }\n    }\n    /**\n     * Allows selecting the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     *\n     * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number\n     *  or chip element or array of chip element.\n     * {% codeBlock src='chips/select/index.md' %}{% endcodeBlock %}\n     */\n\n  }, {\n    key: \"select\",\n    value: function select(fields, selectionType) {\n      this.onSelect(fields, false, selectionType);\n    }\n  }, {\n    key: \"multiSelection\",\n    value: function multiSelection(newProp) {\n      var items = this.element.querySelectorAll('.' + 'e-chip');\n\n      for (var j = 0; j < newProp.length; j++) {\n        if (typeof newProp[j] === 'string') {\n          for (var k = 0; k < items.length; k++) {\n            if (newProp[j] !== k) {\n              if (newProp[j] === items[k].attributes[5].value) {\n                this.multiSelectedChip.push(k);\n                break;\n              }\n            }\n          }\n        } else {\n          this.multiSelectedChip.push(newProp[j]);\n        }\n      }\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(fields, callFromProperty, selectionType) {\n      var index;\n      var chipNodes;\n      var chipValue;\n\n      if (this.chipType() && this.selection !== 'None') {\n        if (callFromProperty) {\n          var chipElements = this.element.querySelectorAll('.' + classNames.chip);\n\n          for (var i = 0; i < chipElements.length; i++) {\n            chipElements[i].setAttribute('aria-selected', 'false');\n            chipElements[i].classList.remove(classNames.active);\n          }\n        }\n\n        var fieldData = fields instanceof Array ? fields : [fields];\n\n        for (var _i7 = 0; _i7 < fieldData.length; _i7++) {\n          var chipElement = fieldData[_i7] instanceof HTMLElement ? fieldData[_i7] : this.element.querySelectorAll('.' + classNames.chip)[fieldData[_i7]];\n\n          if (selectionType !== 'index') {\n            for (var j = 0; j < this.chips.length; j++) {\n              chipNodes = this.element.querySelectorAll('.' + classNames.chip)[j];\n              var fieldsData = this.getFieldValues(this.chips[j]);\n\n              if (selectionType === 'value') {\n                if (fieldsData.value !== null) {\n                  chipValue = chipNodes.dataset.value;\n                }\n              } else if (selectionType === 'text') {\n                chipValue = chipNodes.innerText;\n              }\n\n              if (chipValue === fieldData[_i7].toString()) {\n                index = j;\n                chipElement = this.element.querySelectorAll('.' + classNames.chip)[index];\n              }\n            }\n          }\n\n          if (chipElement instanceof HTMLElement) {\n            this.selectionHandler(chipElement);\n          }\n        }\n      }\n    }\n    /**\n     * Allows removing the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     *\n     * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number\n     *  or chip element or array of chip element.\n     * {% codeBlock src='chips/remove/index.md' %}{% endcodeBlock %}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(fields) {\n      var _this7 = this;\n\n      if (this.chipType()) {\n        var fieldData = fields instanceof Array ? fields : [fields];\n        var chipElements = [];\n        var chipCollection = this.element.querySelectorAll('.' + classNames.chip);\n        fieldData.forEach(function (data) {\n          var chipElement = data instanceof HTMLElement ? data : chipCollection[data];\n\n          if (chipElement instanceof HTMLElement) {\n            chipElements.push(chipElement);\n          }\n        });\n        chipElements.forEach(function (element) {\n          var chips = _this7.element.querySelectorAll('.' + classNames.chip);\n\n          var index = Array.prototype.slice.call(chips).indexOf(element);\n\n          _this7.deleteHandler(element, index);\n        });\n      }\n    }\n    /**\n     * Returns the selected chip(s) data.\n     * {% codeBlock src='chips/getSelectedChips/index.md' %}{% endcodeBlock %}\n     */\n\n  }, {\n    key: \"getSelectedChips\",\n    value: function getSelectedChips() {\n      var selectedChips;\n\n      if (this.chipType() && this.selection !== 'None') {\n        var selectedItems = {\n          texts: [],\n          Indexes: [],\n          data: [],\n          elements: []\n        };\n        var items = this.element.querySelectorAll('.' + classNames.active);\n\n        for (var i = 0; i < items.length; i++) {\n          var chip = items[i];\n          selectedItems.elements.push(chip);\n          var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chip);\n          selectedItems.Indexes.push(index);\n          selectedItems.data.push(this.chips[index]);\n          var text = typeof this.chips[index] === 'object' ? this.chips[index].text ? this.chips[index].text.toString() : null : this.chips[index].toString();\n          selectedItems.texts.push(text);\n        }\n\n        var selectedItem = {\n          text: selectedItems.texts[0],\n          index: selectedItems.Indexes[0],\n          data: selectedItems.data[0],\n          element: selectedItems.elements[0]\n        };\n        selectedChips = !isNullOrUndefined(selectedItem.index) ? this.selection === 'Multiple' ? selectedItems : selectedItem : undefined;\n      }\n\n      return selectedChips;\n    }\n  }, {\n    key: \"wireEvent\",\n    value: function wireEvent(unWireEvent) {\n      if (!unWireEvent) {\n        EventHandler.add(this.element, 'click', this.clickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyHandler, this);\n        EventHandler.add(this.element, 'keyup', this.keyHandler, this);\n      } else {\n        EventHandler.remove(this.element, 'click', this.clickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyHandler);\n        EventHandler.remove(this.element, 'keyup', this.keyHandler);\n      }\n    }\n  }, {\n    key: \"keyHandler\",\n    value: function keyHandler(e) {\n      if (e.target.classList.contains(classNames.chip)) {\n        if (e.type === 'keydown') {\n          if (e.keyCode === 13) {\n            this.clickHandler(e);\n          } else if (e.keyCode === 46 && this.enableDelete) {\n            this.clickHandler(e, true);\n          }\n        } else if (e.keyCode === 9) {\n          this.focusInHandler(e.target);\n        }\n      }\n    }\n  }, {\n    key: \"focusInHandler\",\n    value: function focusInHandler(chipWrapper) {\n      if (!chipWrapper.classList.contains(classNames.focused)) {\n        chipWrapper.classList.add(classNames.focused);\n      }\n    }\n  }, {\n    key: \"focusOutHandler\",\n    value: function focusOutHandler(e) {\n      var chipWrapper = closest(e.target, '.' + classNames.chip);\n      var focusedElement = !this.chipType() ? this.element.classList.contains(classNames.focused) ? this.element : null : this.element.querySelector('.' + classNames.focused);\n\n      if (chipWrapper && focusedElement) {\n        focusedElement.classList.remove(classNames.focused);\n      }\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(e) {\n      var _this8 = this;\n\n      var del = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var chipWrapper = closest(e.target, '.' + classNames.chip);\n\n      if (chipWrapper) {\n        // eslint-disable-next-line\n        var chipDataArgs;\n\n        if (this.chipType()) {\n          chipDataArgs = this.find(chipWrapper);\n        } else {\n          var index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipWrapper);\n          chipDataArgs = {\n            text: this.innerText ? this.innerText : this.text,\n            element: chipWrapper,\n            data: this.text,\n            index: index\n          };\n        }\n\n        chipDataArgs.event = e;\n        chipDataArgs.cancel = false;\n        this.trigger('beforeClick', chipDataArgs, function (observedArgs) {\n          if (!observedArgs.cancel) {\n            _this8.clickEventHandler(observedArgs.element, e, del);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"clickEventHandler\",\n    value: function clickEventHandler(chipWrapper, e, del) {\n      var _this9 = this;\n\n      if (this.chipType()) {\n        var chipData = this.find(chipWrapper);\n        chipData.event = e;\n        var deleteElement = e.target.classList.contains(classNames.deleteIcon) ? e.target : del ? chipWrapper.querySelector('.' + classNames.deleteIcon) : undefined;\n\n        if (deleteElement && this.enableDelete) {\n          chipData.cancel = false;\n          var deletedItemArgs = chipData;\n          this.trigger('delete', deletedItemArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n              _this9.deleteHandler(observedArgs.element, observedArgs.index);\n\n              _this9.selectionHandler(chipWrapper);\n\n              chipData.selected = observedArgs.element.classList.contains(classNames.active);\n              var selectedItemArgs = chipData;\n\n              _this9.trigger('click', selectedItemArgs);\n            }\n          });\n        } else if (this.selection !== 'None') {\n          this.selectionHandler(chipWrapper);\n          chipData.selected = chipWrapper.classList.contains(classNames.active);\n          var selectedItemArgs = chipData;\n          this.trigger('click', selectedItemArgs);\n        } else {\n          this.focusInHandler(chipWrapper);\n          var clickedItemArgs = chipData;\n          this.trigger('click', clickedItemArgs);\n        }\n      } else {\n        this.focusInHandler(chipWrapper);\n        var _clickedItemArgs = {\n          text: this.innerText ? this.innerText : this.text,\n          element: chipWrapper,\n          data: this.text,\n          event: e\n        };\n        this.trigger('click', _clickedItemArgs);\n      }\n    }\n  }, {\n    key: \"selectionHandler\",\n    value: function selectionHandler(chipWrapper) {\n      if (this.selection === 'Single') {\n        var activeElement = this.element.querySelector('.' + classNames.active);\n\n        if (activeElement && activeElement !== chipWrapper) {\n          activeElement.classList.remove(classNames.active);\n          activeElement.setAttribute('aria-selected', 'false');\n        }\n\n        this.setProperties({\n          selectedChips: null\n        }, true);\n      } else {\n        this.setProperties({\n          selectedChips: []\n        }, true);\n      }\n\n      if (chipWrapper.classList.contains(classNames.active)) {\n        chipWrapper.classList.remove(classNames.active);\n        chipWrapper.setAttribute('aria-selected', 'false');\n      } else {\n        chipWrapper.classList.add(classNames.active);\n        chipWrapper.setAttribute('aria-selected', 'true');\n      }\n\n      this.updateSelectedChips();\n    }\n  }, {\n    key: \"updateSelectedChips\",\n    value: function updateSelectedChips() {\n      var chipListEle = this.element.querySelectorAll('.e-chip');\n      var chipCollIndex = [];\n      var chipCollValue = [];\n      var chip = null;\n      var value;\n\n      for (var i = 0; i < chipListEle.length; i++) {\n        var selectedEle = this.element.querySelectorAll('.e-chip')[i];\n\n        if (selectedEle.getAttribute('aria-selected') === 'true') {\n          value = selectedEle.getAttribute('data-value');\n\n          if (this.selection === 'Single' && selectedEle.classList.contains('e-active')) {\n            chip = value ? value : i;\n            break;\n          } else {\n            chip = value ? chipCollValue.push(value) : chipCollIndex.push(i);\n          }\n        }\n      }\n\n      this.setProperties({\n        selectedChips: this.selection === 'Single' ? chip : value ? chipCollValue : chipCollIndex\n      }, true);\n    }\n  }, {\n    key: \"deleteHandler\",\n    value: function deleteHandler(chipWrapper, index) {\n      this.chips.splice(index, 1);\n      this.setProperties({\n        chips: this.chips\n      }, true);\n      detach(chipWrapper);\n    }\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n     * {% codeBlock src='chips/destroy/index.md' %}{% endcodeBlock %}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      removeClass([this.element], [classNames.chipSet, classNames.chip, classNames.rtl, classNames.multiSelection, classNames.singleSelection, classNames.disabled, classNames.chipWrapper, classNames.iconWrapper, classNames.active, classNames.focused].concat(this.cssClass.toString().split(' ').filter(function (css) {\n        return css;\n      })));\n      this.removeMultipleAttributes(['tabindex', 'role', 'aria-label', 'aria-multiselectable'], this.element);\n      this.wireEvent(true);\n      this.rippleFunction();\n\n      _get(_getPrototypeOf(ChipList.prototype), \"destroy\", this).call(this);\n\n      this.element.innerHTML = '';\n      this.element.innerText = this.innerText;\n    }\n  }, {\n    key: \"removeMultipleAttributes\",\n    value: function removeMultipleAttributes(attributes$$1, element) {\n      attributes$$1.forEach(function (attr) {\n        element.removeAttribute(attr);\n      });\n    }\n  }, {\n    key: \"getPersistData\",\n    value: function getPersistData() {\n      return this.addOnPersist([]);\n    }\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return 'chip-list';\n    }\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @returns void\n     * @private\n     */\n\n  }, {\n    key: \"onPropertyChanged\",\n    value: function onPropertyChanged(newProp, oldProp) {\n      var property;\n\n      for (var _i8 = 0, _Object$keys7 = Object.keys(newProp); _i8 < _Object$keys7.length; _i8++) {\n        var prop = _Object$keys7[_i8];\n\n        switch (prop) {\n          case 'chips':\n          case 'text':\n          case 'avatarText':\n          case 'avatarIconCss':\n          case 'leadingIconCss':\n          case 'trailingIconCss':\n          case 'selection':\n          case 'enableDelete':\n          case 'enabled':\n            this.refresh();\n            break;\n\n          case 'cssClass':\n            if (!this.chipType()) {\n              removeClass([this.element], oldProp.cssClass.toString().split(' ').filter(function (css) {\n                return css;\n              }));\n              addClass([this.element], newProp.cssClass.toString().split(' ').filter(function (css) {\n                return css;\n              }));\n            } else {\n              this.refresh();\n            }\n\n            break;\n\n          case 'selectedChips':\n            removeClass(this.element.querySelectorAll('.e-active'), 'e-active');\n\n            if (this.selection === 'Multiple') {\n              this.multiSelectedChip = [];\n              this.multiSelection(newProp.selectedChips);\n              this.onSelect(this.multiSelectedChip, true, property);\n              this.updateSelectedChips();\n            } else {\n              this.onSelect(newProp.selectedChips, true, property);\n            }\n\n            break;\n\n          case 'enableRtl':\n            this.setRtl();\n            break;\n        }\n      }\n    }\n  }]);\n\n  return ChipList;\n}(Component);\n\n__decorate$4([Property([])], ChipList.prototype, \"chips\", void 0);\n\n__decorate$4([Property('')], ChipList.prototype, \"text\", void 0);\n\n__decorate$4([Property('')], ChipList.prototype, \"avatarText\", void 0);\n\n__decorate$4([Property('')], ChipList.prototype, \"avatarIconCss\", void 0);\n\n__decorate$4([Property('')], ChipList.prototype, \"leadingIconCss\", void 0);\n\n__decorate$4([Property('')], ChipList.prototype, \"trailingIconCss\", void 0);\n\n__decorate$4([Property('')], ChipList.prototype, \"leadingIconUrl\", void 0);\n\n__decorate$4([Property('')], ChipList.prototype, \"trailingIconUrl\", void 0);\n\n__decorate$4([Property('')], ChipList.prototype, \"cssClass\", void 0);\n\n__decorate$4([Property(true)], ChipList.prototype, \"enabled\", void 0);\n\n__decorate$4([Property([])], ChipList.prototype, \"selectedChips\", void 0);\n\n__decorate$4([Property('None')], ChipList.prototype, \"selection\", void 0);\n\n__decorate$4([Property(false)], ChipList.prototype, \"enableDelete\", void 0);\n\n__decorate$4([Event()], ChipList.prototype, \"created\", void 0);\n\n__decorate$4([Event()], ChipList.prototype, \"click\", void 0);\n\n__decorate$4([Event()], ChipList.prototype, \"beforeClick\", void 0);\n\n__decorate$4([Event()], ChipList.prototype, \"delete\", void 0);\n\nChipList = __decorate$4([NotifyPropertyChanges], ChipList);\n/**\n * Represents ChipList `Chip` model class.\n */\n\nvar Chip = function Chip() {\n  _classCallCheck(this, Chip);\n};\n/**\n * Chip modules\n */\n\n/**\n * Button all modules\n */\n\n\nexport { wrapperInitialize, getTextNode, _destroy as destroy, _preRender as preRender, createCheckBox, rippleMouseHandler, setHiddenInput, buttonObserver, Button, CheckBox, RadioButton, Switch, classNames, ChipList, Chip };","map":{"version":3,"sources":["D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@syncfusion/ej2-buttons/dist/es6/ej2-buttons.es2015.js"],"names":["Component","Event","EventHandler","NotifyPropertyChanges","Observer","Property","SanitizeHtmlHelper","addClass","append","attributes","closest","deleteObject","detach","getInstance","getUniqueID","getValue","isBlazor","isNullOrUndefined","isRippleEnabled","removeClass","rippleEffect","setValue","wrapperInitialize","createElement","tag","type","element","WRAPPER","role","input","tagName","ejInstance","attrs","props","index","len","length","indexOf","nodeName","setAttribute","nodeValue","appendChild","getTextNode","node","childnode","childNodes","i","nodeType","destroy","ejInst","wrapper","parentNode","insertBefore","checked","forEach","key","removeAttribute","innerHTML","preRender","proxy","control","moduleName","getAttribute","id","createCheckBox","enableRipple","options","className","cssClass","split","enableRtl","classList","add","rippleSpan","isCenterRipple","duration","frameSpan","label","labelSpan","disableHtmlEncode","textContent","rippleMouseHandler","e","event","document","createEvent","initEvent","dispatchEvent","setHiddenInput","wrap","name","__decorate","undefined","decorators","target","desc","c","arguments","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","defineProperty","buttonObserver","cssClassName","RTL","BUTTON","PRIMARY","ICONBTN","Button","initialize","removeRippleEffect","selector","renderComplete","isPrimary","getModuleName","content","tempContent","enableHtmlSanitizer","sanitize","setIconCss","disabled","controlStatus","wireEvents","iconCss","span","trim","iconPosition","toLowerCase","isToggle","btnClickHandler","remove","contains","concat","replace","querySelector","unWireEvents","addOnPersist","newProp","oldProp","keys","prop","isServerRendered","click","focus","prototype","__decorate$1","CHECK","DISABLED","FRAME","INDETERMINATE","LABEL","RIPPLE","RIPPLECHECK","RIPPLEINDETERMINATE","containerAttr","CheckBox","isFocused","isMouseClick","state","ariaState","getWrapper","getElementsByClassName","indeterminate","focusOutHandler","changeState","changeEventArgs","updateVueArrayModel","trigger","stopPropagation","parentElement","initialCheckedValue","value","isVue","setProperties","setDisabled","for","labelPosition","setText","rippleElem","querySelectorAll","removeChild","labelWrap","getElementsByTagName","updateHtmlAttributeToWrapper","formElement","initWrapper","text","clickHandler","keyUpHandler","focusHandler","labelMouseDownHandler","labelMouseUpHandler","formResetHandler","changeHandler","init","push","splice","htmlAttributes","__decorate$2","RadioButton_1","LABEL$1","RIPPLE$1","RTL$1","WRAPPER$1","ATTRIBUTES","RadioButton","dataBind","instance","radioGrp","getRadioGroup","angularValue","radioWrap","getLabel","nextElementSibling","updateHtmlAttribute","ripple","updateChange","formControlName","textLabel","rippleLabel","labelRippleHandler","__decorate$3","DISABLED$1","RIPPLE$2","RIPPLE_CHECK","RTL$2","WRAPPER$2","ACTIVE","Switch","isDrag","bar","handle","evt","initialSwitchCheckedValue","onLabel","offLabel","setLabel","switchInner","currentTarget","which","eventType","onText","offText","preventDefault","rippleTouchHandler","delegateMouseUpHandler","switchMouseUp","bind","delegateKeyUpHandler","switchFocusHandler","rippleHandler","__decorate$4","classNames","chipSet","chip","avatar","icon","delete","deleteIcon","multiSelection","singleSelection","active","chipWrapper","iconWrapper","focused","rtl","ChipList","multiSelectedChip","chips","property","innerText","setAttributes","createChip","setRtl","select","selectedChips","wireEvent","rippleFunction","chipCreation","tabIndex","selection","data","chipListArray","fieldsData","getFieldValues","chipArray","elementCreation","enabled","avatarIconCss","avatarText","leadingIconCss","filter","css","chipType","toString","join","chipEnabled","fields","trailingIconCss","leadingIconUrl","trailingIconUrl","chipAvatarElement","chipIconElement","style","backgroundImage","chipTextElement","enableDelete","chipdeleteElement","chipIconsElement","chipData","chipElement","HTMLElement","Array","slice","call","chipsData","fieldData","selectionType","onSelect","items","j","k","callFromProperty","chipNodes","chipValue","chipElements","dataset","selectionHandler","chipCollection","deleteHandler","selectedItems","texts","Indexes","elements","selectedItem","unWireEvent","keyHandler","keyCode","focusInHandler","focusedElement","del","chipDataArgs","find","cancel","observedArgs","clickEventHandler","deleteElement","deletedItemArgs","selected","selectedItemArgs","clickedItemArgs","activeElement","updateSelectedChips","chipListEle","chipCollIndex","chipCollValue","selectedEle","removeMultipleAttributes","attributes$$1","attr","refresh","Chip"],"mappings":"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","sourcesContent":["import { Component, Event, EventHandler, NotifyPropertyChanges, Observer, Property, SanitizeHtmlHelper, addClass, append, attributes, closest, deleteObject, detach, getInstance, getUniqueID, getValue, isBlazor, isNullOrUndefined, isRippleEnabled, removeClass, rippleEffect, setValue } from '@syncfusion/ej2-base';\n\n/**\n * Initialize wrapper element for angular.\n *\n * @private\n *\n * @param {CreateElementArgs} createElement - Specifies created element args\n * @param {string} tag - Specifies tag name\n * @param {string} type - Specifies type name\n * @param {HTMLInputElement} element - Specifies input element\n * @param {string} WRAPPER - Specifies wrapper element\n * @param {string} role - Specifies role\n * @returns {HTMLInputElement} - Input Element\n */\nfunction wrapperInitialize(createElement, tag, type, element, WRAPPER, role) {\n    let input = element;\n    if (element.tagName === tag) {\n        const ejInstance = getValue('ej2_instances', element);\n        input = createElement('input', { attrs: { 'type': type } });\n        const props = ['change', 'cssClass', 'label', 'labelPosition', 'id'];\n        for (let index = 0, len = element.attributes.length; index < len; index++) {\n            if (props.indexOf(element.attributes[index].nodeName) === -1) {\n                input.setAttribute(element.attributes[index].nodeName, element.attributes[index].nodeValue);\n            }\n        }\n        attributes(element, { 'class': WRAPPER, 'role': role, 'aria-checked': 'false' });\n        element.appendChild(input);\n        setValue('ej2_instances', ejInstance, input);\n        deleteObject(element, 'ej2_instances');\n    }\n    return input;\n}\n/**\n * Get the text node.\n *\n * @param {HTMLElement} element - Specifies html element\n * @private\n * @returns {Node} - Text node.\n */\nfunction getTextNode(element) {\n    let node;\n    const childnode = element.childNodes;\n    for (let i = 0; i < childnode.length; i++) {\n        node = childnode[i];\n        if (node.nodeType === 3) {\n            return node;\n        }\n    }\n    return null;\n}\n/**\n * Destroy the button components.\n *\n * @private\n * @param {Switch | CheckBox} ejInst - Specifies eJ2 Instance\n * @param {Element} wrapper - Specifies wrapper element\n * @param {string} tagName - Specifies tag name\n * @returns {void}\n */\nfunction destroy(ejInst, wrapper, tagName) {\n    if (tagName === 'INPUT') {\n        wrapper.parentNode.insertBefore(ejInst.element, wrapper);\n        detach(wrapper);\n        ejInst.element.checked = false;\n        ['name', 'value', 'disabled'].forEach((key) => {\n            ejInst.element.removeAttribute(key);\n        });\n    }\n    else {\n        ['role', 'aria-checked', 'class'].forEach((key) => {\n            wrapper.removeAttribute(key);\n        });\n        wrapper.innerHTML = '';\n    }\n}\n/**\n * Initialize control pre rendering.\n *\n * @private\n * @param {Switch | CheckBox} proxy - Specifies proxy\n * @param {string} control - Specifies control\n * @param {string} wrapper - Specifies wrapper element\n * @param {HTMLInputElement} element - Specifies input element\n * @param {string} moduleName - Specifies module name\n * @returns {void}\n */\nfunction preRender(proxy, control, wrapper, element, moduleName) {\n    element = wrapperInitialize(proxy.createElement, control, 'checkbox', element, wrapper, moduleName);\n    proxy.element = element;\n    if (proxy.element.getAttribute('type') !== 'checkbox') {\n        proxy.element.setAttribute('type', 'checkbox');\n    }\n    if (!proxy.element.id) {\n        proxy.element.id = getUniqueID('e-' + moduleName);\n    }\n}\n/**\n * Creates CheckBox component UI with theming and ripple support.\n *\n * @private\n * @param {CreateElementArgs} createElement - Specifies Created Element args\n * @param {boolean} enableRipple - Specifies ripple effect\n * @param {CheckBoxUtilModel} options - Specifies Checkbox util Model\n * @returns {Element} - Checkbox Element\n */\nfunction createCheckBox(createElement, enableRipple = false, options = {}) {\n    const wrapper = createElement('div', { className: 'e-checkbox-wrapper e-css' });\n    if (options.cssClass) {\n        addClass([wrapper], options.cssClass.split(' '));\n    }\n    if (options.enableRtl) {\n        wrapper.classList.add('e-rtl');\n    }\n    if (enableRipple) {\n        const rippleSpan = createElement('span', { className: 'e-ripple-container' });\n        rippleEffect(rippleSpan, { isCenterRipple: true, duration: 400 });\n        wrapper.appendChild(rippleSpan);\n    }\n    const frameSpan = createElement('span', { className: 'e-frame e-icons' });\n    if (options.checked) {\n        frameSpan.classList.add('e-check');\n    }\n    wrapper.appendChild(frameSpan);\n    if (options.label) {\n        const labelSpan = createElement('span', { className: 'e-label' });\n        if (options.disableHtmlEncode) {\n            labelSpan.textContent = options.label;\n        }\n        else {\n            labelSpan.innerHTML = options.label;\n        }\n        wrapper.appendChild(labelSpan);\n    }\n    return wrapper;\n}\n/**\n * Handles ripple mouse.\n *\n * @private\n * @param {MouseEvent} e - Specifies mouse event\n * @param {Element} rippleSpan - Specifies Ripple span element\n * @returns {void}\n */\nfunction rippleMouseHandler(e, rippleSpan) {\n    if (rippleSpan) {\n        const event = document.createEvent('MouseEvents');\n        event.initEvent(e.type, false, true);\n        rippleSpan.dispatchEvent(event);\n    }\n}\n/**\n * Append hidden input to given element\n *\n * @private\n * @param {Switch | CheckBox} proxy - Specifies Proxy\n * @param {Element} wrap - Specifies Wrapper ELement\n * @returns {void}\n */\nfunction setHiddenInput(proxy, wrap) {\n    if (proxy.element.getAttribute('ejs-for')) {\n        wrap.appendChild(proxy.createElement('input', {\n            attrs: { 'name': proxy.name || proxy.element.name, 'value': 'false', 'type': 'hidden' }\n        }));\n    }\n}\n\n/**\n * Common modules\n */\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst buttonObserver = new Observer();\nconst cssClassName = {\n    RTL: 'e-rtl',\n    BUTTON: 'e-btn',\n    PRIMARY: 'e-primary',\n    ICONBTN: 'e-icon-btn'\n};\n/**\n * The Button is a graphical user interface element that triggers an event on its click action. It can contain a text, an image, or both.\n * ```html\n * <button id=\"button\">Button</button>\n * ```\n * ```typescript\n * <script>\n * var btnObj = new Button();\n * btnObj.appendTo(\"#button\");\n * </script>\n * ```\n */\nlet Button = class Button extends Component {\n    /**\n     * Constructor for creating the widget\n     *\n     * @param  {ButtonModel} options - Specifies the button model\n     * @param  {string|HTMLButtonElement} element - Specifies the target element\n     */\n    constructor(options, element) {\n        super(options, element);\n    }\n    preRender() {\n        // pre render code snippets\n    }\n    /**\n     * Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    render() {\n        this.initialize();\n        this.removeRippleEffect = rippleEffect(this.element, { selector: '.' + cssClassName.BUTTON });\n        this.renderComplete();\n    }\n    initialize() {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' '));\n        }\n        if (this.isPrimary) {\n            this.element.classList.add(cssClassName.PRIMARY);\n        }\n        if (!isBlazor() || (isBlazor() && this.getModuleName() !== 'progress-btn')) {\n            if (this.content) {\n                const tempContent = (this.enableHtmlSanitizer) ? SanitizeHtmlHelper.sanitize(this.content) : this.content;\n                this.element.innerHTML = tempContent;\n            }\n            this.setIconCss();\n        }\n        if (this.enableRtl) {\n            this.element.classList.add(cssClassName.RTL);\n        }\n        if (this.disabled) {\n            this.controlStatus(this.disabled);\n        }\n        else {\n            this.wireEvents();\n        }\n    }\n    controlStatus(disabled) {\n        this.element.disabled = disabled;\n    }\n    setIconCss() {\n        if (this.iconCss) {\n            const span = this.createElement('span', { className: 'e-btn-icon ' + this.iconCss });\n            if (!this.element.textContent.trim()) {\n                this.element.classList.add(cssClassName.ICONBTN);\n            }\n            else {\n                span.classList.add('e-icon-' + this.iconPosition.toLowerCase());\n                if (this.iconPosition === 'Top' || this.iconPosition === 'Bottom') {\n                    this.element.classList.add('e-' + this.iconPosition.toLowerCase() + '-icon-btn');\n                }\n            }\n            const node = this.element.childNodes[0];\n            if (node && (this.iconPosition === 'Left' || this.iconPosition === 'Top')) {\n                this.element.insertBefore(span, node);\n            }\n            else {\n                this.element.appendChild(span);\n            }\n        }\n    }\n    wireEvents() {\n        if (this.isToggle) {\n            EventHandler.add(this.element, 'click', this.btnClickHandler, this);\n        }\n    }\n    unWireEvents() {\n        if (this.isToggle) {\n            EventHandler.remove(this.element, 'click', this.btnClickHandler);\n        }\n    }\n    btnClickHandler() {\n        if (this.element.classList.contains('e-active')) {\n            this.element.classList.remove('e-active');\n        }\n        else {\n            this.element.classList.add('e-active');\n        }\n    }\n    /**\n     * Destroys the widget.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        let classList = [cssClassName.PRIMARY, cssClassName.RTL, cssClassName.ICONBTN, 'e-success', 'e-info', 'e-danger',\n            'e-warning', 'e-flat', 'e-outline', 'e-small', 'e-bigger', 'e-active', 'e-round',\n            'e-top-icon-btn', 'e-bottom-icon-btn'];\n        if (this.cssClass) {\n            classList = classList.concat(this.cssClass.split(' '));\n        }\n        super.destroy();\n        removeClass([this.element], classList);\n        if (!this.element.getAttribute('class')) {\n            this.element.removeAttribute('class');\n        }\n        if (this.disabled) {\n            this.element.removeAttribute('disabled');\n        }\n        if (this.content) {\n            this.element.innerHTML = this.element.innerHTML.replace(this.content, '');\n        }\n        const span = this.element.querySelector('span.e-btn-icon');\n        if (span) {\n            detach(span);\n        }\n        this.unWireEvents();\n        if (isRippleEnabled) {\n            this.removeRippleEffect();\n        }\n    }\n    /**\n     * Get component name.\n     *\n     * @returns {string} - Module name\n     * @private\n     */\n    getModuleName() {\n        return 'btn';\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Persist Data\n     * @private\n     */\n    getPersistData() {\n        return this.addOnPersist([]);\n    }\n    /**\n     * Dynamically injects the required modules to the component.\n     *\n     * @private\n     * @returns {void}\n     */\n    static Inject() {\n        // Inject code snippets\n    }\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param  {ButtonModel} newProp - Specifies new properties\n     * @param  {ButtonModel} oldProp - Specifies old properties\n     * @returns {void}\n     * @private\n     */\n    onPropertyChanged(newProp, oldProp) {\n        let span = this.element.querySelector('span.e-btn-icon');\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'isPrimary':\n                    if (newProp.isPrimary) {\n                        this.element.classList.add(cssClassName.PRIMARY);\n                    }\n                    else {\n                        this.element.classList.remove(cssClassName.PRIMARY);\n                    }\n                    break;\n                case 'disabled':\n                    this.controlStatus(newProp.disabled);\n                    break;\n                case 'iconCss': {\n                    if (span) {\n                        if (newProp.iconCss) {\n                            span.className = 'e-btn-icon ' + newProp.iconCss;\n                            if (this.element.textContent.trim()) {\n                                if (this.iconPosition === 'Left') {\n                                    span.classList.add('e-icon-left');\n                                }\n                                else {\n                                    span.classList.add('e-icon-right');\n                                }\n                            }\n                        }\n                        else {\n                            detach(span);\n                        }\n                    }\n                    else {\n                        this.setIconCss();\n                    }\n                    break;\n                }\n                case 'iconPosition':\n                    removeClass([this.element], ['e-top-icon-btn', 'e-bottom-icon-btn']);\n                    span = this.element.querySelector('span.e-btn-icon');\n                    if (span) {\n                        detach(span);\n                    }\n                    this.setIconCss();\n                    break;\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        removeClass([this.element], oldProp.cssClass.split(' '));\n                    }\n                    if (newProp.cssClass) {\n                        addClass([this.element], newProp.cssClass.split(' '));\n                    }\n                    break;\n                case 'enableRtl':\n                    if (newProp.enableRtl) {\n                        this.element.classList.add(cssClassName.RTL);\n                    }\n                    else {\n                        this.element.classList.remove(cssClassName.RTL);\n                    }\n                    break;\n                case 'content': {\n                    const node = getTextNode(this.element);\n                    if (!node) {\n                        this.element.classList.remove(cssClassName.ICONBTN);\n                    }\n                    if (!isBlazor() || (isBlazor() && !this.isServerRendered && this.getModuleName() !== 'progress-btn')) {\n                        if (this.enableHtmlSanitizer) {\n                            newProp.content = SanitizeHtmlHelper.sanitize(newProp.content);\n                        }\n                        this.element.innerHTML = newProp.content;\n                        this.setIconCss();\n                    }\n                    break;\n                }\n                case 'isToggle':\n                    if (newProp.isToggle) {\n                        EventHandler.add(this.element, 'click', this.btnClickHandler, this);\n                    }\n                    else {\n                        EventHandler.remove(this.element, 'click', this.btnClickHandler);\n                        removeClass([this.element], ['e-active']);\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Click the button element\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n    click() {\n        this.element.click();\n    }\n    /**\n     * Sets the focus to Button\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n    focusIn() {\n        this.element.focus();\n    }\n};\n__decorate([\n    Property('Left')\n], Button.prototype, \"iconPosition\", void 0);\n__decorate([\n    Property('')\n], Button.prototype, \"iconCss\", void 0);\n__decorate([\n    Property(false)\n], Button.prototype, \"disabled\", void 0);\n__decorate([\n    Property(false)\n], Button.prototype, \"isPrimary\", void 0);\n__decorate([\n    Property('')\n], Button.prototype, \"cssClass\", void 0);\n__decorate([\n    Property('')\n], Button.prototype, \"content\", void 0);\n__decorate([\n    Property(false)\n], Button.prototype, \"isToggle\", void 0);\n__decorate([\n    Property()\n], Button.prototype, \"locale\", void 0);\n__decorate([\n    Property(false)\n], Button.prototype, \"enableHtmlSanitizer\", void 0);\n__decorate([\n    Event()\n], Button.prototype, \"created\", void 0);\nButton = __decorate([\n    NotifyPropertyChanges\n], Button);\n\n/**\n * Button modules\n */\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst CHECK = 'e-check';\nconst DISABLED = 'e-checkbox-disabled';\nconst FRAME = 'e-frame';\nconst INDETERMINATE = 'e-stop';\nconst LABEL = 'e-label';\nconst RIPPLE = 'e-ripple-container';\nconst RIPPLECHECK = 'e-ripple-check';\nconst RIPPLEINDETERMINATE = 'e-ripple-stop';\nconst RTL = 'e-rtl';\nconst WRAPPER = 'e-checkbox-wrapper';\nconst containerAttr = ['title', 'class', 'style', 'disabled', 'readonly', 'name', 'value'];\n/**\n * The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.\n * It contains checked, unchecked, and indeterminate states.\n * ```html\n * <input type=\"checkbox\" id=\"checkbox\"/>\n * <script>\n * var checkboxObj = new CheckBox({ label: \"Default\" });\n * checkboxObj.appendTo(\"#checkbox\");\n * </script>\n * ```\n */\nlet CheckBox = class CheckBox extends Component {\n    /**\n     * Constructor for creating the widget\n     *\n     * @private\n     * @param {CheckBoxModel} options - Specifies checkbox model\n     * @param {string | HTMLInputElement} element - Specifies target element\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.isFocused = false;\n        this.isMouseClick = false;\n    }\n    changeState(state) {\n        let ariaState;\n        let rippleSpan;\n        const frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];\n        if (isRippleEnabled) {\n            rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n        }\n        if (state === 'check') {\n            frameSpan.classList.remove(INDETERMINATE);\n            frameSpan.classList.add(CHECK);\n            if (rippleSpan) {\n                rippleSpan.classList.remove(RIPPLEINDETERMINATE);\n                rippleSpan.classList.add(RIPPLECHECK);\n            }\n            ariaState = 'true';\n            this.element.checked = true;\n        }\n        else if (state === 'uncheck') {\n            removeClass([frameSpan], [CHECK, INDETERMINATE]);\n            if (rippleSpan) {\n                removeClass([rippleSpan], [RIPPLECHECK, RIPPLEINDETERMINATE]);\n            }\n            ariaState = 'false';\n            this.element.checked = false;\n        }\n        else {\n            frameSpan.classList.remove(CHECK);\n            frameSpan.classList.add(INDETERMINATE);\n            if (rippleSpan) {\n                rippleSpan.classList.remove(RIPPLECHECK);\n                rippleSpan.classList.add(RIPPLEINDETERMINATE);\n            }\n            ariaState = 'mixed';\n            this.element.indeterminate = true;\n        }\n        this.getWrapper().setAttribute('aria-checked', ariaState);\n    }\n    clickHandler(event) {\n        if (this.isMouseClick) {\n            this.focusOutHandler();\n            this.isMouseClick = false;\n        }\n        if (this.indeterminate) {\n            this.changeState(this.checked ? 'check' : 'uncheck');\n            this.indeterminate = false;\n            this.element.indeterminate = false;\n        }\n        else if (this.checked) {\n            this.changeState('uncheck');\n            this.checked = false;\n        }\n        else {\n            this.changeState('check');\n            this.checked = true;\n        }\n        const changeEventArgs = { checked: this.updateVueArrayModel(false), event: event };\n        this.trigger('change', changeEventArgs);\n        event.stopPropagation();\n    }\n    /**\n     * Destroys the widget.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        let wrapper = this.getWrapper();\n        super.destroy();\n        if (this.wrapper) {\n            wrapper = this.wrapper;\n            if (!this.disabled) {\n                this.unWireEvents();\n            }\n            if (this.tagName === 'INPUT') {\n                if (this.getWrapper() && wrapper.parentNode) {\n                    wrapper.parentNode.insertBefore(this.element, wrapper);\n                }\n                detach(wrapper);\n                this.element.checked = false;\n                if (this.indeterminate) {\n                    this.element.indeterminate = false;\n                }\n                ['name', 'value', 'disabled'].forEach((key) => {\n                    this.element.removeAttribute(key);\n                });\n            }\n            else {\n                ['role', 'aria-checked', 'class'].forEach((key) => {\n                    wrapper.removeAttribute(key);\n                });\n                wrapper.innerHTML = '';\n            }\n        }\n    }\n    focusHandler() {\n        this.isFocused = true;\n    }\n    focusOutHandler() {\n        const wrapper = this.getWrapper();\n        if (wrapper) {\n            wrapper.classList.remove('e-focus');\n        }\n        this.isFocused = false;\n    }\n    /**\n     * Gets the module name.\n     *\n     * @private\n     * @returns {string} - Module Name\n     */\n    getModuleName() {\n        return 'checkbox';\n    }\n    /**\n     * Gets the properties to be maintained in the persistence state.\n     *\n     * @private\n     * @returns {string} - Persist Data\n     */\n    getPersistData() {\n        return this.addOnPersist(['checked', 'indeterminate']);\n    }\n    getWrapper() {\n        if (this.element && this.element.parentElement) {\n            return this.element.parentElement.parentElement;\n        }\n        else {\n            return null;\n        }\n    }\n    initialize() {\n        if (isNullOrUndefined(this.initialCheckedValue)) {\n            this.initialCheckedValue = this.checked;\n        }\n        if (this.name) {\n            this.element.setAttribute('name', this.name);\n        }\n        if (this.value) {\n            this.element.setAttribute('value', this.value);\n            if (this.isVue && typeof this.value === 'boolean' && this.value === true) {\n                this.setProperties({ 'checked': true }, true);\n            }\n        }\n        if (this.checked) {\n            this.changeState('check');\n        }\n        if (this.indeterminate) {\n            this.changeState();\n        }\n        if (this.disabled) {\n            this.setDisabled();\n        }\n    }\n    initWrapper() {\n        let wrapper = this.element.parentElement;\n        if (!wrapper.classList.contains(WRAPPER)) {\n            wrapper = this.createElement('div', {\n                className: WRAPPER, attrs: { 'role': 'checkbox', 'aria-checked': 'false' }\n            });\n            this.element.parentNode.insertBefore(wrapper, this.element);\n        }\n        const label = this.createElement('label', { attrs: { for: this.element.id } });\n        const frameSpan = this.createElement('span', { className: 'e-icons ' + FRAME });\n        wrapper.classList.add('e-wrapper');\n        if (this.enableRtl) {\n            wrapper.classList.add(RTL);\n        }\n        if (this.cssClass) {\n            addClass([wrapper], this.cssClass.split(' '));\n        }\n        wrapper.appendChild(label);\n        label.appendChild(this.element);\n        setHiddenInput(this, label);\n        label.appendChild(frameSpan);\n        if (isRippleEnabled) {\n            const rippleSpan = this.createElement('span', { className: RIPPLE });\n            if (this.labelPosition === 'Before') {\n                label.appendChild(rippleSpan);\n            }\n            else {\n                label.insertBefore(rippleSpan, frameSpan);\n            }\n            rippleEffect(rippleSpan, { duration: 400, isCenterRipple: true });\n        }\n        if (this.label) {\n            this.setText(this.label);\n        }\n    }\n    keyUpHandler() {\n        if (this.isFocused) {\n            this.getWrapper().classList.add('e-focus');\n        }\n    }\n    labelMouseDownHandler(e) {\n        this.isMouseClick = true;\n        const rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n        rippleMouseHandler(e, rippleSpan);\n    }\n    labelMouseUpHandler(e) {\n        this.isMouseClick = true;\n        const rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE)[0];\n        if (rippleSpan) {\n            const rippleElem = rippleSpan.querySelectorAll('.e-ripple-element');\n            for (let i = 0; i < rippleElem.length - 1; i++) {\n                rippleSpan.removeChild(rippleSpan.childNodes[i]);\n            }\n            rippleMouseHandler(e, rippleSpan);\n        }\n    }\n    /**\n     * Called internally if any of the property value changes.\n     *\n     * @private\n     * @param {CheckBoxModel} newProp - Specifies new Properties\n     * @param {CheckBoxModel} oldProp - Specifies old Properties\n     *\n     * @returns {void}\n     */\n    onPropertyChanged(newProp, oldProp) {\n        const wrapper = this.getWrapper();\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'checked':\n                    this.indeterminate = false;\n                    this.element.indeterminate = false;\n                    this.changeState(newProp.checked ? 'check' : 'uncheck');\n                    break;\n                case 'indeterminate':\n                    if (newProp.indeterminate) {\n                        this.changeState();\n                    }\n                    else {\n                        this.element.indeterminate = false;\n                        this.changeState(this.checked ? 'check' : 'uncheck');\n                    }\n                    break;\n                case 'disabled':\n                    if (newProp.disabled) {\n                        this.setDisabled();\n                        this.wrapper = this.getWrapper();\n                        this.unWireEvents();\n                    }\n                    else {\n                        this.element.disabled = false;\n                        wrapper.classList.remove(DISABLED);\n                        wrapper.setAttribute('aria-disabled', 'false');\n                        this.wireEvents();\n                    }\n                    break;\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        removeClass([wrapper], oldProp.cssClass.split(' '));\n                    }\n                    if (newProp.cssClass) {\n                        addClass([wrapper], newProp.cssClass.split(' '));\n                    }\n                    break;\n                case 'enableRtl':\n                    if (newProp.enableRtl) {\n                        wrapper.classList.add(RTL);\n                    }\n                    else {\n                        wrapper.classList.remove(RTL);\n                    }\n                    break;\n                case 'label':\n                    this.setText(newProp.label);\n                    break;\n                case 'labelPosition': {\n                    const label = wrapper.getElementsByClassName(LABEL)[0];\n                    const labelWrap = wrapper.getElementsByTagName('label')[0];\n                    detach(label);\n                    if (newProp.labelPosition === 'After') {\n                        labelWrap.appendChild(label);\n                    }\n                    else {\n                        labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);\n                    }\n                    break;\n                }\n                case 'name':\n                    this.element.setAttribute('name', newProp.name);\n                    break;\n                case 'value':\n                    if (this.isVue && typeof newProp.value === 'object') {\n                        break;\n                    }\n                    this.element.setAttribute('value', newProp.value);\n                    break;\n                case 'htmlAttributes':\n                    this.updateHtmlAttributeToWrapper();\n                    break;\n            }\n        }\n    }\n    /**\n     * Initialize Angular, React and Unique ID support.\n     *\n     * @private\n     * @returns {void}\n     */\n    preRender() {\n        let element = this.element;\n        this.formElement = closest(this.element, 'form');\n        this.tagName = this.element.tagName;\n        element = wrapperInitialize(this.createElement, 'EJS-CHECKBOX', 'checkbox', element, WRAPPER, 'checkbox');\n        this.element = element;\n        if (this.element.getAttribute('type') !== 'checkbox') {\n            this.element.setAttribute('type', 'checkbox');\n        }\n        if (!this.element.id) {\n            this.element.id = getUniqueID('e-' + this.getModuleName());\n        }\n    }\n    /**\n     * Initialize the control rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        this.initWrapper();\n        this.initialize();\n        if (!this.disabled) {\n            this.wireEvents();\n        }\n        this.updateHtmlAttributeToWrapper();\n        this.updateVueArrayModel(true);\n        this.renderComplete();\n        this.wrapper = this.getWrapper();\n    }\n    setDisabled() {\n        const wrapper = this.getWrapper();\n        this.element.disabled = true;\n        wrapper.classList.add(DISABLED);\n        wrapper.setAttribute('aria-disabled', 'true');\n    }\n    setText(text) {\n        const wrapper = this.getWrapper();\n        if (!wrapper) {\n            return;\n        }\n        let label = wrapper.getElementsByClassName(LABEL)[0];\n        if (label) {\n            label.textContent = text;\n        }\n        else {\n            text = (this.enableHtmlSanitizer) ? SanitizeHtmlHelper.sanitize(text) : text;\n            label = this.createElement('span', { className: LABEL, innerHTML: text });\n            const labelWrap = wrapper.getElementsByTagName('label')[0];\n            if (this.labelPosition === 'Before') {\n                labelWrap.insertBefore(label, wrapper.getElementsByClassName(FRAME)[0]);\n            }\n            else {\n                labelWrap.appendChild(label);\n            }\n        }\n    }\n    changeHandler(e) {\n        e.stopPropagation();\n    }\n    formResetHandler() {\n        this.checked = this.initialCheckedValue;\n        this.element.checked = this.initialCheckedValue;\n    }\n    unWireEvents() {\n        const wrapper = this.wrapper;\n        EventHandler.remove(this.element, 'click', this.clickHandler);\n        EventHandler.remove(this.element, 'keyup', this.keyUpHandler);\n        EventHandler.remove(this.element, 'focus', this.focusHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        const label = wrapper.getElementsByTagName('label')[0];\n        EventHandler.remove(label, 'mousedown', this.labelMouseDownHandler);\n        EventHandler.remove(label, 'mouseup', this.labelMouseUpHandler);\n        if (this.formElement) {\n            EventHandler.remove(this.formElement, 'reset', this.formResetHandler);\n        }\n        if (this.tagName === 'EJS-CHECKBOX') {\n            EventHandler.remove(this.element, 'change', this.changeHandler);\n        }\n    }\n    wireEvents() {\n        const wrapper = this.getWrapper();\n        EventHandler.add(this.element, 'click', this.clickHandler, this);\n        EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);\n        EventHandler.add(this.element, 'focus', this.focusHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        const label = wrapper.getElementsByTagName('label')[0];\n        EventHandler.add(label, 'mousedown', this.labelMouseDownHandler, this);\n        EventHandler.add(label, 'mouseup', this.labelMouseUpHandler, this);\n        if (this.formElement) {\n            EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n        }\n        if (this.tagName === 'EJS-CHECKBOX') {\n            EventHandler.add(this.element, 'change', this.changeHandler, this);\n        }\n    }\n    updateVueArrayModel(init) {\n        if (this.isVue && typeof this.value === 'object') {\n            const value = this.element.value;\n            if (value && this.value) {\n                if (init) {\n                    for (let i = 0; i < this.value.length; i++) {\n                        if (value === this.value[i]) {\n                            this.changeState('check');\n                            this.setProperties({ 'checked': true }, true);\n                        }\n                    }\n                }\n                else {\n                    const index = this.value.indexOf(value);\n                    if (this.checked) {\n                        if (index < 0) {\n                            this.value.push(value);\n                        }\n                    }\n                    else {\n                        if (index > -1) {\n                            this.value.splice(index, 1);\n                        }\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    return this.value;\n                }\n            }\n        }\n        return this.element.checked;\n    }\n    updateHtmlAttributeToWrapper() {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (const key of Object.keys(this.htmlAttributes)) {\n                if (containerAttr.indexOf(key) > -1) {\n                    const wrapper = this.getWrapper();\n                    if (key === 'class') {\n                        addClass([wrapper], this.htmlAttributes[key].split(' '));\n                    }\n                    else if (key === 'title') {\n                        wrapper.setAttribute(key, this.htmlAttributes[key]);\n                    }\n                    else if (key === 'style') {\n                        const frameSpan = this.getWrapper().getElementsByClassName(FRAME)[0];\n                        frameSpan.setAttribute(key, this.htmlAttributes[key]);\n                    }\n                    else {\n                        this.element.setAttribute(key, this.htmlAttributes[key]);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Click the CheckBox element\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n    click() {\n        this.element.click();\n    }\n    /**\n     * Sets the focus to CheckBox\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n    focusIn() {\n        this.element.focus();\n    }\n};\n__decorate$1([\n    Event()\n], CheckBox.prototype, \"change\", void 0);\n__decorate$1([\n    Event()\n], CheckBox.prototype, \"created\", void 0);\n__decorate$1([\n    Property(false)\n], CheckBox.prototype, \"checked\", void 0);\n__decorate$1([\n    Property('')\n], CheckBox.prototype, \"cssClass\", void 0);\n__decorate$1([\n    Property(false)\n], CheckBox.prototype, \"disabled\", void 0);\n__decorate$1([\n    Property(false)\n], CheckBox.prototype, \"indeterminate\", void 0);\n__decorate$1([\n    Property('')\n], CheckBox.prototype, \"label\", void 0);\n__decorate$1([\n    Property('After')\n], CheckBox.prototype, \"labelPosition\", void 0);\n__decorate$1([\n    Property('')\n], CheckBox.prototype, \"name\", void 0);\n__decorate$1([\n    Property('')\n], CheckBox.prototype, \"value\", void 0);\n__decorate$1([\n    Property(false)\n], CheckBox.prototype, \"enableHtmlSanitizer\", void 0);\n__decorate$1([\n    Property({})\n], CheckBox.prototype, \"htmlAttributes\", void 0);\nCheckBox = __decorate$1([\n    NotifyPropertyChanges\n], CheckBox);\n\n/**\n * CheckBox modules\n */\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar RadioButton_1;\nconst LABEL$1 = 'e-label';\nconst RIPPLE$1 = 'e-ripple-container';\nconst RTL$1 = 'e-rtl';\nconst WRAPPER$1 = 'e-radio-wrapper';\nconst ATTRIBUTES = ['title', 'class', 'style', 'disabled', 'readonly', 'name', 'value'];\n/**\n * The RadioButton is a graphical user interface element that allows you to select one option from the choices.\n * It contains checked and unchecked states.\n * ```html\n * <input type=\"radio\" id=\"radio\"/>\n * <script>\n * var radioObj = new RadioButton({ label: \"Default\" });\n * radioObj.appendTo(\"#radio\");\n * </script>\n * ```\n */\nlet RadioButton = RadioButton_1 = class RadioButton extends Component {\n    /**\n     * Constructor for creating the widget\n     *\n     * @private\n     * @param {RadioButtonModel} options - Specifies Radio button model\n     * @param {string | HTMLInputElement} element - Specifies target element\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.isFocused = false;\n    }\n    changeHandler(event) {\n        this.checked = true;\n        this.dataBind();\n        let value = this.element.getAttribute('value');\n        value = this.isVue && value ? this.element.value : this.value;\n        this.trigger('change', { value: value, event: event });\n        if (this.tagName === 'EJS-RADIOBUTTON') {\n            event.stopPropagation();\n        }\n    }\n    updateChange() {\n        let input;\n        let instance;\n        const radioGrp = this.getRadioGroup();\n        for (let i = 0; i < radioGrp.length; i++) {\n            input = radioGrp[i];\n            if (input !== this.element) {\n                instance = getInstance(input, RadioButton_1);\n                instance.checked = false;\n                if (this.tagName === 'EJS-RADIOBUTTON') {\n                    instance.angularValue = this.value;\n                }\n            }\n        }\n    }\n    /**\n     * Destroys the widget.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        const radioWrap = this.element.parentElement;\n        super.destroy();\n        if (!this.disabled) {\n            this.unWireEvents();\n        }\n        if (this.tagName === 'INPUT') {\n            if (radioWrap.parentNode) {\n                radioWrap.parentNode.insertBefore(this.element, radioWrap);\n            }\n            detach(radioWrap);\n            this.element.checked = false;\n            ['name', 'value', 'disabled'].forEach((key) => {\n                this.element.removeAttribute(key);\n            });\n        }\n        else {\n            ['role', 'aria-checked', 'class'].forEach((key) => {\n                radioWrap.removeAttribute(key);\n            });\n            radioWrap.innerHTML = '';\n        }\n    }\n    focusHandler() {\n        this.isFocused = true;\n    }\n    focusOutHandler() {\n        const label = this.getLabel();\n        if (label) {\n            label.classList.remove('e-focus');\n        }\n    }\n    getModuleName() {\n        return 'radio';\n    }\n    /**\n     * To get the value of selected radio button in a group.\n     *\n     * @method getSelectedValue\n     * @returns {string} - Selected Value\n     */\n    getSelectedValue() {\n        let input;\n        const radioGrp = this.getRadioGroup();\n        for (let i = 0, len = radioGrp.length; i < len; i++) {\n            input = radioGrp[i];\n            if (input.checked) {\n                return input.value;\n            }\n        }\n        return '';\n    }\n    getRadioGroup() {\n        return document.querySelectorAll('input.e-radio[name=\"' + this.element.getAttribute('name') + '\"]');\n    }\n    /**\n     * Gets the properties to be maintained in the persistence state.\n     *\n     * @private\n     * @returns {string} - Persist Data\n     */\n    getPersistData() {\n        return this.addOnPersist(['checked']);\n    }\n    getWrapper() {\n        if (this.element) {\n            return this.element.parentElement;\n        }\n        else {\n            return null;\n        }\n    }\n    getLabel() {\n        if (this.element) {\n            return this.element.nextElementSibling;\n        }\n        else {\n            return null;\n        }\n    }\n    initialize() {\n        if (isNullOrUndefined(this.initialCheckedValue)) {\n            this.initialCheckedValue = this.checked;\n        }\n        this.initWrapper();\n        this.updateHtmlAttribute();\n        if (this.name) {\n            this.element.setAttribute('name', this.name);\n        }\n        const value = this.element.getAttribute('value');\n        if (this.isVue && value && value === this.value) {\n            this.checked = true;\n        }\n        if (this.isVue ? this.value && !value : this.value) {\n            this.element.setAttribute('value', this.value);\n        }\n        if (this.checked) {\n            this.element.checked = true;\n        }\n        if (this.disabled) {\n            this.setDisabled();\n        }\n    }\n    initWrapper() {\n        let rippleSpan;\n        let wrapper = this.element.parentElement;\n        if (!wrapper.classList.contains(WRAPPER$1)) {\n            wrapper = this.createElement('div', { className: WRAPPER$1 });\n            this.element.parentNode.insertBefore(wrapper, this.element);\n        }\n        const label = this.createElement('label', { attrs: { for: this.element.id } });\n        wrapper.appendChild(this.element);\n        wrapper.appendChild(label);\n        if (isRippleEnabled) {\n            rippleSpan = this.createElement('span', { className: (RIPPLE$1) });\n            label.appendChild(rippleSpan);\n            rippleEffect(rippleSpan, {\n                duration: 400,\n                isCenterRipple: true\n            });\n        }\n        wrapper.classList.add('e-wrapper');\n        if (this.enableRtl) {\n            label.classList.add(RTL$1);\n        }\n        if (this.cssClass) {\n            addClass([wrapper], this.cssClass.split(' '));\n        }\n        if (this.label) {\n            this.setText(this.label);\n        }\n    }\n    keyUpHandler() {\n        if (this.isFocused) {\n            this.getLabel().classList.add('e-focus');\n        }\n    }\n    labelRippleHandler(e) {\n        const ripple = this.getLabel().getElementsByClassName(RIPPLE$1)[0];\n        rippleMouseHandler(e, ripple);\n    }\n    formResetHandler() {\n        this.checked = this.initialCheckedValue;\n        if (this.initialCheckedValue) {\n            attributes(this.element, { 'checked': 'true' });\n        }\n    }\n    /**\n     * Called internally if any of the property value changes.\n     *\n     * @private\n     * @param {RadioButtonModel} newProp - Specifies New Properties\n     * @param {RadioButtonModel} oldProp - Specifies Old Properties\n     * @returns {void}\n     */\n    onPropertyChanged(newProp, oldProp) {\n        const wrap = this.getWrapper();\n        const label = this.getLabel();\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'checked':\n                    if (newProp.checked) {\n                        this.updateChange();\n                    }\n                    this.element.checked = newProp.checked;\n                    break;\n                case 'disabled':\n                    if (newProp.disabled) {\n                        this.setDisabled();\n                        this.unWireEvents();\n                    }\n                    else {\n                        this.element.disabled = false;\n                        this.wireEvents();\n                    }\n                    break;\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        removeClass([wrap], oldProp.cssClass.split(' '));\n                    }\n                    if (newProp.cssClass) {\n                        addClass([wrap], newProp.cssClass.split(' '));\n                    }\n                    break;\n                case 'enableRtl':\n                    if (newProp.enableRtl) {\n                        label.classList.add(RTL$1);\n                    }\n                    else {\n                        label.classList.remove(RTL$1);\n                    }\n                    break;\n                case 'label':\n                    this.setText(newProp.label);\n                    break;\n                case 'labelPosition':\n                    if (newProp.labelPosition === 'Before') {\n                        label.classList.add('e-right');\n                    }\n                    else {\n                        label.classList.remove('e-right');\n                    }\n                    break;\n                case 'name':\n                    this.element.setAttribute('name', newProp.name);\n                    break;\n                case 'value':\n                    if (!isNullOrUndefined(this.htmlAttributes) && this.htmlAttributes.value) {\n                        break;\n                    }\n                    this.element.setAttribute('value', newProp.value);\n                    break;\n                case 'htmlAttributes':\n                    this.updateHtmlAttribute();\n                    break;\n            }\n        }\n    }\n    /**\n     * Initialize checked Property, Angular and React and Unique ID support.\n     *\n     * @private\n     * @returns {void}\n     */\n    preRender() {\n        let element = this.element;\n        this.formElement = closest(this.element, 'form');\n        this.tagName = this.element.tagName;\n        element = wrapperInitialize(this.createElement, 'EJS-RADIOBUTTON', 'radio', element, WRAPPER$1, 'radio');\n        this.element = element;\n        if (this.element.getAttribute('type') !== 'radio') {\n            this.element.setAttribute('type', 'radio');\n        }\n        if (!this.element.id) {\n            this.element.id = getUniqueID('e-' + this.getModuleName());\n        }\n        if (this.tagName === 'EJS-RADIOBUTTON') {\n            const formControlName = this.element.getAttribute('formcontrolname');\n            if (formControlName) {\n                this.setProperties({ 'name': formControlName }, true);\n                this.element.setAttribute('name', formControlName);\n            }\n        }\n    }\n    /**\n     * Initialize the control rendering\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        this.initialize();\n        if (!this.disabled) {\n            this.wireEvents();\n        }\n        this.renderComplete();\n    }\n    setDisabled() {\n        this.element.disabled = true;\n    }\n    setText(text) {\n        const label = this.getLabel();\n        let textLabel = label.getElementsByClassName(LABEL$1)[0];\n        if (textLabel) {\n            textLabel.textContent = text;\n        }\n        else {\n            text = (this.enableHtmlSanitizer) ? SanitizeHtmlHelper.sanitize(text) : text;\n            textLabel = this.createElement('span', { className: LABEL$1, innerHTML: text });\n            label.appendChild(textLabel);\n        }\n        if (this.labelPosition === 'Before') {\n            this.getLabel().classList.add('e-right');\n        }\n        else {\n            this.getLabel().classList.remove('e-right');\n        }\n    }\n    updateHtmlAttribute() {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (const key of Object.keys(this.htmlAttributes)) {\n                if (ATTRIBUTES.indexOf(key) > -1) {\n                    const wrapper = this.element.parentElement;\n                    if (key === 'class') {\n                        addClass([wrapper], this.htmlAttributes[key].split(' '));\n                    }\n                    else if (key === 'title' || key === 'style') {\n                        wrapper.setAttribute(key, this.htmlAttributes[key]);\n                    }\n                    else {\n                        this.element.setAttribute(key, this.htmlAttributes[key]);\n                    }\n                }\n            }\n        }\n    }\n    unWireEvents() {\n        const label = this.getLabel();\n        EventHandler.remove(this.element, 'change', this.changeHandler);\n        EventHandler.remove(this.element, 'focus', this.focusHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'keyup', this.keyUpHandler);\n        const rippleLabel = label.getElementsByClassName(LABEL$1)[0];\n        if (rippleLabel) {\n            EventHandler.remove(rippleLabel, 'mousedown', this.labelRippleHandler);\n            EventHandler.remove(rippleLabel, 'mouseup', this.labelRippleHandler);\n        }\n        if (this.formElement) {\n            EventHandler.remove(this.formElement, 'reset', this.formResetHandler);\n        }\n    }\n    wireEvents() {\n        const label = this.getLabel();\n        EventHandler.add(this.element, 'change', this.changeHandler, this);\n        EventHandler.add(this.element, 'keyup', this.keyUpHandler, this);\n        EventHandler.add(this.element, 'focus', this.focusHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        const rippleLabel = label.getElementsByClassName(LABEL$1)[0];\n        if (rippleLabel) {\n            EventHandler.add(rippleLabel, 'mousedown', this.labelRippleHandler, this);\n            EventHandler.add(rippleLabel, 'mouseup', this.labelRippleHandler, this);\n        }\n        if (this.formElement) {\n            EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n        }\n    }\n    /**\n     * Click the RadioButton element\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n    click() {\n        this.element.click();\n    }\n    /**\n     * Sets the focus to RadioButton\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n    focusIn() {\n        this.element.focus();\n    }\n};\n__decorate$2([\n    Event()\n], RadioButton.prototype, \"change\", void 0);\n__decorate$2([\n    Event()\n], RadioButton.prototype, \"created\", void 0);\n__decorate$2([\n    Property(false)\n], RadioButton.prototype, \"checked\", void 0);\n__decorate$2([\n    Property('')\n], RadioButton.prototype, \"cssClass\", void 0);\n__decorate$2([\n    Property(false)\n], RadioButton.prototype, \"disabled\", void 0);\n__decorate$2([\n    Property('')\n], RadioButton.prototype, \"label\", void 0);\n__decorate$2([\n    Property('After')\n], RadioButton.prototype, \"labelPosition\", void 0);\n__decorate$2([\n    Property('')\n], RadioButton.prototype, \"name\", void 0);\n__decorate$2([\n    Property('')\n], RadioButton.prototype, \"value\", void 0);\n__decorate$2([\n    Property(false)\n], RadioButton.prototype, \"enableHtmlSanitizer\", void 0);\n__decorate$2([\n    Property({})\n], RadioButton.prototype, \"htmlAttributes\", void 0);\nRadioButton = RadioButton_1 = __decorate$2([\n    NotifyPropertyChanges\n], RadioButton);\n\n/**\n * RadioButton modules\n */\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DISABLED$1 = 'e-switch-disabled';\nconst RIPPLE$2 = 'e-ripple-container';\nconst RIPPLE_CHECK = 'e-ripple-check';\nconst RTL$2 = 'e-rtl';\nconst WRAPPER$2 = 'e-switch-wrapper';\nconst ACTIVE = 'e-switch-active';\n/**\n * The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.\n * ```html\n * <input type=\"checkbox\" id=\"switch\"/>\n * <script>\n * var switchObj = new Switch({});\n * switchObj.appendTo(\"#switch\");\n * </script>\n * ```\n */\nlet Switch = class Switch extends Component {\n    /**\n     * Constructor for creating the widget.\n     *\n     * @private\n     *\n     * @param {SwitchModel} options switch model\n     * @param {string | HTMLInputElement} element target element\n     *\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.isFocused = false;\n        this.isDrag = false;\n    }\n    changeState(state) {\n        let ariaState;\n        let rippleSpan;\n        const wrapper = this.getWrapper();\n        const bar = wrapper.querySelector('.e-switch-inner');\n        const handle = wrapper.querySelector('.e-switch-handle');\n        if (isRippleEnabled) {\n            rippleSpan = wrapper.getElementsByClassName(RIPPLE$2)[0];\n        }\n        if (state) {\n            addClass([bar, handle], ACTIVE);\n            ariaState = 'true';\n            this.element.checked = true;\n            this.checked = true;\n            if (rippleSpan) {\n                addClass([rippleSpan], [RIPPLE_CHECK]);\n            }\n        }\n        else {\n            removeClass([bar, handle], ACTIVE);\n            ariaState = 'false';\n            this.element.checked = false;\n            this.checked = false;\n            if (rippleSpan) {\n                removeClass([rippleSpan], [RIPPLE_CHECK]);\n            }\n        }\n        wrapper.setAttribute('aria-checked', ariaState);\n    }\n    clickHandler(evt) {\n        this.isDrag = false;\n        this.focusOutHandler();\n        this.changeState(!this.checked);\n        this.element.focus();\n        const changeEventArgs = { checked: this.element.checked, event: evt };\n        this.trigger('change', changeEventArgs);\n    }\n    /**\n     * Destroys the Switch widget.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        super.destroy();\n        if (!this.disabled) {\n            this.unWireEvents();\n        }\n        destroy(this, this.getWrapper(), this.tagName);\n    }\n    focusHandler() {\n        this.isFocused = true;\n    }\n    focusOutHandler() {\n        this.getWrapper().classList.remove('e-focus');\n    }\n    /**\n     * Gets the module name.\n     *\n     * @private\n     * @returns {string} - Module Name\n     */\n    getModuleName() {\n        return 'switch';\n    }\n    /**\n     * Gets the properties to be maintained in the persistence state.\n     *\n     * @private\n     * @returns {string} - Persist data\n     */\n    getPersistData() {\n        return this.addOnPersist(['checked']);\n    }\n    getWrapper() {\n        return this.element.parentElement;\n    }\n    initialize() {\n        if (isNullOrUndefined(this.initialSwitchCheckedValue)) {\n            this.initialSwitchCheckedValue = this.checked;\n        }\n        if (this.name) {\n            this.element.setAttribute('name', this.name);\n        }\n        if (this.value) {\n            this.element.setAttribute('value', this.value);\n        }\n        if (this.checked) {\n            this.changeState(true);\n        }\n        if (this.disabled) {\n            this.setDisabled();\n        }\n        if (this.onLabel || this.offLabel) {\n            this.setLabel(this.onLabel, this.offLabel);\n        }\n    }\n    initWrapper() {\n        let wrapper = this.element.parentElement;\n        if (!wrapper.classList.contains(WRAPPER$2)) {\n            wrapper = this.createElement('div', {\n                className: WRAPPER$2, attrs: { 'role': 'switch', 'aria-checked': 'false' }\n            });\n            this.element.parentNode.insertBefore(wrapper, this.element);\n        }\n        const switchInner = this.createElement('span', { className: 'e-switch-inner' });\n        const onLabel = this.createElement('span', { className: 'e-switch-on' });\n        const offLabel = this.createElement('span', { className: 'e-switch-off' });\n        const handle = this.createElement('span', { className: 'e-switch-handle' });\n        wrapper.appendChild(this.element);\n        setHiddenInput(this, wrapper);\n        switchInner.appendChild(onLabel);\n        switchInner.appendChild(offLabel);\n        wrapper.appendChild(switchInner);\n        wrapper.appendChild(handle);\n        if (isRippleEnabled) {\n            const rippleSpan = this.createElement('span', { className: RIPPLE$2 });\n            handle.appendChild(rippleSpan);\n            rippleEffect(rippleSpan, { duration: 400, isCenterRipple: true });\n        }\n        wrapper.classList.add('e-wrapper');\n        if (this.enableRtl) {\n            wrapper.classList.add(RTL$2);\n        }\n        if (this.cssClass) {\n            addClass([wrapper], this.cssClass.split(' '));\n        }\n    }\n    /**\n     * Called internally if any of the property value changes.\n     *\n     * @private\n     * @param {SwitchModel} newProp - Specifies New Properties\n     * @param {SwitchModel} oldProp - Specifies Old Properties\n     * @returns {void}\n     */\n    onPropertyChanged(newProp, oldProp) {\n        const wrapper = this.getWrapper();\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'checked':\n                    this.changeState(newProp.checked);\n                    break;\n                case 'disabled':\n                    if (newProp.disabled) {\n                        this.setDisabled();\n                        this.unWireEvents();\n                    }\n                    else {\n                        this.element.disabled = false;\n                        wrapper.classList.remove(DISABLED$1);\n                        wrapper.setAttribute('aria-disabled', 'false');\n                        this.wireEvents();\n                    }\n                    break;\n                case 'value':\n                    this.element.setAttribute('value', newProp.value);\n                    break;\n                case 'name':\n                    this.element.setAttribute('name', newProp.name);\n                    break;\n                case 'onLabel':\n                case 'offLabel':\n                    this.setLabel(newProp.onLabel, newProp.offLabel);\n                    break;\n                case 'enableRtl':\n                    if (newProp.enableRtl) {\n                        wrapper.classList.add(RTL$2);\n                    }\n                    else {\n                        wrapper.classList.remove(RTL$2);\n                    }\n                    break;\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        removeClass([wrapper], oldProp.cssClass.split(' '));\n                    }\n                    if (newProp.cssClass) {\n                        addClass([wrapper], newProp.cssClass.split(' '));\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Initialize Angular, React and Unique ID support.\n     *\n     * @private\n     * @returns {void}\n     */\n    preRender() {\n        const element = this.element;\n        this.formElement = closest(this.element, 'form');\n        this.tagName = this.element.tagName;\n        preRender(this, 'EJS-SWITCH', WRAPPER$2, element, this.getModuleName());\n    }\n    /**\n     * Initialize control rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    render() {\n        this.initWrapper();\n        this.initialize();\n        if (!this.disabled) {\n            this.wireEvents();\n        }\n        this.renderComplete();\n    }\n    rippleHandler(e) {\n        const rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE$2)[0];\n        rippleMouseHandler(e, rippleSpan);\n        if (e.type === 'mousedown' && e.currentTarget.classList.contains('e-switch-wrapper') && e.which === 1) {\n            this.isDrag = true;\n            this.isFocused = false;\n        }\n    }\n    rippleTouchHandler(eventType) {\n        const rippleSpan = this.getWrapper().getElementsByClassName(RIPPLE$2)[0];\n        if (rippleSpan) {\n            const event = document.createEvent('MouseEvents');\n            event.initEvent(eventType, false, true);\n            rippleSpan.dispatchEvent(event);\n        }\n    }\n    setDisabled() {\n        const wrapper = this.getWrapper();\n        this.element.disabled = true;\n        wrapper.classList.add(DISABLED$1);\n        wrapper.setAttribute('aria-disabled', 'true');\n    }\n    setLabel(onText, offText) {\n        const wrapper = this.getWrapper();\n        if (onText) {\n            wrapper.querySelector('.e-switch-on').textContent = onText;\n        }\n        if (offText) {\n            wrapper.querySelector('.e-switch-off').textContent = offText;\n        }\n    }\n    switchFocusHandler() {\n        if (this.isFocused) {\n            this.getWrapper().classList.add('e-focus');\n        }\n    }\n    switchMouseUp(e) {\n        const target = e.target;\n        if (e.type === 'touchmove') {\n            e.preventDefault();\n        }\n        if (e.type === 'touchstart') {\n            this.isDrag = true;\n            this.rippleTouchHandler('mousedown');\n        }\n        if (this.isDrag) {\n            if ((e.type === 'mouseup' && target.className.indexOf('e-switch') < 0) || e.type === 'touchend') {\n                this.clickHandler(e);\n                this.rippleTouchHandler('mouseup');\n                e.preventDefault();\n            }\n        }\n    }\n    formResetHandler() {\n        this.checked = this.initialSwitchCheckedValue;\n        this.element.checked = this.initialSwitchCheckedValue;\n    }\n    /**\n     * Toggle the Switch component state into checked/unchecked.\n     *\n     * @returns {void}\n     */\n    toggle() {\n        this.clickHandler();\n    }\n    wireEvents() {\n        const wrapper = this.getWrapper();\n        this.delegateMouseUpHandler = this.switchMouseUp.bind(this);\n        this.delegateKeyUpHandler = this.switchFocusHandler.bind(this);\n        EventHandler.add(wrapper, 'click', this.clickHandler, this);\n        EventHandler.add(this.element, 'focus', this.focusHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'mouseup', this.delegateMouseUpHandler, this);\n        EventHandler.add(this.element, 'keyup', this.delegateKeyUpHandler, this);\n        EventHandler.add(wrapper, 'mousedown mouseup', this.rippleHandler, this);\n        EventHandler.add(wrapper, 'touchstart touchmove touchend', this.switchMouseUp, this);\n        if (this.formElement) {\n            EventHandler.add(this.formElement, 'reset', this.formResetHandler, this);\n        }\n    }\n    unWireEvents() {\n        const wrapper = this.getWrapper();\n        EventHandler.remove(wrapper, 'click', this.clickHandler);\n        EventHandler.remove(this.element, 'focus', this.focusHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'mouseup', this.delegateMouseUpHandler);\n        EventHandler.remove(this.element, 'keyup', this.delegateKeyUpHandler);\n        EventHandler.remove(wrapper, 'mousedown mouseup', this.rippleHandler);\n        EventHandler.remove(wrapper, 'touchstart touchmove touchend', this.switchMouseUp);\n        if (this.formElement) {\n            EventHandler.remove(this.formElement, 'reset', this.formResetHandler);\n        }\n    }\n    /**\n     * Click the switch element\n     * its native method\n     *\n     * @public\n     * @returns {void}\n     */\n    click() {\n        this.element.click();\n    }\n    /**\n     * Sets the focus to Switch\n     * its native method\n     *\n     * @public\n     */\n    focusIn() {\n        this.element.focus();\n    }\n};\n__decorate$3([\n    Event()\n], Switch.prototype, \"change\", void 0);\n__decorate$3([\n    Event()\n], Switch.prototype, \"created\", void 0);\n__decorate$3([\n    Property(false)\n], Switch.prototype, \"checked\", void 0);\n__decorate$3([\n    Property('')\n], Switch.prototype, \"cssClass\", void 0);\n__decorate$3([\n    Property(false)\n], Switch.prototype, \"disabled\", void 0);\n__decorate$3([\n    Property('')\n], Switch.prototype, \"name\", void 0);\n__decorate$3([\n    Property('')\n], Switch.prototype, \"onLabel\", void 0);\n__decorate$3([\n    Property('')\n], Switch.prototype, \"offLabel\", void 0);\n__decorate$3([\n    Property('')\n], Switch.prototype, \"value\", void 0);\nSwitch = __decorate$3([\n    NotifyPropertyChanges\n], Switch);\n\n/**\n * Switch modules\n */\n\nvar __decorate$4 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst classNames = {\n    chipSet: 'e-chip-set',\n    chip: 'e-chip',\n    avatar: 'e-chip-avatar',\n    text: 'e-chip-text',\n    icon: 'e-chip-icon',\n    delete: 'e-chip-delete',\n    deleteIcon: 'e-dlt-btn',\n    multiSelection: 'e-multi-selection',\n    singleSelection: 'e-selection',\n    active: 'e-active',\n    chipWrapper: 'e-chip-avatar-wrap',\n    iconWrapper: 'e-chip-icon-wrap',\n    focused: 'e-focused',\n    disabled: 'e-disabled',\n    rtl: 'e-rtl'\n};\n/**\n * A chip component is a small block of essential information, mostly used on contacts or filter tags.\n * ```html\n * <div id=\"chip\"></div>\n * ```\n * ```typescript\n * <script>\n * var chipObj = new ChipList();\n * chipObj.appendTo(\"#chip\");\n * </script>\n * ```\n */\nlet ChipList = class ChipList extends Component {\n    constructor(options, element) {\n        super(options, element);\n        this.multiSelectedChip = [];\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    preRender() {\n        //prerender\n    }\n    /**\n     * To find the chips length.\n     *\n     * @returns boolean\n     * @private\n     */\n    chipType() {\n        return (this.chips && this.chips.length && this.chips.length > 0);\n    }\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    render() {\n        let property;\n        this.type = this.chips.length ? 'chipset' : (this.text || this.element.innerText ? 'chip' : 'chipset');\n        this.setAttributes();\n        this.createChip();\n        this.setRtl();\n        this.select(this.selectedChips, property);\n        this.wireEvent(false);\n        this.rippleFunction = rippleEffect(this.element, {\n            selector: '.e-chip'\n        });\n        this.renderComplete();\n    }\n    createChip() {\n        // eslint-disable-next-line\n        this.innerText = (this.element.innerText && this.element.innerText.length !== 0) ? this.element.innerText.trim() : this.element.innerText;\n        this.element.innerHTML = '';\n        this.chipCreation(this.type === 'chip' ? [this.innerText ? this.innerText : this.text] : this.chips);\n    }\n    setAttributes() {\n        if (this.type === 'chip') {\n            this.element.tabIndex = 0;\n            this.element.setAttribute('role', 'option');\n        }\n        else {\n            this.element.classList.add(classNames.chipSet);\n            this.element.setAttribute('role', 'listbox');\n            if (this.selection === 'Multiple') {\n                this.element.classList.add(classNames.multiSelection);\n                this.element.setAttribute('aria-multiselectable', 'true');\n            }\n            else if (this.selection === 'Single') {\n                this.element.classList.add(classNames.singleSelection);\n                this.element.setAttribute('aria-multiselectable', 'false');\n            }\n            else {\n                this.element.setAttribute('aria-multiselectable', 'false');\n            }\n        }\n    }\n    setRtl() {\n        this.element.classList[this.enableRtl ? 'add' : 'remove'](classNames.rtl);\n    }\n    chipCreation(data) {\n        let chipListArray = [];\n        for (let i = 0; i < data.length; i++) {\n            const fieldsData = this.getFieldValues(data[i]);\n            const chipArray = this.elementCreation(fieldsData);\n            const className = (classNames.chip + ' ' + (fieldsData.enabled ? ' ' : classNames.disabled) + ' ' +\n                (fieldsData.avatarIconCss || fieldsData.avatarText ? classNames.chipWrapper : (fieldsData.leadingIconCss ?\n                    classNames.iconWrapper : ' ')) + ' ' + fieldsData.cssClass).split(' ').filter((css) => css);\n            if (!this.chipType()) {\n                chipListArray = chipArray;\n                addClass([this.element], className);\n                this.element.setAttribute('aria-label', fieldsData.text);\n                if (fieldsData.value) {\n                    this.element.setAttribute('data-value', fieldsData.value.toString());\n                }\n            }\n            else {\n                const wrapper = this.createElement('DIV', {\n                    className: className.join(' '), attrs: {\n                        tabIndex: '0', role: 'option',\n                        'aria-label': fieldsData.text, 'aria-selected': 'false'\n                    }\n                });\n                if (fieldsData.value) {\n                    wrapper.setAttribute('data-value', fieldsData.value.toString());\n                }\n                append(chipArray, wrapper);\n                chipListArray.push(wrapper);\n            }\n        }\n        append(chipListArray, this.element);\n    }\n    getFieldValues(data) {\n        const chipEnabled = !(this.enabled.toString() === 'false');\n        const fields = {\n            text: typeof data === 'object' ? (data.text ? data.text.toString() : this.text.toString()) :\n                (!this.chipType() ? (this.innerText ? this.innerText : this.text.toString()) : data.toString()),\n            cssClass: typeof data === 'object' ? (data.cssClass ? data.cssClass.toString() : this.cssClass.toString()) :\n                (this.cssClass.toString()),\n            leadingIconCss: typeof data === 'object' ? (data.leadingIconCss ? data.leadingIconCss.toString() :\n                this.leadingIconCss.toString()) : (this.leadingIconCss.toString()),\n            avatarIconCss: typeof data === 'object' ? (data.avatarIconCss ? data.avatarIconCss.toString() :\n                this.avatarIconCss.toString()) : (this.avatarIconCss.toString()),\n            avatarText: typeof data === 'object' ? (data.avatarText ? data.avatarText.toString() : this.avatarText.toString()) :\n                (this.avatarText.toString()),\n            trailingIconCss: typeof data === 'object' ? (data.trailingIconCss ? data.trailingIconCss.toString() :\n                this.trailingIconCss.toString()) : (this.trailingIconCss.toString()),\n            enabled: typeof data === 'object' ? (!isNullOrUndefined(data.enabled) ? (data.enabled.toString() === 'false' ? false : true) :\n                chipEnabled) : (chipEnabled),\n            value: typeof data === 'object' ? ((data.value ? data.value.toString() : null)) : null,\n            leadingIconUrl: typeof data === 'object' ? (data.leadingIconUrl ? data.leadingIconUrl.toString() : this.leadingIconUrl) :\n                this.leadingIconUrl,\n            trailingIconUrl: typeof data === 'object' ? (data.trailingIconUrl ? data.trailingIconUrl.toString() : this.trailingIconUrl) :\n                this.trailingIconUrl\n        };\n        return fields;\n    }\n    elementCreation(fields) {\n        const chipArray = [];\n        if (fields.avatarText || fields.avatarIconCss) {\n            const className = (classNames.avatar + ' ' + fields.avatarIconCss).trim();\n            const chipAvatarElement = this.createElement('span', { className: className });\n            chipAvatarElement.innerText = fields.avatarText;\n            chipArray.push(chipAvatarElement);\n        }\n        else if (fields.leadingIconCss) {\n            const className = (classNames.icon + ' ' + fields.leadingIconCss).trim();\n            const chipIconElement = this.createElement('span', { className: className });\n            chipArray.push(chipIconElement);\n        }\n        else if (fields.leadingIconUrl) {\n            const className = (classNames.avatar + ' ' + 'image-url').trim();\n            const chipIconElement = this.createElement('span', { className: className });\n            chipIconElement.style.backgroundImage = 'url(' + fields.leadingIconUrl + ')';\n            chipArray.push(chipIconElement);\n        }\n        const chipTextElement = this.createElement('span', { className: classNames.text });\n        chipTextElement.innerText = fields.text;\n        chipArray.push(chipTextElement);\n        if (fields.trailingIconCss || (this.chipType() && this.enableDelete)) {\n            const className = (classNames.delete + ' ' +\n                (fields.trailingIconCss ? fields.trailingIconCss : classNames.deleteIcon)).trim();\n            const chipdeleteElement = this.createElement('span', { className: className });\n            chipArray.push(chipdeleteElement);\n        }\n        else if (fields.trailingIconUrl) {\n            const className = ('trailing-icon-url').trim();\n            const chipIconsElement = this.createElement('span', { className: className });\n            chipIconsElement.style.backgroundImage = 'url(' + fields.trailingIconUrl + ')';\n            chipArray.push(chipIconsElement);\n        }\n        return chipArray;\n    }\n    /**\n     * A function that finds chip based on given input.\n     *\n     * @param  {number | HTMLElement } fields - We can pass index number or element of chip.\n     * {% codeBlock src='chips/find/index.md' %}{% endcodeBlock %}.\n     */\n    find(fields) {\n        let chipData;\n        const chipElement = fields instanceof HTMLElement ?\n            fields : this.element.querySelectorAll('.' + classNames.chip)[fields];\n        if (chipElement && this.chipType()) {\n            chipData = { text: undefined, index: undefined, element: undefined, data: undefined };\n            chipData.index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipElement);\n            chipData.text = typeof this.chips[chipData.index] === 'object' ?\n                (this.chips[chipData.index].text ?\n                    this.chips[chipData.index].text.toString() : '') :\n                this.chips[chipData.index].toString();\n            chipData.data = this.chips[chipData.index];\n            chipData.element = chipElement;\n        }\n        return chipData;\n    }\n    /**\n     * Allows adding the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     *\n     * @param  {string[] | number[] | ChipModel[] | string | number | ChipModel} chipsData - We can pass array of string or\n     *  array of number or array of chip model or string data or number data or chip model.\n     * {% codeBlock src='chips/add/index.md' %}{% endcodeBlock %}\n     * @deprecated\n     */\n    add(chipsData) {\n        if (this.type !== 'chip') {\n            const fieldData = chipsData instanceof Array ?\n                chipsData : [chipsData];\n            this.chips.push(...fieldData);\n            this.chipCreation(fieldData);\n        }\n    }\n    /**\n     * Allows selecting the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     *\n     * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number\n     *  or chip element or array of chip element.\n     * {% codeBlock src='chips/select/index.md' %}{% endcodeBlock %}\n     */\n    select(fields, selectionType) {\n        this.onSelect(fields, false, selectionType);\n    }\n    multiSelection(newProp) {\n        const items = this.element.querySelectorAll('.' + 'e-chip');\n        for (let j = 0; j < newProp.length; j++) {\n            if (typeof newProp[j] === 'string') {\n                for (let k = 0; k < items.length; k++) {\n                    if (newProp[j] !== k) {\n                        if (newProp[j] === items[k].attributes[5].value) {\n                            this.multiSelectedChip.push(k);\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                this.multiSelectedChip.push(newProp[j]);\n            }\n        }\n    }\n    onSelect(fields, callFromProperty, selectionType) {\n        let index;\n        let chipNodes;\n        let chipValue;\n        if (this.chipType() && this.selection !== 'None') {\n            if (callFromProperty) {\n                const chipElements = this.element.querySelectorAll('.' + classNames.chip);\n                for (let i = 0; i < chipElements.length; i++) {\n                    chipElements[i].setAttribute('aria-selected', 'false');\n                    chipElements[i].classList.remove(classNames.active);\n                }\n            }\n            const fieldData = fields instanceof Array ? fields : [fields];\n            for (let i = 0; i < fieldData.length; i++) {\n                let chipElement = fieldData[i] instanceof HTMLElement ? fieldData[i]\n                    : this.element.querySelectorAll('.' + classNames.chip)[fieldData[i]];\n                if (selectionType !== 'index') {\n                    for (let j = 0; j < this.chips.length; j++) {\n                        chipNodes = this.element.querySelectorAll('.' + classNames.chip)[j];\n                        const fieldsData = this.getFieldValues(this.chips[j]);\n                        if (selectionType === 'value') {\n                            if (fieldsData.value !== null) {\n                                chipValue = chipNodes.dataset.value;\n                            }\n                        }\n                        else if (selectionType === 'text') {\n                            chipValue = chipNodes.innerText;\n                        }\n                        if (chipValue === fieldData[i].toString()) {\n                            index = j;\n                            chipElement = this.element.querySelectorAll('.' + classNames.chip)[index];\n                        }\n                    }\n                }\n                if (chipElement instanceof HTMLElement) {\n                    this.selectionHandler(chipElement);\n                }\n            }\n        }\n    }\n    /**\n     * Allows removing the chip item(s) by passing a single or array of string, number, or ChipModel values.\n     *\n     * @param  {number | number[] | HTMLElement | HTMLElement[]} fields - We can pass number or array of number\n     *  or chip element or array of chip element.\n     * {% codeBlock src='chips/remove/index.md' %}{% endcodeBlock %}\n     */\n    remove(fields) {\n        if (this.chipType()) {\n            const fieldData = fields instanceof Array ? fields : [fields];\n            const chipElements = [];\n            const chipCollection = this.element.querySelectorAll('.' + classNames.chip);\n            fieldData.forEach((data) => {\n                const chipElement = data instanceof HTMLElement ? data\n                    : chipCollection[data];\n                if (chipElement instanceof HTMLElement) {\n                    chipElements.push(chipElement);\n                }\n            });\n            chipElements.forEach((element) => {\n                const chips = this.element.querySelectorAll('.' + classNames.chip);\n                const index = Array.prototype.slice.call(chips).indexOf(element);\n                this.deleteHandler(element, index);\n            });\n        }\n    }\n    /**\n     * Returns the selected chip(s) data.\n     * {% codeBlock src='chips/getSelectedChips/index.md' %}{% endcodeBlock %}\n     */\n    getSelectedChips() {\n        let selectedChips;\n        if (this.chipType() && this.selection !== 'None') {\n            const selectedItems = { texts: [], Indexes: [], data: [], elements: [] };\n            const items = this.element.querySelectorAll('.' + classNames.active);\n            for (let i = 0; i < items.length; i++) {\n                const chip = items[i];\n                selectedItems.elements.push(chip);\n                const index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chip);\n                selectedItems.Indexes.push(index);\n                selectedItems.data.push(this.chips[index]);\n                const text = typeof this.chips[index] === 'object' ?\n                    this.chips[index].text ? this.chips[index].text.toString()\n                        : null : this.chips[index].toString();\n                selectedItems.texts.push(text);\n            }\n            const selectedItem = {\n                text: selectedItems.texts[0], index: selectedItems.Indexes[0],\n                data: selectedItems.data[0], element: selectedItems.elements[0]\n            };\n            selectedChips = !isNullOrUndefined(selectedItem.index) ?\n                (this.selection === 'Multiple' ? selectedItems : selectedItem) : undefined;\n        }\n        return selectedChips;\n    }\n    wireEvent(unWireEvent) {\n        if (!unWireEvent) {\n            EventHandler.add(this.element, 'click', this.clickHandler, this);\n            EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n            EventHandler.add(this.element, 'keydown', this.keyHandler, this);\n            EventHandler.add(this.element, 'keyup', this.keyHandler, this);\n        }\n        else {\n            EventHandler.remove(this.element, 'click', this.clickHandler);\n            EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n            EventHandler.remove(this.element, 'keydown', this.keyHandler);\n            EventHandler.remove(this.element, 'keyup', this.keyHandler);\n        }\n    }\n    keyHandler(e) {\n        if (e.target.classList.contains(classNames.chip)) {\n            if (e.type === 'keydown') {\n                if (e.keyCode === 13) {\n                    this.clickHandler(e);\n                }\n                else if (e.keyCode === 46 && this.enableDelete) {\n                    this.clickHandler(e, true);\n                }\n            }\n            else if (e.keyCode === 9) {\n                this.focusInHandler(e.target);\n            }\n        }\n    }\n    focusInHandler(chipWrapper) {\n        if (!chipWrapper.classList.contains(classNames.focused)) {\n            chipWrapper.classList.add(classNames.focused);\n        }\n    }\n    focusOutHandler(e) {\n        const chipWrapper = closest(e.target, '.' + classNames.chip);\n        const focusedElement = !this.chipType() ? (this.element.classList.contains(classNames.focused) ?\n            this.element : null) : this.element.querySelector('.' + classNames.focused);\n        if (chipWrapper && focusedElement) {\n            focusedElement.classList.remove(classNames.focused);\n        }\n    }\n    clickHandler(e, del = false) {\n        const chipWrapper = closest(e.target, '.' + classNames.chip);\n        if (chipWrapper) {\n            // eslint-disable-next-line\n            let chipDataArgs;\n            if (this.chipType()) {\n                chipDataArgs = this.find(chipWrapper);\n            }\n            else {\n                const index = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.chip)).indexOf(chipWrapper);\n                chipDataArgs = {\n                    text: this.innerText ? this.innerText : this.text,\n                    element: chipWrapper, data: this.text, index: index\n                };\n            }\n            chipDataArgs.event = e;\n            chipDataArgs.cancel = false;\n            this.trigger('beforeClick', chipDataArgs, (observedArgs) => {\n                if (!observedArgs.cancel) {\n                    this.clickEventHandler(observedArgs.element, e, del);\n                }\n            });\n        }\n    }\n    clickEventHandler(chipWrapper, e, del) {\n        if (this.chipType()) {\n            const chipData = this.find(chipWrapper);\n            chipData.event = e;\n            const deleteElement = e.target.classList.contains(classNames.deleteIcon) ?\n                e.target : (del ? chipWrapper.querySelector('.' + classNames.deleteIcon) : undefined);\n            if (deleteElement && this.enableDelete) {\n                chipData.cancel = false;\n                const deletedItemArgs = chipData;\n                this.trigger('delete', deletedItemArgs, (observedArgs) => {\n                    if (!observedArgs.cancel) {\n                        this.deleteHandler(observedArgs.element, observedArgs.index);\n                        this.selectionHandler(chipWrapper);\n                        chipData.selected = observedArgs.element.classList.contains(classNames.active);\n                        const selectedItemArgs = chipData;\n                        this.trigger('click', selectedItemArgs);\n                    }\n                });\n            }\n            else if (this.selection !== 'None') {\n                this.selectionHandler(chipWrapper);\n                chipData.selected = chipWrapper.classList.contains(classNames.active);\n                const selectedItemArgs = chipData;\n                this.trigger('click', selectedItemArgs);\n            }\n            else {\n                this.focusInHandler(chipWrapper);\n                const clickedItemArgs = chipData;\n                this.trigger('click', clickedItemArgs);\n            }\n        }\n        else {\n            this.focusInHandler(chipWrapper);\n            const clickedItemArgs = {\n                text: this.innerText ? this.innerText : this.text,\n                element: chipWrapper, data: this.text, event: e\n            };\n            this.trigger('click', clickedItemArgs);\n        }\n    }\n    selectionHandler(chipWrapper) {\n        if (this.selection === 'Single') {\n            const activeElement = this.element.querySelector('.' + classNames.active);\n            if (activeElement && activeElement !== chipWrapper) {\n                activeElement.classList.remove(classNames.active);\n                activeElement.setAttribute('aria-selected', 'false');\n            }\n            this.setProperties({ selectedChips: null }, true);\n        }\n        else {\n            this.setProperties({ selectedChips: [] }, true);\n        }\n        if (chipWrapper.classList.contains(classNames.active)) {\n            chipWrapper.classList.remove(classNames.active);\n            chipWrapper.setAttribute('aria-selected', 'false');\n        }\n        else {\n            chipWrapper.classList.add(classNames.active);\n            chipWrapper.setAttribute('aria-selected', 'true');\n        }\n        this.updateSelectedChips();\n    }\n    updateSelectedChips() {\n        const chipListEle = this.element.querySelectorAll('.e-chip');\n        const chipCollIndex = [];\n        const chipCollValue = [];\n        let chip = null;\n        let value;\n        for (let i = 0; i < chipListEle.length; i++) {\n            const selectedEle = this.element.querySelectorAll('.e-chip')[i];\n            if (selectedEle.getAttribute('aria-selected') === 'true') {\n                value = selectedEle.getAttribute('data-value');\n                if (this.selection === 'Single' && selectedEle.classList.contains('e-active')) {\n                    chip = value ? value : i;\n                    break;\n                }\n                else {\n                    chip = value ? chipCollValue.push(value) : chipCollIndex.push(i);\n                }\n            }\n        }\n        this.setProperties({ selectedChips: this.selection === 'Single' ? chip : value ? chipCollValue : chipCollIndex }, true);\n    }\n    deleteHandler(chipWrapper, index) {\n        this.chips.splice(index, 1);\n        this.setProperties({ chips: this.chips }, true);\n        detach(chipWrapper);\n    }\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n     * {% codeBlock src='chips/destroy/index.md' %}{% endcodeBlock %}\n     */\n    destroy() {\n        removeClass([this.element], [classNames.chipSet, classNames.chip, classNames.rtl,\n            classNames.multiSelection, classNames.singleSelection, classNames.disabled, classNames.chipWrapper, classNames.iconWrapper,\n            classNames.active, classNames.focused].concat(this.cssClass.toString().split(' ').filter((css) => css)));\n        this.removeMultipleAttributes(['tabindex', 'role', 'aria-label', 'aria-multiselectable'], this.element);\n        this.wireEvent(true);\n        this.rippleFunction();\n        super.destroy();\n        this.element.innerHTML = '';\n        this.element.innerText = this.innerText;\n    }\n    removeMultipleAttributes(attributes$$1, element) {\n        attributes$$1.forEach((attr) => {\n            element.removeAttribute(attr);\n        });\n    }\n    getPersistData() {\n        return this.addOnPersist([]);\n    }\n    getModuleName() {\n        return 'chip-list';\n    }\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @returns void\n     * @private\n     */\n    onPropertyChanged(newProp, oldProp) {\n        let property;\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'chips':\n                case 'text':\n                case 'avatarText':\n                case 'avatarIconCss':\n                case 'leadingIconCss':\n                case 'trailingIconCss':\n                case 'selection':\n                case 'enableDelete':\n                case 'enabled':\n                    this.refresh();\n                    break;\n                case 'cssClass':\n                    if (!this.chipType()) {\n                        removeClass([this.element], oldProp.cssClass.toString().split(' ').filter((css) => css));\n                        addClass([this.element], newProp.cssClass.toString().split(' ').filter((css) => css));\n                    }\n                    else {\n                        this.refresh();\n                    }\n                    break;\n                case 'selectedChips':\n                    removeClass(this.element.querySelectorAll('.e-active'), 'e-active');\n                    if (this.selection === 'Multiple') {\n                        this.multiSelectedChip = [];\n                        this.multiSelection(newProp.selectedChips);\n                        this.onSelect(this.multiSelectedChip, true, property);\n                        this.updateSelectedChips();\n                    }\n                    else {\n                        this.onSelect(newProp.selectedChips, true, property);\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRtl();\n                    break;\n            }\n        }\n    }\n};\n__decorate$4([\n    Property([])\n], ChipList.prototype, \"chips\", void 0);\n__decorate$4([\n    Property('')\n], ChipList.prototype, \"text\", void 0);\n__decorate$4([\n    Property('')\n], ChipList.prototype, \"avatarText\", void 0);\n__decorate$4([\n    Property('')\n], ChipList.prototype, \"avatarIconCss\", void 0);\n__decorate$4([\n    Property('')\n], ChipList.prototype, \"leadingIconCss\", void 0);\n__decorate$4([\n    Property('')\n], ChipList.prototype, \"trailingIconCss\", void 0);\n__decorate$4([\n    Property('')\n], ChipList.prototype, \"leadingIconUrl\", void 0);\n__decorate$4([\n    Property('')\n], ChipList.prototype, \"trailingIconUrl\", void 0);\n__decorate$4([\n    Property('')\n], ChipList.prototype, \"cssClass\", void 0);\n__decorate$4([\n    Property(true)\n], ChipList.prototype, \"enabled\", void 0);\n__decorate$4([\n    Property([])\n], ChipList.prototype, \"selectedChips\", void 0);\n__decorate$4([\n    Property('None')\n], ChipList.prototype, \"selection\", void 0);\n__decorate$4([\n    Property(false)\n], ChipList.prototype, \"enableDelete\", void 0);\n__decorate$4([\n    Event()\n], ChipList.prototype, \"created\", void 0);\n__decorate$4([\n    Event()\n], ChipList.prototype, \"click\", void 0);\n__decorate$4([\n    Event()\n], ChipList.prototype, \"beforeClick\", void 0);\n__decorate$4([\n    Event()\n], ChipList.prototype, \"delete\", void 0);\nChipList = __decorate$4([\n    NotifyPropertyChanges\n], ChipList);\n\n/**\n * Represents ChipList `Chip` model class.\n */\nclass Chip {\n}\n\n/**\n * Chip modules\n */\n\n/**\n * Button all modules\n */\n\nexport { wrapperInitialize, getTextNode, destroy, preRender, createCheckBox, rippleMouseHandler, setHiddenInput, buttonObserver, Button, CheckBox, RadioButton, Switch, classNames, ChipList, Chip };\n"]},"metadata":{},"sourceType":"module"}