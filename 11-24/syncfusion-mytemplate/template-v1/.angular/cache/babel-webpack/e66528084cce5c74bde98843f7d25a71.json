{"ast":null,"code":"import _assertThisInitialized from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createForOfIteratorHelper from \"D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { Animation, Base, ChildProperty, Complex, Component, Draggable, Event, EventHandler, NotifyPropertyChanges, Property, SanitizeHtmlHelper, Touch, addClass, append, attributes, closest, compareElementParent, compile, detach, extend, formatUnit, getComponent, getUniqueID, getValue, isBlazor, isNullOrUndefined, isVisible, merge, prepend, remove, removeClass, rippleEffect } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\n/* eslint-disable no-inner-declarations */\n\nvar cssClass = {\n  li: 'e-list-item',\n  ul: 'e-list-parent e-ul',\n  group: 'e-list-group-item',\n  icon: 'e-list-icon',\n  text: 'e-list-text',\n  check: 'e-list-check',\n  checked: 'e-checked',\n  selected: 'e-selected',\n  expanded: 'e-expanded',\n  textContent: 'e-text-content',\n  hasChild: 'e-has-child',\n  level: 'e-level',\n  url: 'e-list-url',\n  collapsible: 'e-icon-collapsible',\n  disabled: 'e-disabled',\n  image: 'e-list-img',\n  iconWrapper: 'e-icon-wrapper',\n  anchorWrap: 'e-anchor-wrap',\n  navigable: 'e-navigable'\n};\n/**\n * Base List Generator\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\n\nvar ListBase;\n\n(function (ListBase) {\n  /**\n   *\n   * Default mapped fields.\n   */\n  ListBase.defaultMappedFields = {\n    id: 'id',\n    text: 'text',\n    url: 'url',\n    value: 'value',\n    isChecked: 'isChecked',\n    enabled: 'enabled',\n    expanded: 'expanded',\n    selected: 'selected',\n    iconCss: 'iconCss',\n    child: 'child',\n    isVisible: 'isVisible',\n    hasChildren: 'hasChildren',\n    tooltip: 'tooltip',\n    htmlAttributes: 'htmlAttributes',\n    urlAttributes: 'urlAttributes',\n    imageAttributes: 'imageAttributes',\n    imageUrl: 'imageUrl',\n    groupBy: null,\n    sortBy: null\n  };\n  var defaultAriaAttributes = {\n    level: 1,\n    listRole: 'presentation',\n    itemRole: 'presentation',\n    groupItemRole: 'group',\n    itemText: 'list-item',\n    wrapperRole: 'presentation'\n  };\n  var defaultListBaseOptions = {\n    showCheckBox: false,\n    showIcon: false,\n    enableHtmlSanitizer: false,\n    expandCollapse: false,\n    fields: ListBase.defaultMappedFields,\n    ariaAttributes: defaultAriaAttributes,\n    listClass: '',\n    itemClass: '',\n    processSubChild: false,\n    sortOrder: 'None',\n    template: null,\n    groupTemplate: null,\n    headerTemplate: null,\n    expandIconClass: 'e-icon-collapsible',\n    moduleName: 'list',\n    expandIconPosition: 'Right',\n    itemNavigable: false\n  };\n  /**\n   * Function helps to created and return the UL Li element based on your data.\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {createElement} createListFromJson - Specifies the list options that need to provide.\n   */\n\n  function createList(createElement, dataSource, // eslint-disable-next-line\n  options, isSingleLevel, componentInstance) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var type = typeofData(dataSource).typeof;\n\n    if (type === 'string' || type === 'number') {\n      return createListFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n    } else {\n      return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel, componentInstance);\n    }\n  }\n\n  ListBase.createList = createList;\n  /**\n   * Function helps to created an element list based on string array input .\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {createElement} generateUL - returns the list options that need to provide.\n   */\n\n  function createListFromArray(createElement, dataSource, // tslint:disable-next-line\n  // eslint-disable-next-line\n  isSingleLevel, options, componentInstance) {\n    var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n    return generateUL(createElement, subChild, null, options);\n  }\n\n  ListBase.createListFromArray = createListFromArray;\n  /**\n   * Function helps to created an element list based on string array input .\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {HTMLElement[]} subChild - returns the list options that need to provide.\n   */\n\n  function createListItemFromArray(createElement, dataSource, // eslint-disable-next-line\n  isSingleLevel, options, componentInstance) {\n    var subChild = [];\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var id = generateId(); // generate id for drop-down-list option.\n\n    for (var i = 0; i < dataSource.length; i++) {\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      var li = void 0;\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          options: curOpt\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (isSingleLevel) {\n        li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n      } else {\n        li = generateLI(createElement, dataSource[i], undefined, null, null, options, componentInstance);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var _curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          item: li,\n          options: curOpt\n        };\n        curOpt.itemCreated(_curData);\n      }\n\n      subChild.push(li);\n    }\n\n    return subChild;\n  }\n\n  ListBase.createListItemFromArray = createListItemFromArray;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {number} level? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {HTMLElement[]} child - returns the list options that need to provide.\n   */\n\n  function createListItemFromJson(createElement, dataSource, // eslint-disable-next-line\n  options, level, isSingleLevel, componentInstance) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var fields = componentInstance && (componentInstance.getModuleName() == \"listview\" || componentInstance.getModuleName() == \"multiselect\") ? curOpt.fields : extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var id;\n    var checkboxElement = [];\n\n    if (level) {\n      ariaAttributes.level = level;\n    }\n\n    var child = [];\n    var li;\n    var anchorElement;\n\n    if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) && // eslint-disable-next-line no-prototype-builtins\n    !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n      id = generateId(); // generate id for drop-down-list option.\n    }\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var fieldData = getFieldValues(dataSource[i], fields);\n\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      var curItem = dataSource[i];\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], fields);\n      } // eslint-disable-next-line no-prototype-builtins\n\n\n      if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n        id = fieldData[fields.id];\n      }\n\n      var innerEle = [];\n\n      if (curOpt.showCheckBox) {\n        if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n          checkboxElement.push(createElement('input', {\n            className: cssClass.check,\n            attrs: {\n              type: 'checkbox'\n            }\n          }));\n        } else {\n          innerEle.push(createElement('input', {\n            className: cssClass.check,\n            attrs: {\n              type: 'checkbox'\n            }\n          }));\n        }\n      }\n\n      if (isSingleLevel === true) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n          innerEle.push(createElement('span', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          }));\n        }\n\n        li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, // eslint-disable-next-line no-prototype-builtins\n        curItem.hasOwnProperty('isHeader') && curItem.isHeader ? true : false, id, i, options);\n        anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n\n        if (curOpt.itemNavigable && checkboxElement.length) {\n          prepend(checkboxElement, li.firstElementChild);\n        }\n      } else {\n        li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options, componentInstance);\n        li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n        li.setAttribute('aria-level', ariaAttributes.level.toString());\n        anchorElement = li.querySelector('.' + cssClass.anchorWrap); // eslint-disable-next-line no-prototype-builtins\n\n        if (fieldData.hasOwnProperty(fields.tooltip)) {\n          li.setAttribute('title', fieldData[fields.tooltip]);\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n          setAttribute(li, fieldData[fields.htmlAttributes]);\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n          li.classList.add(cssClass.disabled);\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n          li.style.display = 'none';\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl]) && !curOpt.template) {\n          var attr = {\n            src: fieldData[fields.imageUrl]\n          };\n          merge(attr, fieldData[fields.imageAttributes]);\n          var imageElemnt = createElement('img', {\n            className: cssClass.image,\n            attrs: attr\n          });\n\n          if (anchorElement) {\n            anchorElement.insertAdjacentElement('afterbegin', imageElemnt);\n          } else {\n            prepend([imageElemnt], li.firstElementChild);\n          }\n        } // eslint-disable-next-line no-prototype-builtins\n\n\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n          var iconElement = createElement('div', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          });\n\n          if (anchorElement) {\n            anchorElement.insertAdjacentElement('afterbegin', iconElement);\n          } else {\n            prepend([iconElement], li.firstElementChild);\n          }\n        }\n\n        if (innerEle.length) {\n          prepend(innerEle, li.firstElementChild);\n        }\n\n        if (curOpt.itemNavigable && checkboxElement.length) {\n          prepend(checkboxElement, li.firstElementChild);\n        }\n\n        processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n      }\n\n      if (anchorElement) {\n        addClass([li], [cssClass.navigable]);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var _curData2 = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          item: li,\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreated(_curData2);\n      }\n\n      checkboxElement = [];\n      child.push(li);\n    }\n\n    return child;\n  }\n\n  ListBase.createListItemFromJson = createListItemFromJson;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   *\n   * @param  {createElementParams} createElement - Specifies an array of JSON data.\n   *\n   * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n   *\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   *\n   * @param  {number} level? - Specifies the list options that need to provide.\n   *\n   * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n   *\n   * @param  {any} componentInstance? - Specifies the list options that need to provide.\n   *\n   * @returns  {createElement} generateUL - Specifies the list options that need to provide.\n   */\n\n  function createListFromJson(createElement, dataSource, // eslint-disable-next-line\n  options, level, isSingleLevel, componentInstance) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance);\n    return generateUL(createElement, li, curOpt.listClass, options);\n  }\n\n  ListBase.createListFromJson = createListFromJson;\n  /**\n   * Return the next or previous visible element.\n   *\n   * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n   * @param  {Element} li - An element to find next or previous after this element.\n   * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n   */\n\n  function getSiblingLI(elementArray, element, isPrevious) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n\n    if (!elementArray || !elementArray.length) {\n      return void 0;\n    }\n\n    var siblingLI;\n    var liIndex;\n    var liCollections = Array.prototype.slice.call(elementArray);\n\n    if (element) {\n      liIndex = indexOf(element, liCollections);\n    } else {\n      liIndex = isPrevious === true ? liCollections.length : -1;\n    }\n\n    siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n\n    while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n      liIndex = liIndex + (isPrevious === true ? -1 : 1);\n      siblingLI = liCollections[liIndex];\n    }\n\n    return siblingLI;\n  }\n\n  ListBase.getSiblingLI = getSiblingLI;\n  /**\n   * Return the index of the li element\n   *\n   * @param  {Element} item - An element to find next or previous after this element.\n   * @param  {Element[]} elementArray - An element array to find index of given li.\n   */\n\n  function indexOf(item, elementArray) {\n    if (!elementArray || !item) {\n      return void 0;\n    } else {\n      var liCollections = elementArray;\n      liCollections = Array.prototype.slice.call(elementArray);\n      return liCollections.indexOf(item);\n    }\n  }\n\n  ListBase.indexOf = indexOf;\n  /**\n   * Returns the grouped data from given dataSource.\n   *\n   * @param  {{Object}[]} dataSource - The JSON data which is necessary to process.\n   * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n   * @param  {SortOrder} sortOrder- Specifies final result sort order.\n   */\n\n  function groupDataSource(dataSource, fields) {\n    var sortOrder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'None';\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var cusQuery = new Query().group(curFields.groupBy); // need to remove once sorting issues fixed in DataManager\n\n    cusQuery = addSorting(sortOrder, 'key', cusQuery);\n    var ds = getDataSource(dataSource, cusQuery);\n    dataSource = [];\n\n    for (var j = 0; j < ds.length; j++) {\n      var itemObj = ds[j].items;\n      var grpItem = {};\n      var hdr = 'isHeader';\n      grpItem[curFields.text] = ds[j].key;\n      grpItem[hdr] = true;\n      var newtext = curFields.text;\n\n      if (newtext === 'id') {\n        newtext = 'text';\n        grpItem[newtext] = ds[j].key;\n      }\n\n      grpItem._id = 'group-list-item-' + (ds[j].key ? ds[j].key.toString().trim() : 'undefined');\n      grpItem.items = itemObj;\n      dataSource.push(grpItem);\n\n      for (var k = 0; k < itemObj.length; k++) {\n        dataSource.push(itemObj[k]);\n      }\n    }\n\n    return dataSource;\n  }\n\n  ListBase.groupDataSource = groupDataSource;\n  /**\n   * Returns a sorted query object.\n   *\n   * @param  {SortOrder} sortOrder - Specifies that sort order.\n   * @param  {string} sortBy - Specifies sortBy fields.\n   * @param  {Query} query - Pass if any existing query.\n   */\n\n  function addSorting(sortOrder, sortBy) {\n    var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Query();\n\n    if (sortOrder === 'Ascending') {\n      query.sortBy(sortBy, 'ascending', true);\n    } else if (sortOrder === 'Descending') {\n      query.sortBy(sortBy, 'descending', true);\n    } else {\n      for (var i = 0; i < query.queries.length; i++) {\n        if (query.queries[i].fn === 'onSortBy') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n\n    return query;\n  }\n\n  ListBase.addSorting = addSorting;\n  /**\n   * Return an array of JSON Data that processed based on queries.\n   *\n   * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n   *\n   * @param  {Query} query - Specifies query that need to process.\n   */\n\n  function getDataSource(dataSource, query) {\n    // eslint-disable-next-line\n    return new DataManager(dataSource).executeLocal(query);\n  }\n\n  ListBase.getDataSource = getDataSource;\n  /**\n   * Created JSON data based the UL and LI element\n   *\n   * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n  function createJsonFromElement(element, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    var curEle = element.cloneNode(true); // eslint-disable-next-line\n\n    var jsonAr = [];\n    curEle.classList.add('json-parent');\n    var childs = curEle.querySelectorAll('.json-parent>li');\n    curEle.classList.remove('json-parent');\n\n    for (var i = 0; i < childs.length; i++) {\n      var li = childs[i];\n      var anchor = li.querySelector('a');\n      var ul = li.querySelector('ul'); // eslint-disable-next-line\n\n      var json = {};\n      var childNodes = anchor ? anchor.childNodes : li.childNodes;\n      var keys = Object.keys(childNodes);\n\n      for (var _i = 0; _i < childNodes.length; _i++) {\n        if (!childNodes[Number(keys[_i])].hasChildNodes()) {\n          json[fields.text] = childNodes[Number(keys[_i])].textContent;\n        }\n      }\n\n      var attributes$$1 = getAllAttributes(li);\n\n      if (attributes$$1.id) {\n        json[fields.id] = attributes$$1.id;\n        delete attributes$$1.id;\n      } else {\n        json[fields.id] = generateId();\n      }\n\n      if (Object.keys(attributes$$1).length) {\n        json[fields.htmlAttributes] = attributes$$1;\n      }\n\n      if (anchor) {\n        attributes$$1 = getAllAttributes(anchor);\n\n        if (Object.keys(attributes$$1).length) {\n          json[fields.urlAttributes] = attributes$$1;\n        }\n      }\n\n      if (ul) {\n        json[fields.child] = createJsonFromElement(ul, options);\n      }\n\n      jsonAr.push(json);\n    }\n\n    return jsonAr;\n  }\n\n  ListBase.createJsonFromElement = createJsonFromElement;\n\n  function typeofData(data) {\n    var match = {\n      typeof: null,\n      item: null\n    };\n\n    for (var i = 0; i < data.length; i++) {\n      if (!isNullOrUndefined(data[i])) {\n        return match = {\n          typeof: typeof data[i],\n          item: data[i]\n        };\n      }\n    }\n\n    return match;\n  }\n\n  function setAttribute(element, elementAttributes) {\n    var attr = {};\n    merge(attr, elementAttributes);\n\n    if (attr.class) {\n      addClass([element], attr.class.split(' '));\n      delete attr.class;\n    }\n\n    attributes(element, attr);\n  }\n\n  function getAllAttributes(element) {\n    var attributes$$1 = {};\n    var attr = element.attributes;\n\n    for (var index = 0; index < attr.length; index++) {\n      attributes$$1[attr[index].nodeName] = attr[index].nodeValue;\n    }\n\n    return attributes$$1;\n  }\n  /**\n   * Created UL element from content template.\n   *\n   * @param  {string} template - that need to convert and generate li element.\n   * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n\n  function renderContentTemplate(createElement, template, dataSource, // eslint-disable-next-line\n  fields, options, componentInstance) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n    var ulElement = createElement('ul', {\n      className: cssClass.ul,\n      attrs: {\n        role: 'presentation'\n      }\n    });\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var curFields = extend({}, ListBase.defaultMappedFields, fields); // eslint-disable-next-line\n\n    var compiledString = compileTemplate(template);\n    var liCollection = [];\n    var value;\n    var id = generateId(); // generate id for drop-down-list option.\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var fieldData = getFieldValues(dataSource[i], curFields);\n      var curItem = dataSource[i];\n      var isHeader = curItem.isHeader;\n\n      if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n        value = curItem;\n      } else {\n        value = fieldData[curFields.value];\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], curFields);\n\n        if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n          value = curItem;\n        } else {\n          value = fieldData[curFields.value];\n        }\n      }\n\n      var li = createElement('li', {\n        id: id + '-' + i,\n        className: isHeader ? cssClass.group : cssClass.li,\n        attrs: {\n          role: 'presentation'\n        }\n      });\n\n      if (isHeader) {\n        if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n          li.innerText = curItem;\n        } else {\n          li.innerText = fieldData[curFields.text];\n        }\n      } else {\n        var currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n\n        if (isHeader) {\n          if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n            // eslint-disable-next-line\n            var compiledElement = compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate, null, li);\n\n            if (compiledElement) {\n              append(compiledElement, li);\n            }\n          } else {\n            append(compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate), li);\n          }\n        } else {\n          if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n            // eslint-disable-next-line\n            var _compiledElement = compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate, null, li);\n\n            if (_compiledElement) {\n              append(_compiledElement, li);\n            }\n          } else {\n            append(compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate), li);\n          }\n        }\n\n        li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n        li.setAttribute('role', 'option');\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var _curData3 = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          item: li,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreated(_curData3);\n      }\n\n      liCollection.push(li);\n    }\n\n    append(liCollection, ulElement);\n    return ulElement;\n  }\n\n  ListBase.renderContentTemplate = renderContentTemplate;\n  /**\n   * Created header items from group template.\n   *\n   * @param  {string} template - that need to convert and generate li element.\n   *\n   * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n   *\n   * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n   *\n   * @param  {Element[]} headerItems? - Specifies listbase header items.\n   */\n  // tslint:disable-next-line\n\n  function renderGroupTemplate(groupTemplate, groupDataSource, fields, // eslint-disable-next-line\n  headerItems, options, componentInstance) {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    var compiledString = compileTemplate(groupTemplate);\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var category = curFields.groupBy;\n\n    var _iterator = _createForOfIteratorHelper(headerItems),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var header = _step.value;\n        var headerData = {};\n        headerData[category] = header.textContent;\n        header.innerHTML = '';\n\n        if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n          // eslint-disable-next-line\n          var compiledElement = compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, header);\n\n          if (compiledElement) {\n            append(compiledElement, header);\n          }\n        } else {\n          append(compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return headerItems;\n  }\n\n  ListBase.renderGroupTemplate = renderGroupTemplate;\n\n  function generateId() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  ListBase.generateId = generateId;\n\n  function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n    // Get SubList\n    var subDS = fieldData[fields.child] || [];\n    var hasChildren = fieldData[fields.hasChildren]; //Create Sub child\n\n    if (subDS.length) {\n      hasChildren = true;\n      element.classList.add(cssClass.hasChild);\n\n      if (options.processSubChild) {\n        var subLi = createListFromJson(createElement, subDS, options, ++level);\n        element.appendChild(subLi);\n      }\n    } // Create expand and collapse node\n\n\n    if (!!options.expandCollapse && hasChildren && !options.template) {\n      element.firstElementChild.classList.add(cssClass.iconWrapper); // eslint-disable-next-line @typescript-eslint/ban-types\n\n      var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n      expandElement([createElement('div', {\n        className: 'e-icons ' + options.expandIconClass\n      })], element.querySelector('.' + cssClass.textContent));\n    }\n  }\n\n  function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var text = item;\n    var value = item;\n    var dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n      dataSource = item;\n      text = typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number' ? fieldData[fields.text] : fieldData[fields.text] || '';\n      value = fieldData[fields.value];\n    }\n\n    var elementID;\n\n    if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id]) && fieldData[fields.id] !== '') {\n      elementID = id;\n    } else {\n      elementID = id + '-' + index;\n    }\n\n    var li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      id: elementID,\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    }); // eslint-disable-next-line no-prototype-builtins\n\n    if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n      li.classList.add(cssClass.disabled);\n    }\n\n    if (grpLI) {\n      li.innerText = text;\n    } else {\n      li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n      li.setAttribute('role', 'option'); // eslint-disable-next-line no-prototype-builtins\n\n      if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n        setAttribute(li, fieldData[fields.htmlAttributes]);\n      }\n\n      if (innerElements.length && !curOpt.itemNavigable) {\n        append(innerElements, li);\n      }\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n      } else {\n        if (innerElements.length && curOpt.itemNavigable) {\n          append(innerElements, li);\n        }\n\n        li.appendChild(document.createTextNode(text));\n      }\n    }\n\n    return li;\n  }\n\n  function getModuleClass(moduleName) {\n    var moduleClass; // eslint-disable-next-line\n\n    return moduleClass = {\n      li: \"e-\".concat(moduleName, \"-item\"),\n      ul: \"e-\".concat(moduleName, \"-parent e-ul\"),\n      group: \"e-\".concat(moduleName, \"-group-item\"),\n      icon: \"e-\".concat(moduleName, \"-icon\"),\n      text: \"e-\".concat(moduleName, \"-text\"),\n      check: \"e-\".concat(moduleName, \"-check\"),\n      checked: 'e-checked',\n      selected: 'e-selected',\n      expanded: 'e-expanded',\n      textContent: 'e-text-content',\n      hasChild: 'e-has-child',\n      level: 'e-level',\n      url: \"e-\".concat(moduleName, \"-url\"),\n      collapsible: 'e-icon-collapsible',\n      disabled: 'e-disabled',\n      image: \"e-\".concat(moduleName, \"-img\"),\n      iconWrapper: 'e-icon-wrapper',\n      anchorWrap: 'e-anchor-wrap',\n      navigable: 'e-navigable'\n    };\n  }\n\n  function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n    var fieldData = getFieldValues(dataSource, fields);\n    var attr = {\n      href: fieldData[fields.url]\n    }; // eslint-disable-next-line no-prototype-builtins\n\n    if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n      merge(attr, fieldData[fields.urlAttributes]);\n      attr.href = fieldData[fields.url] ? fieldData[fields.url] : fieldData[fields.urlAttributes].href;\n    }\n\n    var anchorTag;\n\n    if (!isFullNavigation) {\n      anchorTag = createElement('a', {\n        className: cssClass.text + ' ' + cssClass.url,\n        innerHTML: text\n      });\n    } else {\n      anchorTag = createElement('a', {\n        className: cssClass.text + ' ' + cssClass.url\n      });\n      var anchorWrapper = createElement('div', {\n        className: cssClass.anchorWrap\n      });\n\n      if (innerElements && innerElements.length) {\n        append(innerElements, anchorWrapper);\n      }\n\n      anchorWrapper.appendChild(document.createTextNode(text));\n      append([anchorWrapper], anchorTag);\n    }\n\n    setAttribute(anchorTag, attr);\n    return anchorTag;\n  } // tslint:disable-next-line\n\n  /* tslint:disable:align */\n\n\n  function generateLI(createElement, item, fieldData, // eslint-disable-next-line\n  fields, className, options, componentInstance) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var text = item;\n    var uID;\n    var grpLI;\n    var dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number') {\n      dataSource = item;\n      text = fieldData[fields.text] || ''; // tslint:disable-next-line\n\n      uID = isNullOrUndefined(fieldData['_id']) ? fieldData[fields.id] : fieldData['_id']; // eslint-disable-next-line no-prototype-builtins\n\n      grpLI = item.hasOwnProperty('isHeader') && item.isHeader ? true : false;\n    }\n\n    if (options && options.enableHtmlSanitizer) {\n      // eslint-disable-next-line no-self-assign\n      text = text;\n    }\n\n    var li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    });\n\n    if (!isNullOrUndefined(uID) === true) {\n      li.setAttribute('data-uid', uID);\n    } else {\n      li.setAttribute('data-uid', generateId());\n    }\n\n    if (grpLI && options && options.groupTemplate) {\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      var compiledString = compileTemplate(options.groupTemplate);\n\n      if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n        // eslint-disable-next-line\n        var compiledElement = compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, li);\n\n        if (compiledElement) {\n          append(compiledElement, li);\n        }\n      } else {\n        append(compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n      }\n    } else if (!grpLI && options && options.template) {\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      var _compiledString = compileTemplate(options.template);\n\n      if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n        // eslint-disable-next-line\n        var _compiledElement2 = _compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate, null, li);\n\n        if (_compiledElement2) {\n          append(_compiledElement2, li);\n        }\n      } else {\n        append(_compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate), li);\n      }\n    } else {\n      var innerDiv = createElement('div', {\n        className: cssClass.textContent,\n        attrs: ariaAttributes.wrapperRole !== '' ? {\n          role: ariaAttributes.wrapperRole\n        } : {}\n      });\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n      } else {\n        var element = createElement('span', {\n          className: cssClass.text,\n          attrs: ariaAttributes.itemText !== '' ? {\n            role: ariaAttributes.itemText\n          } : {}\n        });\n\n        if (options && options.enableHtmlSanitizer) {\n          element.innerText = text;\n        } else {\n          element.innerHTML = text;\n        }\n\n        innerDiv.appendChild(element);\n      }\n\n      li.appendChild(innerDiv);\n    }\n\n    return li;\n  }\n  /**\n   * Returns UL element based on the given LI element.\n   *\n   * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n   *\n   * @param  {string} className? - Specifies class name that need to be added in UL element.\n   *\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n\n  function generateUL(createElement, liElement, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var ulElement = createElement('ul', {\n      className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.listRole !== '' ? {\n        role: ariaAttributes.listRole\n      } : {}\n    });\n    append(liElement, ulElement);\n    return ulElement;\n  }\n\n  ListBase.generateUL = generateUL;\n  /**\n   * Returns LI element with additional DIV tag based on the given LI element.\n   *\n   * @param  {liElement} liElement - Specifies LI element.\n   *\n   * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n   *\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n  function generateIcon(createElement, liElement, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName); // eslint-disable-next-line @typescript-eslint/ban-types\n\n    var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n    expandElement([createElement('div', {\n      className: 'e-icons ' + curOpt.expandIconClass + ' ' + (isNullOrUndefined(className) ? '' : className)\n    })], liElement.querySelector('.' + cssClass.textContent));\n    return liElement;\n  }\n\n  ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n *\n * @param {Object} dataSource - Specifies an  JSON or String data.\n *\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\n\n\nfunction getFieldValues(dataItem, fields) {\n  var fieldData = {};\n\n  if (isNullOrUndefined(dataItem) || typeof dataItem === 'string' || typeof dataItem === 'number' || !isNullOrUndefined(dataItem.isHeader)) {\n    return dataItem;\n  } else {\n    for (var _i2 = 0, _Object$keys = Object.keys(fields); _i2 < _Object$keys.length; _i2++) {\n      var field = _Object$keys[_i2];\n      var dataField = fields[field];\n      var value = !isNullOrUndefined(dataField) && typeof dataField === 'string' ? getValue(dataField, dataItem) : undefined;\n\n      if (!isNullOrUndefined(value)) {\n        fieldData[dataField] = value;\n      }\n    }\n  }\n\n  return fieldData;\n}\n\nfunction compileTemplate(template) {\n  if (template) {\n    try {\n      if (document.querySelector(template)) {\n        return compile(document.querySelector(template).innerHTML.trim());\n      }\n    } catch (e) {\n      return compile(template);\n    }\n  }\n\n  return undefined;\n}\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}; // Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\n\n\nvar effectsConfig = {\n  'None': [],\n  'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n  'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n  'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n  'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nvar effectsRTLConfig = {\n  'None': [],\n  'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n  'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n  'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n  'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n}; // don't use space in classnames.\n\nvar classNames = {\n  root: 'e-listview',\n  hover: 'e-hover',\n  selected: 'e-active',\n  focused: 'e-focused',\n  parentItem: 'e-list-parent',\n  listItem: 'e-list-item',\n  listIcon: 'e-list-icon',\n  textContent: 'e-text-content',\n  listItemText: 'e-list-text',\n  groupListItem: 'e-list-group-item',\n  hasChild: 'e-has-child',\n  view: 'e-view',\n  header: 'e-list-header',\n  headerText: 'e-headertext',\n  headerTemplateText: 'e-headertemplate-text',\n  text: 'e-text',\n  disable: 'e-disabled',\n  content: 'e-content',\n  icon: 'e-icons',\n  backIcon: 'e-icon-back',\n  checkboxWrapper: 'e-checkbox-wrapper',\n  checkbox: 'e-checkbox',\n  checked: 'e-check',\n  checklist: 'e-checklist',\n  checkboxIcon: 'e-frame',\n  checkboxRight: 'e-checkbox-right',\n  checkboxLeft: 'e-checkbox-left',\n  listviewCheckbox: 'e-listview-checkbox',\n  itemCheckList: 'e-checklist',\n  virtualElementContainer: 'e-list-virtualcontainer'\n};\nvar LISTVIEW_TEMPLATE_PROPERTY = 'Template';\nvar LISTVIEW_GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nvar LISTVIEW_HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nvar swipeVelocity = 0.5;\n/**\n * Represents the field settings of the ListView.\n */\n\nvar FieldSettings = /*#__PURE__*/function (_ChildProperty) {\n  _inherits(FieldSettings, _ChildProperty);\n\n  var _super = _createSuper(FieldSettings);\n\n  function FieldSettings() {\n    _classCallCheck(this, FieldSettings);\n\n    return _super.apply(this, arguments);\n  }\n\n  return FieldSettings;\n}(ChildProperty);\n\n__decorate([Property('id')], FieldSettings.prototype, \"id\", void 0);\n\n__decorate([Property('text')], FieldSettings.prototype, \"text\", void 0);\n\n__decorate([Property('isChecked')], FieldSettings.prototype, \"isChecked\", void 0);\n\n__decorate([Property('isVisible')], FieldSettings.prototype, \"isVisible\", void 0);\n\n__decorate([Property('enabled')], FieldSettings.prototype, \"enabled\", void 0);\n\n__decorate([Property('iconCss')], FieldSettings.prototype, \"iconCss\", void 0);\n\n__decorate([Property('child')], FieldSettings.prototype, \"child\", void 0);\n\n__decorate([Property('tooltip')], FieldSettings.prototype, \"tooltip\", void 0);\n\n__decorate([Property('groupBy')], FieldSettings.prototype, \"groupBy\", void 0);\n\n__decorate([Property('text')], FieldSettings.prototype, \"sortBy\", void 0);\n\n__decorate([Property('htmlAttributes')], FieldSettings.prototype, \"htmlAttributes\", void 0);\n\n__decorate([Property('tableName')], FieldSettings.prototype, \"tableName\", void 0);\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favorite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var listviewObject = new ListView({});\n *   listviewObject.appendTo(\"#listview\");\n * ```\n */\n\n\nvar ListView = /*#__PURE__*/function (_Component) {\n  _inherits(ListView, _Component);\n\n  var _super2 = _createSuper(ListView);\n\n  /**\n   * Constructor for creating the widget\n   *\n   * @param options\n   *\n   * @param element\n   */\n  function ListView(options, element) {\n    var _this;\n\n    _classCallCheck(this, ListView);\n\n    _this = _super2.call(this, options, element);\n    _this.previousSelectedItems = [];\n    _this.hiddenItems = [];\n    _this.enabledItems = [];\n    _this.disabledItems = [];\n    return _this;\n  }\n  /**\n   * @param newProp\n   *\n   * @param oldProp\n   *\n   * @private\n   */\n\n\n  _createClass(ListView, [{\n    key: \"onPropertyChanged\",\n    value: function onPropertyChanged(newProp, oldProp) {\n      for (var _i3 = 0, _Object$keys2 = Object.keys(newProp); _i3 < _Object$keys2.length; _i3++) {\n        var prop = _Object$keys2[_i3];\n\n        switch (prop) {\n          case 'htmlAttributes':\n            this.setHTMLAttribute();\n            break;\n\n          case 'cssClass':\n            this.setCSSClass(oldProp.cssClass);\n            break;\n\n          case 'enable':\n            this.setEnable();\n            break;\n\n          case 'width':\n          case 'height':\n            this.setSize();\n            break;\n\n          case 'enableRtl':\n            this.setEnableRTL();\n            break;\n\n          case 'fields':\n            // eslint-disable-next-line\n            this.listBaseOption.fields = this.fields.properties;\n\n            if (this.enableVirtualization) {\n              this.virtualizationModule.reRenderUiVirtualization();\n            } else {\n              this.reRender();\n            }\n\n            break;\n\n          case 'headerTitle':\n            if (!this.curDSLevel.length) {\n              this.header(this.headerTitle, false, 'header');\n            }\n\n            break;\n\n          case 'query':\n            if (this.enableVirtualization) {\n              this.virtualizationModule.reRenderUiVirtualization();\n            } else {\n              this.reRender();\n            }\n\n            break;\n\n          case 'showHeader':\n            this.header(this.headerTitle, false, 'header');\n            break;\n\n          case 'enableVirtualization':\n            if (!isNullOrUndefined(this.contentContainer)) {\n              detach(this.contentContainer);\n            }\n\n            this.refresh();\n            break;\n\n          case 'showCheckBox':\n          case 'checkBoxPosition':\n            if (this.enableVirtualization) {\n              this.virtualizationModule.reRenderUiVirtualization();\n            } else {\n              this.setCheckbox();\n            }\n\n            break;\n\n          case 'dataSource':\n            if (this.enableVirtualization) {\n              this.virtualizationModule.reRenderUiVirtualization();\n            } else {\n              this.reRender();\n            }\n\n            break;\n\n          case 'sortOrder':\n          case 'template':\n            if (!this.enableVirtualization) {\n              this.refresh();\n            }\n\n            break;\n\n          case 'showIcon':\n            if (this.enableVirtualization) {\n              this.virtualizationModule.reRenderUiVirtualization();\n            } else {\n              this.listBaseOption.showIcon = this.showIcon;\n              this.curViewDS = this.getSubDS();\n              this.resetCurrentList();\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    } // Model Changes\n\n  }, {\n    key: \"setHTMLAttribute\",\n    value: function setHTMLAttribute() {\n      if (Object.keys(this.htmlAttributes).length) {\n        attributes(this.element, this.htmlAttributes);\n      }\n    }\n  }, {\n    key: \"setCSSClass\",\n    value: function setCSSClass(oldCSSClass) {\n      if (this.cssClass) {\n        addClass([this.element], this.cssClass.split(' ').filter(function (css) {\n          return css;\n        }));\n      }\n\n      if (oldCSSClass) {\n        removeClass([this.element], oldCSSClass.split(' ').filter(function (css) {\n          return css;\n        }));\n      }\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize() {\n      this.element.style.height = formatUnit(this.height);\n      this.element.style.width = formatUnit(this.width);\n      this.isWindow = this.element.clientHeight ? false : true;\n    }\n  }, {\n    key: \"setEnable\",\n    value: function setEnable() {\n      this.enableElement(this.element, this.enable);\n    }\n  }, {\n    key: \"setEnableRTL\",\n    value: function setEnableRTL() {\n      if (this.enableRtl) {\n        this.element.classList.add('e-rtl');\n      } else {\n        this.element.classList.remove('e-rtl');\n      }\n    }\n  }, {\n    key: \"enableElement\",\n    value: function enableElement(element, isEnabled) {\n      if (isEnabled) {\n        element.classList.remove(classNames.disable);\n      } else {\n        element.classList.add(classNames.disable);\n      }\n    } // Support Component Functions\n\n  }, {\n    key: \"header\",\n    value: function header(text, showBack, prop) {\n      if (this.headerEle === undefined && this.showHeader) {\n        if (this.enableHtmlSanitizer) {\n          this.setProperties({\n            headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle)\n          }, true);\n        }\n\n        this.headerEle = this.createElement('div', {\n          className: classNames.header\n        });\n        var innerHeaderEle = this.createElement('span', {\n          className: classNames.headerText,\n          innerHTML: this.headerTitle\n        });\n        var textEle = this.createElement('div', {\n          className: classNames.text,\n          innerHTML: innerHeaderEle.outerHTML\n        });\n        var hedBackButton = this.createElement('div', {\n          className: classNames.icon + ' ' + classNames.backIcon + ' e-but-back',\n          attrs: {\n            style: 'display:none;'\n          }\n        });\n        this.headerEle.appendChild(hedBackButton);\n        this.headerEle.appendChild(textEle);\n\n        if (this.headerTemplate) {\n          // eslint-disable-next-line\n          var compiledString = compile(this.headerTemplate);\n          var headerTemplateEle = this.createElement('div', {\n            className: classNames.headerTemplateText\n          }); // eslint-disable-next-line\n\n          var compiledElement = compiledString({}, this, prop, this.LISTVIEW_HEADERTEMPLATE_ID, null, null, this.headerEle);\n\n          if (compiledElement) {\n            append(compiledElement, headerTemplateEle);\n          }\n\n          append([headerTemplateEle], this.headerEle); // eslint-disable-next-line\n\n          if (this.isReact) {\n            this.renderReactTemplates();\n          }\n        }\n\n        if (this.headerTemplate && this.headerTitle) {\n          textEle.classList.add('header');\n        }\n\n        this.element.classList.add('e-has-header');\n        prepend([this.headerEle], this.element);\n      } else if (this.headerEle) {\n        if (this.showHeader) {\n          this.headerEle.style.display = '';\n\n          var _textEle = this.headerEle.querySelector('.' + classNames.headerText);\n\n          var _hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n\n          if (this.enableHtmlSanitizer) {\n            text = SanitizeHtmlHelper.sanitize(text);\n          }\n\n          _textEle.innerHTML = text;\n\n          if (this.headerTemplate && showBack) {\n            _textEle.parentElement.classList.remove('header');\n\n            this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('nested-header');\n          }\n\n          if (this.headerTemplate && !showBack) {\n            _textEle.parentElement.classList.add('header');\n\n            this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.remove('nested-header');\n            this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('header');\n          }\n\n          if (showBack === true) {\n            _hedBackButton.style.display = '';\n          } else {\n            _hedBackButton.style.display = 'none';\n          }\n        } else {\n          this.headerEle.style.display = 'none';\n        }\n      }\n    } // Animation Related Functions\n\n  }, {\n    key: \"switchView\",\n    value: function switchView(fromView, toView, reverse) {\n      var _this2 = this;\n\n      if (fromView && toView) {\n        var fPos = fromView.style.position;\n        var overflow = this.element.style.overflow !== 'hidden' ? this.element.style.overflow : '';\n        fromView.style.position = 'absolute';\n        fromView.classList.add('e-view');\n        var anim;\n        var duration = this.animation.duration;\n\n        if (this.animation.effect) {\n          anim = this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect];\n        } else {\n          var slideLeft = 'SlideLeft';\n          anim = effectsConfig[slideLeft];\n          reverse = this.enableRtl;\n          duration = 0;\n        }\n\n        this.element.style.overflow = 'hidden';\n        this.aniObj.animate(fromView, {\n          name: reverse === true ? anim[0] : anim[1],\n          duration: duration,\n          timingFunction: this.animation.easing,\n          // eslint-disable-next-line\n          end: function end(model) {\n            fromView.style.display = 'none';\n            _this2.element.style.overflow = overflow;\n            fromView.style.position = fPos;\n            fromView.classList.remove('e-view');\n          }\n        });\n        toView.style.display = '';\n        this.aniObj.animate(toView, {\n          name: reverse === true ? anim[2] : anim[3],\n          duration: duration,\n          timingFunction: this.animation.easing,\n          end: function end() {\n            _this2.trigger('actionComplete');\n          }\n        });\n        this.curUL = toView;\n      }\n    }\n  }, {\n    key: \"preRender\",\n    value: function preRender() {\n      if (this.template) {\n        try {\n          if (document.querySelectorAll(this.template).length) {\n            this.setProperties({\n              template: document.querySelector(this.template).innerHTML.trim()\n            }, true);\n          }\n        } catch (e) {\n          compile(this.template);\n        }\n      }\n\n      this.listBaseOption = {\n        template: this.template,\n        headerTemplate: this.headerTemplate,\n        groupTemplate: this.groupTemplate,\n        expandCollapse: true,\n        listClass: '',\n        ariaAttributes: {\n          itemRole: 'option',\n          listRole: 'presentation',\n          itemText: '',\n          groupItemRole: 'group',\n          wrapperRole: 'presentation'\n        },\n        // eslint-disable-next-line\n        fields: this.fields.properties,\n        sortOrder: this.sortOrder,\n        showIcon: this.showIcon,\n        itemCreated: this.renderCheckbox.bind(this),\n        templateID: \"\".concat(this.element.id).concat(LISTVIEW_TEMPLATE_PROPERTY),\n        groupTemplateID: \"\".concat(this.element.id).concat(LISTVIEW_GROUPTEMPLATE_PROPERTY),\n        enableHtmlSanitizer: this.enableHtmlSanitizer\n      };\n      this.initialization();\n    }\n  }, {\n    key: \"initialization\",\n    value: function initialization() {\n      this.curDSLevel = [];\n      this.animateOptions = {};\n      this.curViewDS = [];\n      this.currentLiElements = [];\n      this.isNestedList = false;\n      this.selectedData = [];\n      this.selectedId = [];\n      this.LISTVIEW_TEMPLATE_ID = \"\".concat(this.element.id).concat(LISTVIEW_TEMPLATE_PROPERTY);\n      this.LISTVIEW_GROUPTEMPLATE_ID = \"\".concat(this.element.id).concat(LISTVIEW_GROUPTEMPLATE_PROPERTY);\n      this.LISTVIEW_HEADERTEMPLATE_ID = \"\".concat(this.element.id).concat(LISTVIEW_HEADERTEMPLATE_PROPERTY);\n      this.aniObj = new Animation(this.animateOptions);\n      this.removeElement(this.curUL);\n      this.removeElement(this.ulElement);\n      this.removeElement(this.headerEle);\n      this.removeElement(this.contentContainer);\n      this.curUL = this.ulElement = this.liCollection = this.headerEle = this.contentContainer = undefined;\n    }\n  }, {\n    key: \"renderCheckbox\",\n    value: function renderCheckbox(args) {\n      if (args.item.classList.contains(classNames.hasChild)) {\n        this.isNestedList = true;\n      }\n\n      if (this.showCheckBox && this.isValidLI(args.item)) {\n        var checkboxElement;\n        var fieldData; // eslint-disable-next-line prefer-const\n\n        checkboxElement = createCheckBox(this.createElement, false, {\n          checked: false,\n          enableRtl: this.enableRtl,\n          cssClass: classNames.listviewCheckbox\n        });\n        checkboxElement.setAttribute('role', 'checkbox');\n        var frameElement = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n        args.item.classList.add(classNames.itemCheckList);\n        args.item.firstElementChild.classList.add(classNames.checkbox);\n\n        if (typeof this.dataSource[0] !== 'string' && typeof this.dataSource[0] !== 'number') {\n          fieldData = getFieldValues(args.curData, this.listBaseOption.fields);\n\n          if (fieldData[this.listBaseOption.fields.isChecked]) {\n            this.checkInternally(args, checkboxElement);\n          }\n        } else if ((typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') && this.selectedData.indexOf(args.text) !== -1) {\n          this.checkInternally(args, checkboxElement);\n        }\n\n        checkboxElement.setAttribute('aria-checked', frameElement.classList.contains(classNames.checked) ? 'true' : 'false');\n\n        if (this.checkBoxPosition === 'Left') {\n          checkboxElement.classList.add(classNames.checkboxLeft);\n          args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n          args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n        } else {\n          checkboxElement.classList.add(classNames.checkboxRight);\n          args.item.firstElementChild.classList.add(classNames.checkboxRight);\n          args.item.firstElementChild.appendChild(checkboxElement);\n        }\n\n        this.currentLiElements.push(args.item);\n\n        if (this.checkBoxPosition === 'Left') {\n          this.virtualCheckBox = args.item.firstElementChild.children[0];\n        } else {\n          this.virtualCheckBox = args.item.firstElementChild.lastElementChild;\n        }\n      }\n    }\n  }, {\n    key: \"checkInternally\",\n    value: function checkInternally(args, checkboxElement) {\n      args.item.classList.add(classNames.selected);\n      args.item.setAttribute('aria-selected', 'true');\n      checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n      checkboxElement.setAttribute('aria-checked', 'true');\n    }\n    /**\n     * Checks the specific list item by passing the unchecked fields as an argument to this method.\n     *\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n\n  }, {\n    key: \"checkItem\",\n    value: function checkItem(item) {\n      this.toggleCheckBase(item, true);\n    }\n  }, {\n    key: \"toggleCheckBase\",\n    value: function toggleCheckBase(item, checked) {\n      if (this.showCheckBox) {\n        var liElement = item;\n\n        if (item instanceof Object && item.constructor !== HTMLLIElement) {\n          liElement = this.getLiFromObjOrElement(item);\n        }\n\n        if (!isNullOrUndefined(liElement)) {\n          var checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n\n          if (checked === true) {\n            liElement.classList.add(classNames.selected);\n          } else {\n            liElement.classList.remove(classNames.selected);\n          }\n\n          liElement.setAttribute('aria-selected', checked ? 'true' : 'false');\n\n          if (checked === true) {\n            checkboxIcon.classList.add(classNames.checked);\n          } else {\n            checkboxIcon.classList.remove(classNames.checked);\n          }\n\n          checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n        }\n\n        this.setSelectedItemData(liElement);\n      }\n    }\n    /**\n     * Uncheck the specific list item by passing the checked fields as an argument to this method.\n     *\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n\n  }, {\n    key: \"uncheckItem\",\n    value: function uncheckItem(item) {\n      this.toggleCheckBase(item, false);\n    }\n    /**\n     * Checks all the unchecked items in the ListView.\n     */\n\n  }, {\n    key: \"checkAllItems\",\n    value: function checkAllItems() {\n      this.toggleAllCheckBase(true);\n    }\n    /**\n     * Uncheck all the checked items in ListView.\n     */\n\n  }, {\n    key: \"uncheckAllItems\",\n    value: function uncheckAllItems() {\n      this.toggleAllCheckBase(false);\n    }\n  }, {\n    key: \"toggleAllCheckBase\",\n    value: function toggleAllCheckBase(checked) {\n      if (this.showCheckBox) {\n        for (var i = 0; i < this.liCollection.length; i++) {\n          var checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n\n          if (checkIcon) {\n            if (checked) {\n              if (!checkIcon.classList.contains(classNames.checked)) {\n                this.checkItem(this.liCollection[i]);\n              }\n            } else {\n              if (checkIcon.classList.contains(classNames.checked)) {\n                this.uncheckItem(this.liCollection[i]);\n              }\n            }\n          }\n        }\n\n        if (this.enableVirtualization) {\n          this.virtualizationModule.checkedItem(checked);\n        }\n      }\n    }\n  }, {\n    key: \"setCheckbox\",\n    value: function setCheckbox() {\n      if (this.showCheckBox) {\n        var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n        var args = {\n          item: undefined,\n          curData: undefined,\n          dataSource: undefined,\n          fields: undefined,\n          options: undefined,\n          text: ''\n        };\n\n        for (var i = 0; i < liCollection.length; i++) {\n          var element = liCollection[i];\n          args.item = element; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          args.curData = this.getItemData(element);\n\n          if (element.querySelector('.' + classNames.checkboxWrapper)) {\n            this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n          }\n\n          this.renderCheckbox(args);\n\n          if (args.item.classList.contains(classNames.selected)) {\n            this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n          }\n        }\n      } else {\n        var _liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n\n        for (var _i4 = 0; _i4 < _liCollection.length; _i4++) {\n          var _element = _liCollection[_i4];\n\n          _element.classList.remove(classNames.selected);\n\n          _element.firstElementChild.classList.remove(classNames.checkbox);\n\n          this.removeElement(_element.querySelector('.' + classNames.checkboxWrapper));\n        }\n\n        if (this.selectedItems) {\n          this.selectedItems.item.classList.add(classNames.selected);\n        }\n      }\n    }\n    /**\n     * Refresh the height of the list item only on enabling the virtualization property.\n     */\n\n  }, {\n    key: \"refreshItemHeight\",\n    value: function refreshItemHeight() {\n      if (this.virtualizationModule) {\n        this.virtualizationModule.refreshItemHeight();\n      }\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(e) {\n      var target = e.target;\n      var classList = target.classList;\n      var closestElement;\n\n      if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n        if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n          this.uncheckAllItems();\n        }\n\n        this.back();\n      } else {\n        var li = closest(target.parentNode, '.' + classNames.listItem);\n\n        if (li === null) {\n          li = target;\n        }\n\n        this.removeFocus();\n\n        if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n          if (e.target.classList.contains(classNames.checkboxIcon)) {\n            li.classList.add(classNames.focused);\n\n            if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n              var args = {\n                curData: undefined,\n                dataSource: undefined,\n                fields: undefined,\n                options: undefined,\n                text: undefined,\n                item: li\n              };\n              this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n            } else {\n              this.uncheckItem(li);\n              li.classList.add(classNames.focused);\n            }\n\n            if (this.enableVirtualization) {\n              this.virtualizationModule.setCheckboxLI(li, e);\n            }\n\n            if (e) {\n              var eventArgs = this.selectEventData(li, e);\n              var checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n              merge(eventArgs, {\n                isChecked: checkIcon.classList.contains(classNames.checked)\n              });\n              this.trigger('select', eventArgs);\n            }\n          } else if (li.classList.contains(classNames.hasChild)) {\n            this.removeHover();\n            this.removeSelect();\n            this.removeSelect(li);\n            this.setSelectLI(li, e);\n            li.classList.remove(classNames.selected);\n          } else {\n            this.setCheckboxLI(li, e);\n          }\n        } else {\n          this.setSelectLI(li, e);\n        }\n\n        closestElement = closest(e.target, 'li');\n\n        if (!isNullOrUndefined(closestElement)) {\n          if (closestElement.classList.contains('e-has-child') && !e.target.parentElement.classList.contains('e-listview-checkbox')) {\n            closestElement.classList.add(classNames.disable);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"removeElement\",\n    value: function removeElement(element) {\n      return element && element.parentNode && element.parentNode.removeChild(element);\n    }\n  }, {\n    key: \"hoverHandler\",\n    value: function hoverHandler(e) {\n      var curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n      this.setHoverLI(curLi);\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"leaveHandler\",\n    value: function leaveHandler(e) {\n      this.removeHover();\n    }\n  }, {\n    key: \"homeKeyHandler\",\n    value: function homeKeyHandler(e, end) {\n      if (Object.keys(this.dataSource).length && this.curUL) {\n        if (this.selectedItems) {\n          this.selectedItems.item.setAttribute('aria-selected', 'false');\n        }\n\n        var li = this.curUL.querySelectorAll('.' + classNames.listItem);\n        var focusedElement = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n\n        if (focusedElement) {\n          focusedElement.classList.remove(classNames.focused);\n\n          if (!this.showCheckBox) {\n            focusedElement.classList.remove(classNames.selected);\n          }\n        }\n\n        var index = !end ? 0 : li.length - 1;\n\n        if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n          li[index].classList.add(classNames.focused);\n        } else {\n          this.setSelectLI(li[index], e);\n        }\n\n        if (li[index]) {\n          this.element.setAttribute('aria-activedescendant', li[index].id.toString());\n        } else {\n          this.element.removeAttribute('aria-activedescendant');\n        }\n      }\n    }\n  }, {\n    key: \"onArrowKeyDown\",\n    value: function onArrowKeyDown(e, prev) {\n      var siblingLI;\n      var li;\n      var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n\n      if (hasChild || this.showCheckBox) {\n        li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n        siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n\n        if (!isNullOrUndefined(siblingLI)) {\n          if (li) {\n            li.classList.remove(classNames.focused);\n\n            if (!this.showCheckBox) {\n              li.classList.remove(classNames.selected);\n            }\n          }\n\n          if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n            siblingLI.classList.add(classNames.focused);\n          } else {\n            this.setSelectLI(siblingLI, e);\n          }\n        }\n      } else {\n        li = this.curUL.querySelector('.' + classNames.selected);\n        siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n        this.setSelectLI(siblingLI, e);\n      }\n\n      if (siblingLI) {\n        this.element.setAttribute('aria-activedescendant', siblingLI.id.toString());\n      } else {\n        this.element.removeAttribute('aria-activedescendant');\n      }\n\n      return siblingLI;\n    }\n  }, {\n    key: \"arrowKeyHandler\",\n    value: function arrowKeyHandler(e, prev) {\n      var _this3 = this;\n\n      e.preventDefault();\n\n      if (Object.keys(this.dataSource).length && this.curUL) {\n        var siblingLI = this.onArrowKeyDown(e, prev);\n        var elementTop = this.element.getBoundingClientRect().top;\n        var elementHeight = this.element.getBoundingClientRect().height;\n        var firstItemBounds = this.curUL.querySelector('.' + classNames.listItem).getBoundingClientRect();\n        var heightDiff;\n        var groupItemBounds;\n\n        if (this.fields.groupBy) {\n          groupItemBounds = this.curUL.querySelector('.' + classNames.groupListItem).getBoundingClientRect();\n        }\n\n        if (siblingLI) {\n          var siblingTop = siblingLI.getBoundingClientRect().top;\n          var siblingHeight = siblingLI.getBoundingClientRect().height;\n\n          if (!prev) {\n            var height = this.isWindow ? window.innerHeight : elementHeight;\n            heightDiff = this.isWindow ? siblingTop + siblingHeight : siblingTop - elementTop + siblingHeight;\n\n            if (heightDiff > height) {\n              if (this.isWindow === true) {\n                window.scroll(0, pageYOffset + (heightDiff - height));\n              } else {\n                this.element.scrollTop = this.element.scrollTop + (heightDiff - height);\n              }\n            }\n          } else {\n            heightDiff = this.isWindow ? siblingTop : siblingTop - elementTop;\n\n            if (heightDiff < 0) {\n              if (this.isWindow === true) {\n                window.scroll(0, pageYOffset + heightDiff);\n              } else {\n                this.element.scrollTop = this.element.scrollTop + heightDiff;\n              }\n            }\n          }\n        } else if (this.enableVirtualization && prev && this.virtualizationModule.uiFirstIndex) {\n          this.onUIScrolled = function () {\n            _this3.onArrowKeyDown(e, prev);\n\n            _this3.onUIScrolled = undefined;\n          };\n\n          heightDiff = this.virtualizationModule.listItemHeight;\n\n          if (this.isWindow === true) {\n            window.scroll(0, pageYOffset - heightDiff);\n          } else {\n            this.element.scrollTop = this.element.scrollTop - heightDiff;\n          }\n        } else if (prev) {\n          if (this.showHeader && this.headerEle) {\n            var topHeight = groupItemBounds ? groupItemBounds.top : firstItemBounds.top;\n            var headerBounds = this.headerEle.getBoundingClientRect();\n            heightDiff = headerBounds.top < 0 ? headerBounds.height - topHeight : 0;\n\n            if (this.isWindow === true) {\n              window.scroll(0, pageYOffset - heightDiff);\n            } else {\n              this.element.scrollTop = 0;\n            }\n          } else if (this.fields.groupBy) {\n            heightDiff = this.isWindow ? groupItemBounds.top < 0 ? groupItemBounds.top : 0 : elementTop - firstItemBounds.top + groupItemBounds.height;\n\n            if (this.isWindow === true) {\n              window.scroll(0, pageYOffset + heightDiff);\n            } else {\n              this.element.scrollTop = this.element.scrollTop - heightDiff;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"enterKeyHandler\",\n    value: function enterKeyHandler(e) {\n      if (Object.keys(this.dataSource).length && this.curUL) {\n        var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n        var li = this.curUL.querySelector('.' + classNames.focused);\n\n        if (hasChild && li) {\n          li.classList.remove(classNames.focused);\n\n          if (this.showCheckBox) {\n            this.removeSelect();\n            this.removeSelect(li);\n            this.removeHover();\n          }\n\n          this.setSelectLI(li, e);\n        }\n      }\n    }\n  }, {\n    key: \"spaceKeyHandler\",\n    value: function spaceKeyHandler(e) {\n      if (this.enable && this.showCheckBox && Object.keys(this.dataSource).length && this.curUL) {\n        var li = this.curUL.querySelector('.' + classNames.focused);\n        var checkboxElement;\n        var checkIcon;\n\n        if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n          var args = {\n            curData: undefined,\n            dataSource: undefined,\n            fields: undefined,\n            options: undefined,\n            text: undefined,\n            item: li\n          };\n          checkboxElement = args.item.querySelector('.' + classNames.checkboxWrapper);\n          this.checkInternally(args, checkboxElement);\n          checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n        } else {\n          this.uncheckItem(li);\n        }\n\n        var eventArgs = this.selectEventData(li, e);\n        merge(eventArgs, {\n          isChecked: checkIcon ? checkIcon.classList.contains(classNames.checked) : false\n        });\n        this.trigger('select', eventArgs);\n      }\n    }\n  }, {\n    key: \"keyActionHandler\",\n    value: function keyActionHandler(e) {\n      switch (e.keyCode) {\n        case 36:\n          this.homeKeyHandler(e);\n          break;\n\n        case 35:\n          this.homeKeyHandler(e, true);\n          break;\n\n        case 40:\n          this.arrowKeyHandler(e);\n          break;\n\n        case 38:\n          this.arrowKeyHandler(e, true);\n          break;\n\n        case 13:\n          this.enterKeyHandler(e);\n          break;\n\n        case 8:\n          if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n            this.uncheckAllItems();\n          }\n\n          this.back();\n          break;\n\n        case 32:\n          this.spaceKeyHandler(e);\n          break;\n      }\n    }\n  }, {\n    key: \"swipeActionHandler\",\n    value: function swipeActionHandler(e) {\n      if (e.swipeDirection === 'Right' && e.velocity > swipeVelocity && e.originalEvent.type === 'touchend') {\n        if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n          this.uncheckAllItems();\n        }\n\n        this.back();\n      }\n    }\n  }, {\n    key: \"focusout\",\n    value: function focusout() {\n      if (Object.keys(this.dataSource).length && this.curUL) {\n        var focusedElement = this.curUL.querySelector('.' + classNames.focused);\n        var activeElement = this.curUL.querySelector('[aria-selected = true]');\n\n        if (focusedElement) {\n          focusedElement.classList.remove(classNames.focused);\n\n          if (activeElement && !this.showCheckBox) {\n            activeElement.classList.add(classNames.selected);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"wireEvents\",\n    value: function wireEvents() {\n      EventHandler.add(this.element, 'keydown', this.keyActionHandler, this);\n      EventHandler.add(this.element, 'click', this.clickHandler, this);\n      EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n      EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n      EventHandler.add(this.element, 'focusout', this.focusout, this);\n      this.touchModule = new Touch(this.element, {\n        swipe: this.swipeActionHandler.bind(this)\n      });\n    }\n  }, {\n    key: \"unWireEvents\",\n    value: function unWireEvents() {\n      EventHandler.remove(this.element, 'click', this.clickHandler);\n      EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n      EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n      EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n      EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n      this.touchModule.destroy();\n    }\n  }, {\n    key: \"removeFocus\",\n    value: function removeFocus() {\n      var focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n\n      var _iterator2 = _createForOfIteratorHelper(focusedLI),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var ele = _step2.value;\n          ele.classList.remove(classNames.focused);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"removeHover\",\n    value: function removeHover() {\n      var hoverLI = this.element.querySelector('.' + classNames.hover);\n\n      if (hoverLI) {\n        hoverLI.classList.remove(classNames.hover);\n      }\n    }\n  }, {\n    key: \"removeSelect\",\n    value: function removeSelect(li) {\n      if (isNullOrUndefined(li)) {\n        var selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n\n        var _iterator3 = _createForOfIteratorHelper(selectedLI),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var ele = _step3.value;\n\n            if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n              continue;\n            } else {\n              ele.setAttribute('aria-selected', 'false');\n              ele.classList.remove(classNames.selected);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } else {\n        li.classList.remove(classNames.selected);\n        li.setAttribute('aria-selected', 'false');\n      }\n    }\n  }, {\n    key: \"isValidLI\",\n    value: function isValidLI(li) {\n      return li && li.classList.contains(classNames.listItem) && !li.classList.contains(classNames.groupListItem) && !li.classList.contains(classNames.disable);\n    }\n  }, {\n    key: \"setCheckboxLI\",\n    value: function setCheckboxLI(li, e) {\n      if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n        if (this.curUL.querySelector('.' + classNames.focused)) {\n          this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n\n        li.classList.add(classNames.focused);\n        var checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n        var checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n        this.removeHover();\n\n        if (!checkIcon.classList.contains(classNames.checked)) {\n          checkIcon.classList.add(classNames.checked);\n          li.classList.add(classNames.selected);\n          li.setAttribute('aria-selected', 'true');\n        } else {\n          checkIcon.classList.remove(classNames.checked);\n          li.classList.remove(classNames.selected);\n          li.setAttribute('aria-selected', 'false');\n        }\n\n        checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ? 'true' : 'false');\n        var eventArgs = this.selectEventData(li, e);\n        merge(eventArgs, {\n          isChecked: checkIcon.classList.contains(classNames.checked)\n        });\n\n        if (this.enableVirtualization) {\n          this.virtualizationModule.setCheckboxLI(li, e);\n        }\n\n        this.trigger('select', eventArgs);\n        this.setSelectedItemData(li);\n        this.renderSubList(li);\n      }\n    }\n  }, {\n    key: \"selectEventData\",\n    value: function selectEventData(li, e) {\n      var data = this.getItemData(li);\n      var fieldData = getFieldValues(data, this.listBaseOption.fields);\n      var selectedItem;\n\n      if (!isNullOrUndefined(data) && typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') {\n        selectedItem = {\n          item: li,\n          text: li && li.innerText.trim(),\n          data: this.dataSource\n        };\n      } else {\n        selectedItem = // eslint-disable-next-line\n        {\n          item: li,\n          text: fieldData && fieldData[this.listBaseOption.fields.text],\n          // eslint-disable-next-line\n          data: data\n        };\n      }\n\n      var eventArgs = {};\n      merge(eventArgs, selectedItem);\n\n      if (e) {\n        merge(eventArgs, {\n          isInteracted: true,\n          event: e,\n          index: this.curUL && Array.prototype.indexOf.call(this.curUL.children, li)\n        });\n      }\n\n      return eventArgs;\n    }\n  }, {\n    key: \"setSelectedItemData\",\n    value: function setSelectedItemData(li) {\n      var data = this.getItemData(li); // eslint-disable-next-line\n\n      var fieldData = getFieldValues(data, this.listBaseOption.fields);\n\n      if (!isNullOrUndefined(data) && (typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number')) {\n        this.selectedItems = {\n          item: li,\n          text: li && li.innerText.trim(),\n          data: this.dataSource\n        };\n      } else {\n        this.selectedItems = {\n          item: li,\n          // eslint-disable-next-line\n          text: fieldData && fieldData[this.listBaseOption.fields.text],\n          // eslint-disable-next-line\n          data: data\n        };\n      }\n    }\n  }, {\n    key: \"setSelectLI\",\n    value: function setSelectLI(li, e) {\n      if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n        if (!this.showCheckBox) {\n          this.removeSelect();\n        }\n\n        li.classList.add(classNames.selected);\n        li.setAttribute('aria-selected', 'true');\n        this.removeHover();\n        this.setSelectedItemData(li);\n\n        if (this.enableVirtualization) {\n          this.virtualizationModule.setSelectLI(li, e);\n        }\n\n        var eventArgs = this.selectEventData(li, e);\n        this.trigger('select', eventArgs);\n        this.selectedLI = li;\n        this.renderSubList(li);\n      }\n    }\n  }, {\n    key: \"setHoverLI\",\n    value: function setHoverLI(li) {\n      if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n        var lastLi = this.element.querySelectorAll('.' + classNames.hover);\n\n        if (lastLi && lastLi.length) {\n          removeClass(lastLi, classNames.hover);\n        }\n\n        if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n          li.classList.add(classNames.hover);\n        }\n      }\n    } //Data Source Related Functions\n\n  }, {\n    key: \"getSubDS\",\n    value: function getSubDS() {\n      var levelKeys = this.curDSLevel;\n\n      if (levelKeys.length) {\n        var ds = this.localData;\n\n        var _iterator4 = _createForOfIteratorHelper(levelKeys),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var key = _step4.value;\n            var field = {}; // eslint-disable-next-line\n\n            field[this.fields.id] = key;\n            this.curDSJSON = this.findItemFromDS(ds, field);\n            var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n            ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        return ds;\n      }\n\n      return this.localData;\n    }\n  }, {\n    key: \"getItemData\",\n    value: function getItemData(li) {\n      var dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n      var fields = this.getElementUID(li);\n      var curDS;\n\n      if (isNullOrUndefined(this.element.querySelector('.' + classNames.hasChild)) && this.fields.groupBy) {\n        curDS = this.curViewDS;\n      } else {\n        curDS = dataSource;\n      }\n\n      return this.findItemFromDS(curDS, fields);\n    }\n  }, {\n    key: \"findItemFromDS\",\n    value: function findItemFromDS(dataSource, fields, parent) {\n      var _this4 = this;\n\n      var resultJSON;\n\n      if (dataSource && dataSource.length && fields) {\n        dataSource.some(function (data) {\n          var fieldData = // eslint-disable-next-line\n          getFieldValues(data, _this4.listBaseOption.fields); //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n\n          if ((fields[_this4.fields.id] || fields[_this4.fields.text]) && (!fields[_this4.fields.id] || (!isNullOrUndefined(fieldData[_this4.fields.id]) && fieldData[_this4.fields.id].toString()) === fields[_this4.fields.id].toString()) && (!fields[_this4.fields.text] || fieldData[_this4.fields.text] === fields[_this4.fields.text])) {\n            resultJSON = parent ? dataSource : data;\n          } else if (typeof data !== 'object' && dataSource.indexOf(data) !== -1) {\n            resultJSON = parent ? dataSource : data;\n          } else if (!isNullOrUndefined(fields[_this4.fields.id]) && isNullOrUndefined(fieldData[_this4.fields.id])) {\n            var li = _this4.element.querySelector('[data-uid=\"' + fields[_this4.fields.id] + '\"]'); // eslint-disable-next-line\n\n\n            if (li && li.innerText.trim() === fieldData[_this4.fields.text]) {\n              resultJSON = data;\n            } // eslint-disable-next-line\n\n          } else if (fieldData.hasOwnProperty(_this4.fields.child) && fieldData[_this4.fields.child].length) {\n            resultJSON = _this4.findItemFromDS(fieldData[_this4.fields.child], fields, parent);\n          }\n\n          return !!resultJSON;\n        });\n      } else {\n        resultJSON = dataSource;\n      }\n\n      return resultJSON;\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      var columns = [];\n      var query = this.query ? this.query : new Query();\n\n      if (!this.query) {\n        // eslint-disable-next-line\n        for (var _i5 = 0, _Object$keys3 = Object.keys(this.fields.properties); _i5 < _Object$keys3.length; _i5++) {\n          var column = _Object$keys3[_i5];\n\n          if (column !== 'tableName' && !!this.fields[column] && this.fields[column] !== ListBase.defaultMappedFields[column] && columns.indexOf(this.fields[column]) === -1) {\n            columns.push(this.fields[column]);\n          }\n        }\n\n        query.select(columns); // eslint-disable-next-line\n\n        if (this.fields.properties.hasOwnProperty('tableName')) {\n          query.from(this.fields.tableName);\n        }\n      }\n\n      return query;\n    }\n  }, {\n    key: \"setViewDataSource\",\n    value: function setViewDataSource() {\n      var dataSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.localData;\n\n      if (dataSource && this.fields.groupBy) {\n        if (this.sortOrder !== 'None') {\n          this.curViewDS = ListBase.groupDataSource(ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, isNullOrUndefined(this.fields.sortBy) ? this.fields.text : this.fields.sortBy)), this.listBaseOption.fields, this.sortOrder);\n        } else {\n          this.curViewDS = ListBase.groupDataSource(dataSource, this.listBaseOption.fields, this.sortOrder);\n        }\n      } else if (dataSource && this.sortOrder !== 'None') {\n        this.curViewDS = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, isNullOrUndefined(this.fields.sortBy) ? this.fields.text : this.fields.sortBy));\n      } else {\n        this.curViewDS = dataSource;\n      }\n    }\n  }, {\n    key: \"isInAnimation\",\n    value: function isInAnimation() {\n      return this.curUL.classList.contains('.e-animate');\n    }\n  }, {\n    key: \"renderRemoteLists\",\n    value: function renderRemoteLists(e, listViewComponent) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      this.localData = e.result;\n      listViewComponent.removeElement(listViewComponent.contentContainer);\n      this.renderList();\n      this.trigger('actionComplete', e);\n    }\n  }, {\n    key: \"triggerActionFailure\",\n    value: function triggerActionFailure(e) {\n      if (this.isDestroyed) {\n        return;\n      }\n\n      this.trigger('actionFailure', e);\n    }\n  }, {\n    key: \"setLocalData\",\n    value: function setLocalData() {\n      var _this5 = this;\n\n      this.trigger('actionBegin'); // eslint-disable-next-line\n\n      var listViewComponent = this;\n\n      if (this.dataSource instanceof DataManager) {\n        if (this.dataSource.ready) {\n          this.dataSource.ready.then(function (e) {\n            /* eslint-disable */\n            _this5.isOffline = _this5.dataSource.dataSource.offline;\n\n            if (_this5.dataSource instanceof DataManager && _this5.isOffline) {\n              _this5.renderRemoteLists(e, listViewComponent);\n            }\n          }).catch(function (e) {\n            _this5.triggerActionFailure(e);\n          });\n        } else {\n          this.dataSource.executeQuery(this.getQuery()).then(function (e) {\n            _this5.renderRemoteLists(e, listViewComponent);\n          }).catch(function (e) {\n            _this5.triggerActionFailure(e);\n          });\n        }\n      } else if (!this.dataSource || !this.dataSource.length) {\n        var ul = this.element.querySelector('ul');\n\n        if (ul) {\n          remove(ul);\n          this.setProperties({\n            dataSource: ListBase.createJsonFromElement(ul)\n          }, true);\n          this.localData = this.dataSource;\n          this.renderList();\n          this.trigger('actionComplete', {\n            data: this.localData\n          });\n        }\n      } else {\n        this.localData = this.dataSource;\n        this.renderList();\n        this.trigger('actionComplete', {\n          data: this.localData\n        });\n      }\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      this.removeElement(this.headerEle);\n      this.removeElement(this.ulElement);\n      this.removeElement(this.contentContainer); // eslint-disable-next-line\n\n      if (this.isReact) {\n        this.clearTemplate();\n      }\n\n      if (Object.keys(window).indexOf('ejsInterop') === -1) {\n        this.element.innerHTML = '';\n      }\n\n      this.headerEle = this.ulElement = this.liCollection = undefined;\n      this.header();\n      this.setLocalData();\n    }\n  }, {\n    key: \"resetCurrentList\",\n    value: function resetCurrentList() {\n      this.setViewDataSource(this.curViewDS);\n      this.contentContainer.innerHTML = '';\n      this.createList();\n      this.renderIntoDom(this.curUL);\n    }\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes(liElements) {\n      for (var i = 0; i < liElements.length; i++) {\n        var element = liElements[i];\n\n        if (element.classList.contains('e-list-item')) {\n          element.setAttribute('id', this.element.id + '_' + element.getAttribute('data-uid'));\n          element.setAttribute('aria-selected', 'false');\n          element.setAttribute('tabindex', '-1');\n        }\n      }\n    }\n  }, {\n    key: \"createList\",\n    value: function createList() {\n      this.currentLiElements = [];\n      this.isNestedList = false;\n      this.ulElement = this.curUL = ListBase.createList(this.createElement, this.curViewDS, this.listBaseOption, null, this);\n      this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n      this.setAttributes(this.liCollection);\n    }\n  }, {\n    key: \"exceptionEvent\",\n    value: function exceptionEvent(e) {\n      this.trigger('actionFailure', e);\n    }\n  }, {\n    key: \"UpdateCurrentUL\",\n    value: function UpdateCurrentUL() {\n      this.ulElement = this.curUL = this.element.querySelector('.' + classNames.parentItem);\n\n      if (this.curUL) {\n        // eslint-disable-next-line\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n      }\n    }\n  }, {\n    key: \"renderSubList\",\n    value: function renderSubList(li) {\n      this.liElement = li;\n      var uID = li.getAttribute('data-uid');\n\n      if (li.classList.contains(classNames.hasChild) && uID) {\n        var ul = closest(li.parentNode, '.' + classNames.parentItem);\n        var ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n        this.curDSLevel.push(uID);\n        this.setViewDataSource(this.getSubDS());\n\n        if (!ele) {\n          var data = this.curViewDS;\n          ele = ListBase.createListFromJson(this.createElement, data, this.listBaseOption, this.curDSLevel.length, null, this); // eslint-disable-next-line\n\n          if (this.isReact) {\n            this.renderReactTemplates();\n          }\n\n          var lists = ele.querySelectorAll('.' + classNames.listItem);\n          this.setAttributes(lists);\n          ele.setAttribute('pID', uID);\n          ele.style.display = 'none';\n          this.renderIntoDom(ele);\n        }\n\n        this.switchView(ul, ele);\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n\n        if (this.selectedItems) {\n          var fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields); // eslint-disable-next-line\n\n          this.header(fieldData[this.listBaseOption.fields.text], true, 'header');\n        }\n\n        this.selectedLI = undefined;\n      }\n    }\n  }, {\n    key: \"renderIntoDom\",\n    value: function renderIntoDom(ele) {\n      this.contentContainer.appendChild(ele);\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList(data) {\n      this.setViewDataSource(data);\n\n      if (this.enableVirtualization) {\n        if (Object.keys(this.dataSource).length) {\n          if ((this.template || this.groupTemplate) && !this.virtualizationModule.isNgTemplate()) {\n            if (this.isReact) {\n              if (typeof this.template == \"string\") {\n                this.listBaseOption.template = null;\n              }\n\n              if (typeof this.groupTemplate == \"string\") {\n                this.listBaseOption.groupTemplate = null;\n              }\n            } else {\n              this.listBaseOption.template = null;\n              this.listBaseOption.groupTemplate = null;\n            }\n\n            this.listBaseOption.itemCreated = this.virtualizationModule.createUIItem.bind(this.virtualizationModule);\n          }\n        }\n\n        this.virtualizationModule.uiVirtualization();\n      } else {\n        this.createList();\n        this.contentContainer = this.createElement('div', {\n          className: classNames.content\n        });\n        this.element.appendChild(this.contentContainer);\n        this.renderIntoDom(this.ulElement); // eslint-disable-next-line\n\n        if (this.isReact) {\n          this.renderReactTemplates();\n        }\n      }\n    }\n  }, {\n    key: \"getElementUID\",\n    value: function getElementUID(obj) {\n      var fields = {};\n\n      if (obj instanceof Element) {\n        // eslint-disable-next-line\n        fields[this.fields.id] = obj.getAttribute('data-uid');\n      } else {\n        fields = obj;\n      }\n\n      return fields;\n    }\n    /**\n     * Initializes the ListView component rendering.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.element.classList.add(classNames.root);\n      attributes(this.element, {\n        role: 'list',\n        tabindex: '0'\n      });\n      this.setCSSClass();\n      this.setEnableRTL();\n      this.setEnable();\n      this.setSize();\n      this.wireEvents();\n      this.header();\n      this.setLocalData();\n      this.setHTMLAttribute();\n      this.rippleFn = rippleEffect(this.element, {\n        selector: '.' + classNames.listItem\n      });\n      this.renderComplete();\n    }\n    /**\n     * It is used to destroy the ListView component.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // eslint-disable-next-line\n      if (this.isReact) {\n        this.clearTemplate();\n      }\n\n      this.unWireEvents();\n      var classAr = [classNames.root, classNames.disable, 'e-rtl', 'e-has-header', 'e-lib'].concat(this.cssClass.split(' ').filter(function (css) {\n        return css;\n      }));\n      removeClass([this.element], classAr);\n      this.element.removeAttribute('role');\n      this.element.removeAttribute('tabindex');\n      this.curUL = this.ulElement = this.liCollection = this.headerEle = undefined;\n      this.element.innerHTML = '';\n\n      _get(_getPrototypeOf(ListView.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Switches back from the navigated sub list item.\n     */\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      var pID = this.curDSLevel[this.curDSLevel.length - 1];\n\n      if (pID === undefined || this.isInAnimation()) {\n        return;\n      }\n\n      this.curDSLevel.pop();\n      this.setViewDataSource(this.getSubDS());\n      var toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n      var fromUL = this.curUL;\n\n      if (!toUL) {\n        this.createList();\n        this.renderIntoDom(this.ulElement);\n        toUL = this.curUL;\n      } else {\n        toUL = toUL.parentElement;\n      }\n\n      var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields); // eslint-disable-next-line\n\n      var text = fieldData[this.fields.text];\n      this.switchView(fromUL, toUL, true);\n      this.removeFocus();\n      var li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n      li.classList.remove(classNames.disable);\n      li.classList.add(classNames.focused);\n\n      if (this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked)) {\n        li.setAttribute('aria-selected', 'true');\n      } else {\n        li.classList.remove(classNames.selected);\n        li.setAttribute('aria-selected', 'false');\n      }\n\n      this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n\n      if (this.enableHtmlSanitizer) {\n        this.setProperties({\n          headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle)\n        }, true);\n      }\n\n      this.header(this.curDSLevel.length ? text : this.headerTitle, this.curDSLevel.length ? true : false, 'header');\n    }\n    /**\n     * Selects the list item from the ListView by passing the elements or field object.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(item) {\n      if (this.enableVirtualization) {\n        this.virtualizationModule.selectItem(item);\n      } else if (this.showCheckBox) {\n        this.setCheckboxLI(this.getLiFromObjOrElement(item));\n      } else {\n        if (isNullOrUndefined(item) === true) {\n          this.removeSelect();\n        } else {\n          this.setSelectLI(this.getLiFromObjOrElement(item));\n        }\n      }\n    }\n  }, {\n    key: \"getLiFromObjOrElement\",\n    value: function getLiFromObjOrElement(obj) {\n      var li;\n      var dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n      if (!isNullOrUndefined(obj)) {\n        if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n          if (obj instanceof Element) {\n            var uid = obj.getAttribute('data-uid').toString();\n\n            for (var i = 0; i < this.liCollection.length; i++) {\n              if (this.liCollection[i].getAttribute('data-uid').toString() === uid) {\n                li = this.liCollection[i];\n                break;\n              }\n            }\n          } else {\n            Array.prototype.some.call(this.curUL.querySelectorAll('.' + classNames.listItem), function (item) {\n              if (item.innerText.trim() === obj.toString()) {\n                li = item;\n                return true;\n              } else {\n                return false;\n              }\n            });\n          }\n        } else {\n          var resultJSON = this.getItemData(obj);\n          var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n          if (resultJSON) {\n            li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n            if (!this.enableVirtualization && isNullOrUndefined(li)) {\n              var curLi = this.element.querySelectorAll('.' + classNames.listItem);\n\n              for (var _i6 = 0; _i6 < curLi.length; _i6++) {\n                // eslint-disable-next-line\n                if (curLi[_i6].innerText.trim() === fieldData[this.fields.text]) {\n                  li = curLi[_i6];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return li;\n    }\n    /**\n     * Selects multiple list items from the ListView.\n     *\n     * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of\n     *  elements or array of fields Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"selectMultipleItems\",\n    value: function selectMultipleItems(item) {\n      if (!isNullOrUndefined(item)) {\n        for (var i = 0; i < item.length; i++) {\n          if (!isNullOrUndefined(item[i])) {\n            this.selectItem(item[i]);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getParentId\",\n    value: function getParentId() {\n      var parentId = [];\n\n      if (this.isNestedList) {\n        for (var i = this.curDSLevel.length - 1; i >= 0; i--) {\n          parentId.push(this.curDSLevel[i]);\n        }\n      }\n\n      return parentId;\n    }\n    /**\n     * Gets the details of the currently selected item from the list items.\n     *\n     */\n\n  }, {\n    key: \"getSelectedItems\",\n    value: function getSelectedItems() {\n      // eslint-disable-next-line\n      var finalValue;\n      var isCompleted = false;\n      this.selectedId = [];\n      var dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n      if (this.enableVirtualization && !isCompleted) {\n        finalValue = this.virtualizationModule.getSelectedItems();\n        isCompleted = true;\n      } else if (this.showCheckBox && !isCompleted) {\n        // eslint-disable-next-line\n        var liCollection = this.curUL.getElementsByClassName(classNames.selected);\n        var liTextCollection = [];\n        var liDataCollection = [];\n        this.selectedId = [];\n        var dataParent = [];\n\n        for (var i = 0; i < liCollection.length; i++) {\n          if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n            liTextCollection.push(liCollection[i].innerText.trim());\n          } else {\n            var tempData = this.getItemData(liCollection[i]);\n            var fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n\n            if (this.isNestedList) {\n              dataParent.push({\n                data: tempData,\n                parentId: this.getParentId()\n              });\n            } else {\n              liDataCollection.push(tempData);\n            }\n\n            if (fieldData) {\n              // eslint-disable-next-line\n              liTextCollection.push(fieldData[this.listBaseOption.fields.text]); // eslint-disable-next-line\n\n              this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n            } else {\n              liTextCollection.push(undefined);\n              this.selectedId.push(undefined);\n            }\n          }\n        }\n\n        if ((typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') && !isCompleted) {\n          finalValue = {\n            item: liCollection,\n            data: dataSource,\n            text: liTextCollection\n          };\n          isCompleted = true;\n        }\n\n        if (this.isNestedList && !isCompleted) {\n          finalValue = {\n            item: liCollection,\n            data: dataParent,\n            text: liTextCollection\n          };\n          isCompleted = true;\n        } else if (!isCompleted) {\n          finalValue = {\n            item: liCollection,\n            data: liDataCollection,\n            text: liTextCollection\n          };\n          isCompleted = true;\n        }\n      } else if (!isCompleted) {\n        var liElement = this.element.getElementsByClassName(classNames.selected)[0];\n\n        var _fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n\n        if ((typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') && !isCompleted) {\n          finalValue = !isNullOrUndefined(liElement) ? {\n            item: liElement,\n            data: dataSource,\n            text: liElement.innerText.trim()\n          } : undefined;\n          isCompleted = true;\n        } else if (!isCompleted) {\n          if (isNullOrUndefined(_fieldData) || isNullOrUndefined(liElement)) {\n            finalValue = undefined;\n            isCompleted = true;\n          } else {\n            // eslint-disable-next-line\n            this.selectedId.push(_fieldData[this.listBaseOption.fields.id]);\n            finalValue = {\n              text: _fieldData[this.listBaseOption.fields.text],\n              item: liElement,\n              data: this.getItemData(liElement)\n            };\n            isCompleted = true;\n          }\n        }\n      }\n\n      return finalValue;\n    }\n    /**\n     * Finds out an item details from the current list.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"findItem\",\n    value: function findItem(item) {\n      return this.getItemData(item);\n    }\n    /**\n     * Enables the disabled list items by passing the Id and text fields.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"enableItem\",\n    value: function enableItem(item) {\n      this.setItemState(item, true);\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.enableItem(item);\n      }\n    }\n    /**\n     * Disables the list items by passing the Id and text fields.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"disableItem\",\n    value: function disableItem(item) {\n      this.setItemState(item, false);\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.disableItem(item);\n      }\n    } //A function that used to set state of the list item like enable, disable.\n\n  }, {\n    key: \"setItemState\",\n    value: function setItemState(item, isEnable) {\n      var resultJSON = this.getItemData(item);\n      var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n      if (resultJSON) {\n        var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n        if (isEnable) {\n          if (li) {\n            li.classList.remove(classNames.disable);\n          }\n\n          delete resultJSON[this.fields.enabled];\n        } else if (!isEnable) {\n          if (li) {\n            li.classList.add(classNames.disable);\n          } // eslint-disable-next-line\n\n\n          resultJSON[this.fields.enabled] = false;\n        }\n      }\n    }\n    /**\n     * Shows the hide list item from the ListView.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"showItem\",\n    value: function showItem(item) {\n      this.showHideItem(item, false, '');\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.showItem(item);\n      }\n    }\n    /**\n     * Hides an list item from the ListView.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"hideItem\",\n    value: function hideItem(item) {\n      this.showHideItem(item, true, 'none');\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.hideItem(item);\n      }\n    }\n  }, {\n    key: \"showHideItem\",\n    value: function showHideItem(obj, isHide, display) {\n      var resultJSON = this.getItemData(obj);\n      var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n      if (resultJSON) {\n        var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n        if (li) {\n          li.style.display = display;\n        }\n\n        if (isHide) {\n          // eslint-disable-next-line\n          resultJSON[this.fields.isVisible] = false;\n        } else {\n          delete resultJSON[this.fields.isVisible];\n        }\n      }\n    }\n    /**\n     * Adds the new list item(s) to the current ListView.\n     * To add a new list item(s) in the ListView, we need to pass the `data` as an array of items that need\n     * to be added and `fields` as the target item to which we need to add the given item(s) as its children.\n     * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     *\n     * @param  {{Object}[]} data - JSON Array Data that need to add.\n     *\n     * @param  {Fields} fields - Target item to add the given data as its children (can be null).\n     *\n     */\n\n  }, {\n    key: \"addItem\",\n    value: function addItem(data) {\n      var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      var dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n      this.addItemInternally(data, fields, dataSource);\n    }\n  }, {\n    key: \"addItemInternally\",\n    value: function addItemInternally(data, fields, dataSource) {\n      if (data instanceof Array) {\n        if (this.enableVirtualization) {\n          this.virtualizationModule.addItem(data, fields, dataSource);\n        } else {\n          var ds = this.findItemFromDS(dataSource, fields);\n          var child;\n\n          if (ds) {\n            var fieldData = getFieldValues(ds, this.listBaseOption.fields);\n            child = fieldData[this.fields.child];\n\n            if (!child) {\n              child = [];\n            }\n\n            child = child.concat(data);\n          } // check for whether target is nested level or top level in list\n\n\n          if (ds instanceof Array) {\n            for (var i = 0; i < data.length; i++) {\n              dataSource.push(data[i]);\n              this.setViewDataSource(dataSource); // since it is top level target, get the content container's first child\n              // as it is always the top level UL\n\n              var targetUL = this.contentContainer ? this.contentContainer.children[0] : null; // check for whether the list was previously empty or not, if it is\n              // proceed to call initial render\n\n              if (this.contentContainer && targetUL) {\n                this.addItemIntoDom(data[i], targetUL, this.curViewDS);\n              } else {\n                this.reRender();\n              }\n            }\n\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n          } else {\n            // proceed as target item is in nested level, only if it is a valid target ds\n            if (ds) {\n              ds[this.fields.child] = child;\n              this.addItemInNestedList(ds, data);\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"addItemInNestedList\",\n    value: function addItemInNestedList(targetItemData, itemQueue) {\n      // eslint-disable-next-line\n      var targetItemId = targetItemData[this.fields.id];\n      var targetChildDS = targetItemData[this.fields.child];\n      var isAlreadyRenderedUL = this.element.querySelector('[pid=\\'' + targetItemId + '\\']');\n      var targetLi = this.element.querySelector('[data-uid=\\'' + targetItemId + '\\']');\n      var targetUL = isAlreadyRenderedUL ? isAlreadyRenderedUL : targetLi ? closest(targetLi, 'ul') : null;\n      var targetDS = isAlreadyRenderedUL ? targetChildDS : [targetItemData];\n      var isTargetEmptyChild = targetLi ? !targetLi.classList.contains(classNames.hasChild) : false;\n\n      if (isTargetEmptyChild) {\n        var targetRefreshedElement = ListBase.createListItemFromJson(this.createElement, targetDS, this.listBaseOption, null, null, this);\n        this.setAttributes(targetRefreshedElement);\n        targetUL.insertBefore(targetRefreshedElement[0], targetLi);\n        detach(targetLi);\n      } // if it is already rendered element, we need to create and append new elements\n\n\n      if (isAlreadyRenderedUL && itemQueue) {\n        for (var i = 0; i < itemQueue.length; i++) {\n          targetDS.push(itemQueue[i]);\n          this.addItemIntoDom(itemQueue[i], targetUL, targetDS);\n        }\n      }\n    }\n  }, {\n    key: \"addItemIntoDom\",\n    value: function addItemIntoDom(currentItem, targetUL, curViewDS) {\n      var index = curViewDS.indexOf(currentItem);\n      this.addListItem(currentItem, index, targetUL, curViewDS);\n      var curItemDS = curViewDS[index - 1];\n\n      if (curItemDS && curItemDS.isHeader && curItemDS.items.length === 1) {\n        this.addListItem(curItemDS, index - 1, targetUL, curViewDS);\n      }\n    }\n  }, {\n    key: \"addListItem\",\n    value: function addListItem(dataSource, index, ulElement, curViewDS) {\n      var target = this.getLiFromObjOrElement(curViewDS[index + 1]) || this.getLiFromObjOrElement(curViewDS[index + 2]) || null;\n      var li = ListBase.createListItemFromJson(this.createElement, [dataSource], this.listBaseOption, null, null, this);\n      this.setAttributes(li); // eslint-disable-next-line\n\n      if (this.template && this.isReact) {\n        this.renderReactTemplates();\n      }\n\n      if (this.fields.groupBy && curViewDS[index + 1] && curViewDS[index + 1].isHeader) {\n        var targetEle = this.getLiFromObjOrElement(curViewDS[index - 1]);\n\n        if (targetEle) {\n          target = targetEle.nextElementSibling;\n        }\n      }\n\n      ulElement.insertBefore(li[0], target);\n    }\n    /**\n     * Removes the list item from the data source based on a passed\n     *  element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(item) {\n      var listDataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.removeItem(item);\n      } else {\n        this.removeItemFromList(item, listDataSource);\n      }\n    }\n  }, {\n    key: \"removeItemFromList\",\n    value: function removeItemFromList(obj, listDataSource) {\n      var _this6 = this;\n\n      var curViewDS = this.curViewDS;\n      var fields = obj instanceof Element ? this.getElementUID(obj) : obj;\n      var dataSource; // eslint-disable-next-line prefer-const\n\n      dataSource = this.findItemFromDS(listDataSource, fields, true);\n\n      if (dataSource) {\n        var data; // eslint-disable-next-line prefer-const\n\n        data = this.findItemFromDS(dataSource, fields);\n        var index = curViewDS.indexOf(data);\n        var li = this.getLiFromObjOrElement(obj);\n        var groupLi;\n        this.validateNestedView(li);\n\n        if (this.fields.groupBy && this.curViewDS[index - 1] && curViewDS[index - 1].isHeader && curViewDS[index - 1].items.length === 1) {\n          if (li && li.previousElementSibling.classList.contains(classNames.groupListItem) && (isNullOrUndefined(li.nextElementSibling) || li.nextElementSibling && li.nextElementSibling.classList.contains(classNames.groupListItem))) {\n            groupLi = li.previousElementSibling;\n          }\n        }\n\n        if (li) {\n          detach(li);\n        }\n\n        if (groupLi) {\n          detach(groupLi);\n        } // eslint-disable-next-line\n\n\n        var foundData = dataSource.length - 1 <= 0 ? this.findParent(this.localData, this.fields.id, // eslint-disable-next-line\n        function (value) {\n          return value === data[_this6.fields.id];\n        }, null) : null;\n        var dsIndex = dataSource.indexOf(data);\n        dataSource.splice(dsIndex, 1);\n        this.setViewDataSource(listDataSource);\n\n        if (foundData && foundData.parent && Array.isArray(foundData.parent[this.fields.child]) && foundData.parent[this.fields.child].length <= 0) {\n          var parentLi = this.getLiFromObjOrElement(foundData.parent);\n\n          if (parentLi) {\n            var _li = ListBase.createListItemFromJson(this.createElement, [foundData.parent], this.listBaseOption, null, null, this);\n\n            this.setAttributes(_li);\n            parentLi.parentElement.insertBefore(_li[0], parentLi);\n            parentLi.parentElement.removeChild(parentLi);\n          }\n        }\n\n        if (dataSource.length <= 0) {\n          this.back();\n        }\n\n        this.liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n      }\n    } // validate before removing an element whether the current view is inside target element's child view\n\n  }, {\n    key: \"validateNestedView\",\n    value: function validateNestedView(li) {\n      var liID = li ? li.getAttribute('data-uid').toString().toLowerCase() : null;\n\n      if (liID && this.curDSLevel && this.curDSLevel.length > 0) {\n        while (this.curDSLevel.some(function (id) {\n          return id.toString().toLowerCase() === liID;\n        })) {\n          this.back();\n        }\n      }\n    }\n    /**\n     * Removes multiple items from the ListView by passing the array of elements or array of field objects.\n     *\n     * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n\n  }, {\n    key: \"removeMultipleItems\",\n    value: function removeMultipleItems(item) {\n      if (item.length) {\n        for (var i = 0; i < item.length; i++) {\n          this.removeItem(item[i]);\n        }\n      }\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"findParent\",\n    value: function findParent(dataSource, id, callback, parent) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (dataSource.hasOwnProperty(id) && callback(dataSource[id]) === true) {\n        return extend({}, dataSource);\n      }\n\n      for (var i = 0; i < Object.keys(dataSource).length; i++) {\n        if (dataSource[Object.keys(dataSource)[i]] && typeof dataSource[Object.keys(dataSource)[i]] === 'object') {\n          // eslint-disable-next-line\n          var result = this.findParent(dataSource[Object.keys(dataSource)[i]], id, callback, dataSource);\n\n          if (result != null) {\n            if (!result.parent) {\n              result.parent = parent;\n            }\n\n            return result;\n          }\n        }\n      }\n\n      return null;\n    } // Module Required function\n\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return 'listview';\n    }\n  }, {\n    key: \"requiredModules\",\n    value: function requiredModules() {\n      var modules = [];\n\n      if (this.enableVirtualization) {\n        modules.push({\n          args: [this],\n          member: 'virtualization'\n        });\n      }\n\n      return modules;\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     */\n\n  }, {\n    key: \"getPersistData\",\n    value: function getPersistData() {\n      return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes', 'enable', 'fields', 'animation', 'headerTitle', 'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition']);\n    }\n  }]);\n\n  return ListView;\n}(Component);\n\n__decorate([Property('')], ListView.prototype, \"cssClass\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"enableVirtualization\", void 0);\n\n__decorate([Property({})], ListView.prototype, \"htmlAttributes\", void 0);\n\n__decorate([Property(true)], ListView.prototype, \"enable\", void 0);\n\n__decorate([Property([])], ListView.prototype, \"dataSource\", void 0);\n\n__decorate([Property()], ListView.prototype, \"query\", void 0);\n\n__decorate([Complex(ListBase.defaultMappedFields, FieldSettings)], ListView.prototype, \"fields\", void 0);\n\n__decorate([Property({\n  effect: 'SlideLeft',\n  duration: 400,\n  easing: 'ease'\n})], ListView.prototype, \"animation\", void 0);\n\n__decorate([Property('None')], ListView.prototype, \"sortOrder\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"showIcon\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"showCheckBox\", void 0);\n\n__decorate([Property('Left')], ListView.prototype, \"checkBoxPosition\", void 0);\n\n__decorate([Property('')], ListView.prototype, \"headerTitle\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"showHeader\", void 0);\n\n__decorate([Property(false)], ListView.prototype, \"enableHtmlSanitizer\", void 0);\n\n__decorate([Property('')], ListView.prototype, \"height\", void 0);\n\n__decorate([Property('')], ListView.prototype, \"width\", void 0);\n\n__decorate([Property(null)], ListView.prototype, \"template\", void 0);\n\n__decorate([Property(null)], ListView.prototype, \"headerTemplate\", void 0);\n\n__decorate([Property(null)], ListView.prototype, \"groupTemplate\", void 0);\n\n__decorate([Event()], ListView.prototype, \"select\", void 0);\n\n__decorate([Event()], ListView.prototype, \"actionBegin\", void 0);\n\n__decorate([Event()], ListView.prototype, \"actionComplete\", void 0);\n\n__decorate([Event()], ListView.prototype, \"actionFailure\", void 0);\n\nListView = __decorate([NotifyPropertyChanges], ListView);\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\n\nvar Virtualization = /*#__PURE__*/function () {\n  function Virtualization(instance) {\n    _classCallCheck(this, Virtualization);\n\n    this.elementDifference = 0;\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n\n\n  _createClass(Virtualization, [{\n    key: \"isNgTemplate\",\n    value: function isNgTemplate() {\n      return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"uiVirtualization\",\n    value: function uiVirtualization() {\n      this.wireScrollEvent(false);\n      var curViewDS = this.listViewInstance.curViewDS;\n      var firstDs = curViewDS.slice(0, 1);\n      this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList( // eslint-disable-next-line\n      this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n      this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n        className: classNames.content\n      });\n      this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n      this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n      this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n      this.expectedDomItemCount = this.ValidateItemCount(10000);\n      this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n      this.uiFirstIndex = 0;\n      this.uiLastIndex = this.domItemCount - 1;\n      var otherDs = curViewDS.slice(1, this.domItemCount);\n      var listItems = ListBase.createListItemFromJson( // eslint-disable-next-line\n      this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n      append(listItems, this.listViewInstance.ulElement);\n      this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n      this.topElement = this.listViewInstance.createElement('div');\n      this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n      this.bottomElement = this.listViewInstance.createElement('div');\n      this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.topElement.style.height = 0 + 'px';\n      this.bottomElement.style.height = this.totalHeight + 'px';\n      this.topElementHeight = 0;\n      this.bottomElementHeight = this.totalHeight;\n      this.listDiff = 0;\n      this.uiIndicesInitialization();\n    }\n  }, {\n    key: \"wireScrollEvent\",\n    value: function wireScrollEvent(destroy) {\n      if (!destroy) {\n        if (this.listViewInstance.isWindow) {\n          this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n          window.addEventListener('scroll', this.onVirtualScroll);\n        } else {\n          EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n        }\n      } else {\n        if (this.listViewInstance.isWindow === true) {\n          window.removeEventListener('scroll', this.onVirtualScroll);\n          window.removeEventListener('scroll', this.updateUl);\n        } else {\n          EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n          EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n        }\n      }\n    }\n  }, {\n    key: \"updateUlContainer\",\n    value: function updateUlContainer(e) {\n      var listDiff;\n      var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n\n      if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n        this.listViewInstance.updateLiElementHeight();\n      }\n\n      if (this.listViewInstance.isWindow) {\n        // eslint-disable-next-line\n        listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n      } else {\n        // eslint-disable-next-line\n        listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n      }\n\n      if ((listDiff - 1) * this.listViewInstance.liElementHeight < 0) {\n        virtualElementContainer.style.top = '0px';\n      } else {\n        virtualElementContainer.style.top = listDiff * this.listViewInstance.liElementHeight + 'px';\n      }\n    }\n  }, {\n    key: \"ValidateItemCount\",\n    value: function ValidateItemCount(dataSourceLength) {\n      var height = parseFloat(formatUnit(this.listViewInstance.height));\n      var itemCount;\n\n      if (this.listViewInstance.isWindow) {\n        itemCount = Math.round(window.innerHeight / this.listItemHeight * windowElementCount);\n      } else {\n        if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n          // eslint-disable-next-line max-len\n          itemCount = Math.round(this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight * listElementCount);\n        } else {\n          itemCount = Math.round(height / this.listItemHeight * listElementCount);\n        }\n      }\n\n      if (itemCount > dataSourceLength) {\n        itemCount = dataSourceLength;\n      }\n\n      return itemCount;\n    }\n  }, {\n    key: \"uiIndicesInitialization\",\n    value: function uiIndicesInitialization() {\n      this.uiIndices = {\n        'activeIndices': [],\n        'disabledItemIndices': [],\n        'hiddenItemIndices': []\n      };\n      var data = this.listViewInstance.curViewDS;\n\n      for (var i = 0; i < data.length; i++) {\n        if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n          this.uiIndices.activeIndices.push(i);\n        } // eslint-disable-next-line\n\n\n        if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n          // eslint-disable-next-line\n          this.uiIndices.disabledItemIndices.push(i);\n        }\n      }\n\n      if (this.isNgTemplate()) {\n        var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n\n        for (var index = 0; index < items.length; index++) {\n          items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n        }\n      }\n    }\n  }, {\n    key: \"refreshItemHeight\",\n    value: function refreshItemHeight() {\n      if (this.listViewInstance.curViewDS.length) {\n        var curViewDS = this.listViewInstance.curViewDS;\n        this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n        this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n        this.bottomElementHeight = this.totalHeight;\n        this.bottomElement.style.height = this.totalHeight + 'px';\n      }\n    }\n  }, {\n    key: \"getscrollerHeight\",\n    value: function getscrollerHeight(startingHeight) {\n      return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n    }\n  }, {\n    key: \"onVirtualUiScroll\",\n    value: function onVirtualUiScroll(e) {\n      var startingHeight;\n\n      if (this.listViewInstance.isWindow) {\n        startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n      } else {\n        startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n      }\n\n      this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n      var scroll = this.getscrollerHeight(startingHeight);\n      this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n      this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n\n      var _ref = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0];\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      this.topElementHeight = _ref2[0];\n      this.bottomElementHeight = _ref2[1];\n\n      if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n        this.topElement.style.height = this.topElementHeight + 'px';\n        this.bottomElement.style.height = this.bottomElementHeight + 'px';\n\n        if (scroll > this.scrollPosition) {\n          var listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n\n          if (listDiff > this.expectedDomItemCount + 5) {\n            this.onLongScroll(listDiff, true);\n          } else {\n            this.onNormalScroll(listDiff, true);\n          }\n        } else {\n          var _listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n\n          if (_listDiff > this.expectedDomItemCount + 5) {\n            this.onLongScroll(_listDiff, false);\n          } else {\n            this.onNormalScroll(_listDiff, false);\n          }\n        }\n      }\n\n      this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n\n      if (typeof this.listViewInstance.onUIScrolled === 'function') {\n        this.listViewInstance.onUIScrolled();\n      }\n\n      this.scrollPosition = scroll;\n    }\n  }, {\n    key: \"onLongScroll\",\n    value: function onLongScroll(listDiff, isScrollingDown) {\n      var index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n      var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n\n      for (var i = 0; i < elements.length; i++) {\n        this.updateUI(elements[i], index);\n        index++;\n      }\n\n      this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n      this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    }\n  }, {\n    key: \"onNormalScroll\",\n    value: function onNormalScroll(listDiff, isScrollingDown) {\n      if (isScrollingDown) {\n        for (var i = 0; i < listDiff; i++) {\n          var index = ++this.uiLastIndex;\n          this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n          this.uiFirstIndex++;\n        }\n      } else {\n        for (var _i7 = 0; _i7 < listDiff; _i7++) {\n          var _index = --this.uiFirstIndex;\n\n          var target = this.topElement.nextSibling;\n          this.updateUI(this.bottomElement.previousElementSibling, _index, target);\n          this.uiLastIndex--;\n        }\n      }\n    }\n  }, {\n    key: \"updateUiContent\",\n    value: function updateUiContent(element, index) {\n      var curViewDs = this.listViewInstance.curViewDS;\n\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        element.dataset.uid = ListBase.generateId();\n        element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n      } else {\n        // eslint-disable-next-line\n        element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ? // eslint-disable-next-line\n        curViewDs[index][this.listViewInstance.fields.id] : ListBase.generateId();\n        element.getElementsByClassName(classNames.listItemText)[0].innerHTML = // eslint-disable-next-line\n        curViewDs[index][this.listViewInstance.fields.text];\n      }\n\n      if (this.listViewInstance.showIcon) {\n        if (element.querySelector('.' + classNames.listIcon)) {\n          detach(element.querySelector('.' + classNames.listIcon));\n        }\n\n        if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n          var textContent = element.querySelector('.' + classNames.textContent);\n          var target = this.listViewInstance.createElement('div', {\n            className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n          });\n          textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n        }\n      }\n\n      if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n        if (!this.checkListWrapper) {\n          this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n        }\n\n        var _textContent = element.querySelector('.' + classNames.textContent);\n\n        if (this.listViewInstance.curViewDS[index].isHeader) {\n          if (element.querySelector('.' + classNames.checkboxWrapper)) {\n            element.classList.remove(classNames.checklist);\n\n            _textContent.classList.remove(classNames.checkbox);\n\n            detach(element.querySelector('.' + classNames.checkboxWrapper));\n          }\n        } else {\n          if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n            element.classList.add(classNames.checklist);\n\n            _textContent.classList.add(classNames.checkbox);\n\n            _textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n          }\n        }\n      }\n    }\n  }, {\n    key: \"changeElementAttributes\",\n    value: function changeElementAttributes(element, index) {\n      element.classList.remove(classNames.disable);\n\n      if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n        element.classList.add(classNames.disable);\n      }\n\n      element.style.display = '';\n\n      if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n        element.style.display = 'none';\n      }\n\n      if (this.listViewInstance.showCheckBox) {\n        var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n        element.classList.remove(classNames.selected);\n        element.classList.remove(classNames.focused);\n\n        if (checklistElement) {\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n        }\n\n        if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n          element.classList.add(classNames.selected);\n          checklistElement.firstElementChild.classList.add(classNames.checked);\n          checklistElement.setAttribute('aria-checked', 'true');\n\n          if (this.activeIndex === index) {\n            element.classList.add(classNames.focused);\n          }\n        }\n      } else {\n        element.classList.remove(classNames.selected);\n        element.removeAttribute('aria-selected');\n\n        if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n          element.classList.add(classNames.selected);\n          element.setAttribute('aria-selected', 'true');\n        }\n      }\n\n      if (this.listViewInstance.fields.groupBy) {\n        if (this.listViewInstance.curViewDS[index].isHeader) {\n          if (element.classList.contains(classNames.listItem)) {\n            element.classList.remove(classNames.listItem);\n            element.setAttribute('role', 'group');\n            element.classList.add(classNames.groupListItem);\n          }\n        } else {\n          if (element.classList.contains(classNames.groupListItem)) {\n            element.classList.remove(classNames.groupListItem);\n            element.setAttribute('role', 'listitem');\n            element.classList.add(classNames.listItem);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"findDSAndIndexFromId\",\n    value: function findDSAndIndexFromId(ds, fields) {\n      var _this7 = this;\n\n      var resultJSON = {};\n      fields = this.listViewInstance.getElementUID(fields);\n\n      if (!isNullOrUndefined(fields)) {\n        ds.some(function (data, index) {\n          if (fields[_this7.listViewInstance.fields.id] && // eslint-disable-next-line\n          fields[_this7.listViewInstance.fields.id] // eslint-disable-next-line\n          === (data[_this7.listViewInstance.fields.id] && data[_this7.listViewInstance.fields.id]) || fields === data) {\n            resultJSON.index = index;\n            resultJSON.data = data;\n            return true;\n          } else {\n            return false;\n          }\n        });\n      }\n\n      return resultJSON;\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function getSelectedItems() {\n      var _this8 = this;\n\n      if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n        var dataCollection = [];\n        var textCollection = [];\n\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          var curViewDS = this.listViewInstance.curViewDS;\n\n          if (this.listViewInstance.showCheckBox) {\n            var indices = this.uiIndices.activeIndices;\n\n            for (var i = 0; i < indices.length; i++) {\n              dataCollection.push(curViewDS[indices[i]]);\n            }\n\n            return {\n              text: dataCollection,\n              // eslint-disable-next-line\n              data: dataCollection,\n              index: this.uiIndices.activeIndices.map(function (index) {\n                return _this8.listViewInstance.dataSource.indexOf(curViewDS[index]);\n              })\n            };\n          } else {\n            return {\n              text: curViewDS[this.activeIndex],\n              data: curViewDS[this.activeIndex],\n              index: this.listViewInstance.dataSource.indexOf(curViewDS[this.activeIndex])\n            };\n          }\n        } else {\n          var _curViewDS = this.listViewInstance.curViewDS;\n          var text = this.listViewInstance.fields.text;\n\n          if (this.listViewInstance.showCheckBox) {\n            var indexArray = this.uiIndices.activeIndices;\n\n            for (var _i8 = 0; _i8 < indexArray.length; _i8++) {\n              textCollection.push(_curViewDS[indexArray[_i8]][text]);\n              dataCollection.push(_curViewDS[indexArray[_i8]]);\n            }\n\n            var dataSource = this.listViewInstance.dataSource instanceof DataManager ? _curViewDS : this.listViewInstance.dataSource;\n            return {\n              text: textCollection,\n              // eslint-disable-next-line\n              data: dataCollection,\n              index: this.uiIndices.activeIndices.map(function (index) {\n                return dataSource.indexOf(_curViewDS[index]);\n              })\n            };\n          } else {\n            var _dataSource = this.listViewInstance.dataSource instanceof DataManager ? _curViewDS : this.listViewInstance.dataSource;\n\n            return {\n              text: _curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n              // eslint-disable-next-line\n              data: _curViewDS[this.activeIndex],\n              index: _dataSource.indexOf(_curViewDS[this.activeIndex])\n            };\n          }\n        }\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(obj) {\n      var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n      if (Object.keys(resutJSON).length) {\n        var isSelected = this.activeIndex === resutJSON.index;\n        var isChecked;\n        this.activeIndex = resutJSON.index;\n\n        if (this.listViewInstance.showCheckBox) {\n          if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n            isChecked = true;\n            this.uiIndices.activeIndices.push(resutJSON.index);\n          } else {\n            isChecked = false;\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n          }\n\n          if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n            this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n          }\n        }\n\n        if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n          if (this.listViewInstance.showCheckBox) {\n            this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n          } else {\n            this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n          }\n        } else {\n          var eventArgs;\n\n          if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n            eventArgs = {\n              text: this.listViewInstance.curViewDS[this.activeIndex],\n              data: this.listViewInstance.curViewDS[this.activeIndex],\n              index: this.activeIndex\n            };\n          } else {\n            var curViewDS = this.listViewInstance.curViewDS;\n            eventArgs = {\n              text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n              data: curViewDS[this.activeIndex],\n              index: this.activeIndex\n            };\n          }\n\n          if (this.listViewInstance.showCheckBox) {\n            eventArgs.isChecked = isChecked;\n            this.listViewInstance.trigger('select', eventArgs);\n          } else if (!isSelected) {\n            this.listViewInstance.removeSelect();\n            this.listViewInstance.trigger('select', eventArgs);\n          }\n        }\n      } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n        this.listViewInstance.removeSelect();\n        this.activeIndex = undefined;\n      }\n    }\n  }, {\n    key: \"enableItem\",\n    value: function enableItem(obj) {\n      var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n      if (Object.keys(resutJSON).length) {\n        this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n      }\n    }\n  }, {\n    key: \"disableItem\",\n    value: function disableItem(obj) {\n      var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n      if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n        this.uiIndices.disabledItemIndices.push(resutJSON.index);\n      }\n    }\n  }, {\n    key: \"showItem\",\n    value: function showItem(obj) {\n      var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n      if (Object.keys(resutJSON).length) {\n        this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n      }\n    }\n  }, {\n    key: \"hideItem\",\n    value: function hideItem(obj) {\n      var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n      if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n        this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n      }\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(obj) {\n      var dataSource;\n      var curViewDS = this.listViewInstance.curViewDS;\n      var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n\n      if (Object.keys(resutJSON).length) {\n        dataSource = resutJSON.data;\n\n        if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n          this.removeUiItem(resutJSON.index - 1);\n          this.removeUiItem(resutJSON.index - 1);\n        } else {\n          this.removeUiItem(resutJSON.index);\n        }\n      }\n\n      var listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n      var index = listDataSource.indexOf(dataSource);\n\n      if (index !== -1) {\n        listDataSource.splice(index, 1);\n        this.listViewInstance.setViewDataSource(listDataSource);\n      } // recollect all the list item into collection\n\n\n      this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"setCheckboxLI\",\n    value: function setCheckboxLI(li, e) {\n      var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n      this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n\n      if (li.classList.contains(classNames.selected)) {\n        if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n          this.uiIndices.activeIndices.push(index);\n        }\n      } else {\n        this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n      }\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"setSelectLI\",\n    value: function setSelectLI(li, e) {\n      this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    }\n  }, {\n    key: \"checkedItem\",\n    value: function checkedItem(checked) {\n      if (checked) {\n        this.uiIndices.activeIndices = [];\n        this.activeIndex = undefined;\n        var data = this.listViewInstance.curViewDS;\n\n        for (var index = 0; index < data.length; index++) {\n          if (!data[index].isHeader) {\n            this.uiIndices.activeIndices.push(index);\n          }\n        }\n      } else {\n        this.activeIndex = undefined;\n        this.uiIndices.activeIndices = [];\n      }\n    }\n  }, {\n    key: \"addUiItem\",\n    value: function addUiItem(index) {\n      // virtually new add list item based on the scollbar position\n      // if the scroll bar is at the top, just pretend the new item has been added since no UI\n      // change is required for the item that has been added at last but when scroll bar is at the bottom\n      // just detach top and inject into bottom to mimic new item is added\n      var curViewDs = this.listViewInstance.curViewDS;\n      this.changeUiIndices(index, true);\n\n      if (this.activeIndex && this.activeIndex >= index) {\n        this.activeIndex++;\n      }\n\n      if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n        this.uiIndices.activeIndices.push(index);\n      }\n\n      if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n      }\n\n      if (parseFloat(this.bottomElement.style.height)) {\n        var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n        var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n\n        if (target) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n          this.updateUI(liItem, index, target);\n        }\n      } else {\n        var _liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n\n        var _target;\n\n        if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n          _target = this.listViewInstance.curUL.lastElementChild;\n        } else {\n          _target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n        }\n\n        this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n        this.uiFirstIndex++;\n        this.uiLastIndex++;\n\n        if (_target) {\n          this.updateUI(_liItem, index, _target);\n\n          if (this.listViewInstance.isWindow === true) {\n            window.scrollTo(0, pageYOffset + this.listItemHeight);\n          } else {\n            this.listViewInstance.element.scrollTop += this.listItemHeight;\n          }\n        }\n      }\n\n      this.totalHeight += this.listItemHeight;\n      this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    }\n  }, {\n    key: \"removeUiItem\",\n    value: function removeUiItem(index) {\n      this.totalHeight -= this.listItemHeight;\n      var curViewDS = this.listViewInstance.curViewDS[index];\n      var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n      this.listViewInstance.curViewDS.splice(index, 1);\n\n      if (this.activeIndex && this.activeIndex >= index) {\n        this.activeIndex--;\n      }\n\n      if (liItem) {\n        if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n          detach(liItem);\n          this.domItemCount--;\n          this.uiLastIndex--;\n          this.totalHeight = 0;\n        } else {\n          if (liItem.classList.contains(classNames.disable)) {\n            liItem.classList.remove(classNames.disable);\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n          }\n\n          if (liItem.style.display === 'none') {\n            liItem.style.display = '';\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n          }\n\n          if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n            this.listViewInstance.removeSelect();\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n            var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n            checklistElement.removeAttribute('aria-checked');\n            checklistElement.firstElementChild.classList.remove(classNames.checked);\n\n            if (liItem.classList.contains(classNames.focused)) {\n              liItem.classList.remove(classNames.focused);\n              this.activeIndex = undefined;\n            }\n          } else if (liItem.classList.contains(classNames.selected)) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n          }\n\n          if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n          } else if (parseFloat(this.bottomElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n            this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n          } else {\n            this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n            this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n            this.uiLastIndex--;\n            this.uiFirstIndex--;\n          }\n        }\n      }\n\n      this.changeUiIndices(index, false);\n      this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    }\n  }, {\n    key: \"changeUiIndices\",\n    value: function changeUiIndices(index, increment) {\n      var keys = Object.keys(this.uiIndices);\n\n      for (var ind = 0; ind < keys.length; ind++) {\n        this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n          if (i >= index) {\n            return increment ? ++i : --i;\n          } else {\n            return i;\n          }\n        });\n      }\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem(data, fields, dataSource) {\n      for (var i = 0; i < data.length; i++) {\n        var currentItem = data[i]; // push the given data to main data array\n\n        dataSource.push(currentItem); // recalculate all the group data or other datasource related things\n\n        this.listViewInstance.setViewDataSource(dataSource); // render list items for first time due to no datasource present earlier\n\n        if (!this.domItemCount) {\n          // fresh rendering for first time\n          if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n            this.listViewInstance.listBaseOption.template = null;\n            this.listViewInstance.listBaseOption.groupTemplate = null;\n            this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n          }\n\n          this.uiVirtualization(); // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n        } else if (this.domItemCount < this.expectedDomItemCount) {\n          var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n\n          if (ds instanceof Array) {\n            if (this.listViewInstance.ulElement) {\n              var index = this.listViewInstance.curViewDS.indexOf(currentItem); // inject new list item into DOM\n\n              this.createAndInjectNewItem(currentItem, index); // check for group header item\n\n              var curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n              if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                // target group item index in datasource\n                --index; // inject new group header into DOM for previously created list item\n\n                this.createAndInjectNewItem(curViewDS, index);\n              }\n            } // recollect all the list item into collection\n\n\n            this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n          }\n        } else {\n          var _index2 = this.listViewInstance.curViewDS.indexOf(currentItem); // virtually new add list item based on the scollbar position\n\n\n          this.addUiItem(_index2); // check for group header item needs to be added\n\n          var _curViewDS2 = this.listViewInstance.curViewDS[_index2 - 1];\n\n          if (_curViewDS2 && _curViewDS2.isHeader && _curViewDS2.items.length === 1) {\n            this.addUiItem(_index2 - 1);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"createAndInjectNewItem\",\n    value: function createAndInjectNewItem(itemData, index) {\n      // generate li item for given datasource\n      var target;\n      var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, // eslint-disable-next-line\n      [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance); // check for target element whether to insert before last item or group item\n\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        // target group header's first child item to append its header\n        target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n      }\n\n      if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n        var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n\n        if (targetEle) {\n          target = targetEle.nextElementSibling;\n        }\n      } // insert before the target element\n\n\n      this.listViewInstance.ulElement.insertBefore(li[0], target); // increment internal DOM count, last index count for new element\n\n      this.domItemCount++;\n\n      if (this.bottomElementHeight <= 0) {\n        this.uiLastIndex++;\n      } // recalculate the current item height, to avoid jumpy scroller\n\n\n      this.refreshItemHeight();\n    }\n  }, {\n    key: \"createUIItem\",\n    value: function createUIItem(args) {\n      var virtualTemplate = this.listViewInstance.template;\n      var template = this.listViewInstance.createElement('div');\n      var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n\n      if (this.listViewInstance.isReact) {\n        commonTemplate = null;\n      }\n\n      if (this.listViewInstance.showCheckBox) {\n        // eslint-disable-next-line\n        this.listViewInstance.renderCheckbox(args);\n\n        if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox) && !isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n          var div = document.createElement('div');\n          div.innerHTML = this.listViewInstance.template || commonTemplate;\n\n          if (div.children && div.children[0]) {\n            div.children[0].classList.add('e-checkbox');\n\n            if (this.listViewInstance.checkBoxPosition === 'Left') {\n              div.children[0].classList.add('e-checkbox-left');\n            } else {\n              div.children[0].classList.add('e-checkbox-right');\n            }\n\n            if (this.listViewInstance.checkBoxPosition === 'Left') {\n              div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n            } else {\n              div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n            }\n\n            this.listViewInstance.template = div.innerHTML;\n          }\n        }\n\n        template.innerHTML = this.listViewInstance.template;\n        this.listViewInstance.template = virtualTemplate;\n      } else {\n        template.innerHTML = this.listViewInstance.template || commonTemplate;\n      } // eslint-disable-next-line\n\n\n      var templateElements = template.getElementsByTagName('*');\n      var groupTemplate = this.listViewInstance.createElement('div');\n\n      if (this.listViewInstance.fields.groupBy) {\n        groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n      } // eslint-disable-next-line\n\n\n      var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n\n      if (args.curData.isHeader) {\n        this.headerData = args.curData;\n      }\n\n      this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n\n      if (!this.listViewInstance.isReact || typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\") || typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\")) {\n        args.item.innerHTML = '';\n      }\n\n      args.item.context = {\n        data: args.curData,\n        nodes: {\n          flatTemplateNodes: [],\n          groupTemplateNodes: []\n        }\n      };\n\n      for (var i = 0; i < templateElements.length; i++) {\n        this.compileTemplate(templateElements[i], args.item, false);\n      }\n\n      for (var _i9 = 0; _i9 < groupTemplateElements.length; _i9++) {\n        this.compileTemplate(groupTemplateElements[_i9], args.item, true);\n      }\n\n      args.item.context.template = args.curData.isHeader ? template.firstElementChild : groupTemplate.firstElementChild;\n      args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n      var element = args.curData.isHeader ? groupTemplate : template;\n\n      if (element.firstElementChild) {\n        args.item.insertBefore(element.firstElementChild, null);\n      }\n    }\n  }, {\n    key: \"compileTemplate\",\n    value: function compileTemplate(element, item, isHeader) {\n      this.textProperty(element, item, isHeader);\n      this.classProperty(element, item, isHeader);\n      this.attributeProperty(element, item, isHeader);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(newData, listElement) {\n      listElement.context.data = newData; // eslint-disable-next-line max-len\n\n      var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes; // eslint-disable-next-line max-len\n\n      var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes; // eslint-disable-next-line\n\n      if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n        // eslint-disable-next-line\n        var element = listElement.firstElementChild;\n        detach(listElement.firstElementChild);\n        listElement.insertBefore(listElement.context.template, null);\n        listElement.context.template = element;\n        listElement.context.type = 'flatList';\n\n        for (var i = 0; i < groupTemplateNodes.length; i++) {\n          // eslint-disable-next-line\n          groupTemplateNodes[i].onChange(newData);\n        }\n      } else if (!newData.isHeader && listElement.context.type === 'flatList') {\n        var _element2 = listElement.firstElementChild;\n        detach(listElement.firstElementChild);\n        listElement.insertBefore(listElement.context.template, null);\n        listElement.context.template = _element2;\n        listElement.context.type = 'groupList';\n\n        for (var _i10 = 0; _i10 < flatTemplateNodes.length; _i10++) {\n          // eslint-disable-next-line\n          flatTemplateNodes[_i10].onChange(newData);\n        }\n      } else if (!newData.isHeader) {\n        for (var _i11 = 0; _i11 < flatTemplateNodes.length; _i11++) {\n          // eslint-disable-next-line\n          flatTemplateNodes[_i11].onChange(newData);\n        }\n      } else {\n        for (var _i12 = 0; _i12 < groupTemplateNodes.length; _i12++) {\n          // eslint-disable-next-line\n          groupTemplateNodes[_i12].onChange(newData);\n        }\n      }\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"updateContextData\",\n    value: function updateContextData(listElement, node, isHeader) {\n      if (isHeader) {\n        listElement.context.nodes.groupTemplateNodes.push(node);\n      } else {\n        listElement.context.nodes.flatTemplateNodes.push(node);\n      }\n    }\n  }, {\n    key: \"classProperty\",\n    value: function classProperty(element, listElement, isHeader) {\n      var _this9 = this;\n\n      var regex = new RegExp('\\\\${([^}]*)}', 'g');\n      var resultantOutput = [];\n      var regexMatch;\n\n      while (regexMatch !== null) {\n        var match = regex.exec(element.className);\n        resultantOutput.push(match);\n        regexMatch = match;\n\n        if (regexMatch === null) {\n          resultantOutput.pop();\n        }\n      }\n\n      if (resultantOutput && resultantOutput.length) {\n        var _loop = function _loop(i) {\n          var classNameMatch = resultantOutput[i]; // eslint-disable-next-line\n\n          var classFunction = void 0;\n\n          if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n          } else {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n          } // eslint-disable-next-line\n\n\n          var subNode = {};\n\n          if (isHeader) {\n            subNode.bindedvalue = classFunction(_this9.headerData);\n          } else {\n            subNode.bindedvalue = classFunction(_this9.templateData);\n          }\n\n          subNode.onChange = function (value) {\n            if (subNode.bindedvalue) {\n              removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n                return css;\n              }));\n            }\n\n            var newCss = classFunction(value);\n\n            if (newCss) {\n              addClass([element], newCss.split(' ').filter(function (css) {\n                return css;\n              }));\n            }\n\n            subNode.bindedvalue = newCss;\n          };\n\n          var className = classNameMatch[0].split(' ');\n\n          for (var _i13 = 0; _i13 < className.length; _i13++) {\n            element.classList.remove(className[_i13]);\n          }\n\n          if (subNode.bindedvalue) {\n            addClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          _this9.updateContextData(listElement, subNode, isHeader);\n        };\n\n        for (var i = 0; i < resultantOutput.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }, {\n    key: \"attributeProperty\",\n    value: function attributeProperty(element, listElement, isHeader) {\n      var _this10 = this;\n\n      var attributeNames = [];\n\n      for (var i = 0; i < element.attributes.length; i++) {\n        attributeNames.push(element.attributes[i].nodeName);\n      }\n\n      if (attributeNames.indexOf('class') !== -1) {\n        attributeNames.splice(attributeNames.indexOf('class'), 1);\n      }\n\n      var _loop2 = function _loop2(_i14) {\n        var attributeName = attributeNames[_i14];\n        var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n        var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName)) || []; // eslint-disable-next-line\n\n        var attributeNameFunction = void 0; // eslint-disable-next-line\n\n        var attributeValueFunction = void 0;\n\n        if (attrNameMatch.length || attrValueMatch.length) {\n          if (attrNameMatch[1]) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n          }\n\n          if (attrValueMatch[1]) {\n            if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n              // tslint:disable-next-line:no-function-constructor-with-string-args\n              attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n            } else {\n              // tslint:disable-next-line:no-function-constructor-with-string-args\n              attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n            }\n          } // eslint-disable-next-line @typescript-eslint/ban-types\n\n\n          var subNode = {};\n\n          if (isHeader) {\n            subNode.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(_this10.headerData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(_this10.headerData)];\n          } else {\n            subNode.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(_this10.templateData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(_this10.templateData)];\n          }\n\n          subNode.attrName = subNode.bindedvalue[0] === undefined ? attributeName : subNode.bindedvalue[0];\n\n          subNode.onChange = function (value) {\n            var bindedvalue = subNode.bindedvalue[1] === undefined ? element.getAttribute(subNode.attrName) : attributeValueFunction(value);\n            element.removeAttribute(subNode.attrName);\n            subNode.attrName = subNode.bindedvalue[0] === undefined ? subNode.attrName : attributeNameFunction(value);\n            element.setAttribute(subNode.attrName, bindedvalue);\n            subNode.bindedvalue = [subNode.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value), subNode.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n          };\n\n          var attributeValue = subNode.bindedvalue[1] === undefined ? element.getAttribute(attributeName) : subNode.bindedvalue[1];\n          element.removeAttribute(attributeName);\n          element.setAttribute(subNode.attrName, attributeValue);\n\n          _this10.updateContextData(listElement, subNode, isHeader);\n        }\n      };\n\n      for (var _i14 = 0; _i14 < attributeNames.length; _i14++) {\n        _loop2(_i14);\n      }\n    }\n  }, {\n    key: \"textProperty\",\n    value: function textProperty(element, listElement, isHeader) {\n      var _this11 = this;\n\n      var regex = new RegExp('\\\\${([^}]*)}', 'g');\n      var resultantOutput = [];\n      var regexMatch;\n\n      while (regexMatch !== null) {\n        var match = regex.exec(element.innerText);\n        resultantOutput.push(match);\n        regexMatch = match;\n\n        if (regexMatch === null) {\n          resultantOutput.pop();\n        }\n      }\n\n      var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n        if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n\n      if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n        var _loop3 = function _loop3(i) {\n          var textPropertyMatch = resultantOutput[i]; // eslint-disable-next-line\n\n          var subNode = {}; // eslint-disable-next-line\n\n          var textFunction = void 0;\n\n          if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n          } else {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n          }\n\n          if (isHeader) {\n            subNode.bindedvalue = textFunction(_this11.headerData);\n          } else {\n            subNode.bindedvalue = textFunction(_this11.templateData);\n          }\n\n          subNode.onChange = function (value) {\n            element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n            subNode.bindedvalue = textFunction(value);\n          };\n\n          element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n\n          _this11.updateContextData(listElement, subNode, isHeader);\n        };\n\n        for (var i = 0; i < resultantOutput.length; i++) {\n          _loop3(i);\n        }\n      }\n    }\n  }, {\n    key: \"reRenderUiVirtualization\",\n    value: function reRenderUiVirtualization() {\n      this.wireScrollEvent(true);\n\n      if (this.listViewInstance.contentContainer) {\n        detach(this.listViewInstance.contentContainer);\n      }\n\n      this.listViewInstance.preRender(); // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n      // and then manually adding item using addItem API\n\n      this.domItemCount = 0;\n      this.listViewInstance.header();\n      this.listViewInstance.setLocalData();\n    }\n  }, {\n    key: \"updateUI\",\n    value: function updateUI(element, index, targetElement) {\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n\n      if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n        var curViewDS = this.listViewInstance.curViewDS[index]; // eslint-disable-next-line\n\n        element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ? // eslint-disable-next-line\n        curViewDS[this.listViewInstance.fields.id] : ListBase.generateId();\n        onChange(curViewDS, element, this);\n      } else {\n        this.updateUiContent(element, index);\n      }\n\n      this.changeElementAttributes(element, index);\n\n      if (targetElement) {\n        this.listViewInstance.ulElement.insertBefore(element, targetElement);\n      }\n    }\n  }, {\n    key: \"onNgChange\",\n    value: function onNgChange(newData, listElement, virtualThis) {\n      // compile given target element with template for new data\n      // eslint-disable-next-line\n      var templateCompiler = compile(virtualThis.listViewInstance.template);\n      var resultElement = templateCompiler(newData);\n\n      while (listElement.lastChild) {\n        listElement.removeChild(listElement.lastChild);\n      }\n\n      listElement.appendChild(resultElement[0]);\n    }\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return 'virtualization';\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.wireScrollEvent(true);\n    }\n  }]);\n\n  return Virtualization;\n}();\n/**\n * Listview Component\n */\n\n/**\n * Listview Component\n */\n\n\nvar __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar Sortable_1;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Sortable Module provides support to enable sortable functionality in Dom Elements.\n * ```html\n * <div id=\"sortable\">\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n *   <div>Item 3</div>\n *   <div>Item 4</div>\n *   <div>Item 5</div>\n * </div>\n * ```\n * ```typescript\n *   let ele: HTMLElement = document.getElementById('sortable');\n *   let sortObj: Sortable = new Sortable(ele, {});\n * ```\n */\n\nvar Sortable = Sortable_1 = /*#__PURE__*/function (_Base) {\n  _inherits(Sortable, _Base);\n\n  var _super3 = _createSuper(Sortable);\n\n  /* es-lint enable  */\n  function Sortable(element, options) {\n    var _this12;\n\n    _classCallCheck(this, Sortable);\n\n    _this12 = _super3.call(this, options, element); // eslint-disable-next-line\n\n    _this12.getHelper = function (e) {\n      // eslint-disable-next-line prefer-const\n      var target = _this12.getSortableElement(e.sender.target);\n\n      if (!_this12.isValidTarget(target, _assertThisInitialized(_this12))) {\n        return false;\n      }\n\n      var element;\n\n      if (_this12.helper) {\n        element = _this12.helper({\n          sender: target,\n          element: e.element\n        });\n      } else {\n        element = target.cloneNode(true);\n        element.style.width = \"\".concat(target.offsetWidth, \"px\");\n        element.style.height = \"\".concat(target.offsetHeight, \"px\");\n      }\n\n      addClass([element], ['e-sortableclone']);\n      document.body.appendChild(element);\n      return element;\n    }; // eslint-disable-next-line\n\n\n    _this12.onDrag = function (e) {\n      _this12.trigger('drag', {\n        event: e.event,\n        element: _this12.element,\n        target: e.target\n      });\n\n      var newInst = _this12.getSortableInstance(e.target);\n\n      var target = _this12.getSortableElement(e.target, newInst);\n\n      if ((_this12.isValidTarget(target, newInst) || e.target.className.indexOf('e-list-group-item') > -1) && (_this12.curTarget !== target || !isNullOrUndefined(newInst.placeHolder)) && (newInst.placeHolderElement ? newInst.placeHolderElement !== e.target : true)) {\n        if (e.target.className.indexOf('e-list-group-item') > -1) {\n          target = e.target;\n        }\n\n        _this12.curTarget = target;\n\n        if (_this12.target === target) {\n          return;\n        }\n\n        var oldIdx = _this12.getIndex(newInst.placeHolderElement, newInst);\n\n        var placeHolder = _this12.getPlaceHolder(target, newInst);\n\n        var newIdx;\n\n        if (placeHolder) {\n          oldIdx = isNullOrUndefined(oldIdx) ? _this12.getIndex(_this12.target) : oldIdx;\n          newIdx = _this12.getIndex(target, newInst, e.event);\n\n          var isPlaceHolderPresent = _this12.isPlaceHolderPresent(newInst);\n\n          if (isPlaceHolderPresent && oldIdx === newIdx) {\n            return;\n          }\n\n          if (isPlaceHolderPresent) {\n            remove(newInst.placeHolderElement);\n          }\n\n          newInst.placeHolderElement = placeHolder;\n\n          if (e.target.className.indexOf('e-list-group-item') > -1) {\n            newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n          } else if (newInst.element !== _this12.element && newIdx === newInst.element.childElementCount) {\n            newInst.element.appendChild(newInst.placeHolderElement);\n          } else {\n            newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n          }\n\n          _this12.refreshDisabled(oldIdx, newIdx, newInst);\n        } else {\n          oldIdx = isNullOrUndefined(oldIdx) ? _this12.getIndex(_this12.target) : _this12.getIndex(target, newInst) < oldIdx || !oldIdx ? oldIdx : oldIdx - 1;\n          newIdx = _this12.getIndex(target, newInst);\n          var idx = newInst.element !== _this12.element ? newIdx : oldIdx < newIdx ? newIdx + 1 : newIdx;\n\n          _this12.updateItemClass(newInst);\n\n          newInst.element.insertBefore(_this12.target, newInst.element.children[idx]);\n\n          _this12.refreshDisabled(oldIdx, newIdx, newInst);\n\n          _this12.curTarget = _this12.target;\n\n          _this12.trigger('drop', {\n            droppedElement: _this12.target,\n            element: newInst.element,\n            previousIndex: oldIdx,\n            currentIndex: newIdx,\n            target: e.target,\n            helper: document.getElementsByClassName('e-sortableclone')[0],\n            event: e.event,\n            scope: _this12.scope\n          });\n        }\n      }\n\n      newInst = _this12.getSortableInstance(_this12.curTarget);\n\n      if (isNullOrUndefined(target) && e.target !== newInst.placeHolderElement) {\n        if (_this12.isPlaceHolderPresent(newInst)) {\n          _this12.removePlaceHolder(newInst);\n        }\n      } else {\n        var placeHolders = [].slice.call(document.getElementsByClassName('e-sortable-placeholder'));\n        var inst;\n        placeHolders.forEach(function (placeHolder) {\n          inst = _this12.getSortableInstance(placeHolder);\n\n          if (inst.element && inst !== newInst) {\n            _this12.removePlaceHolder(inst);\n          }\n        });\n      }\n    }; // eslint-disable-next-line\n\n\n    _this12.onDragStart = function (e) {\n      _this12.target = _this12.getSortableElement(e.target);\n      var cancelDrag = false;\n\n      _this12.target.classList.add('e-grabbed');\n\n      _this12.curTarget = _this12.target;\n      e.helper = document.getElementsByClassName('e-sortableclone')[0];\n      var args = {\n        cancel: false,\n        element: _this12.element,\n        target: _this12.target\n      };\n\n      _this12.trigger('beforeDragStart', args, function (observedArgs) {\n        if (observedArgs.cancel) {\n          cancelDrag = observedArgs.cancel;\n\n          _this12.onDragStop(e);\n        }\n      });\n\n      if (cancelDrag) {\n        return;\n      }\n\n      if (isBlazor) {\n        _this12.trigger('dragStart', {\n          event: e.event,\n          element: _this12.element,\n          target: _this12.target,\n          bindEvents: e.bindEvents,\n          dragElement: e.dragElement\n        });\n      } else {\n        _this12.trigger('dragStart', {\n          event: e.event,\n          element: _this12.element,\n          target: _this12.target\n        });\n      }\n    }; // eslint-disable-next-line\n\n\n    _this12.onDragStop = function (e) {\n      var dropInst = _this12.getSortableInstance(_this12.curTarget);\n\n      var prevIdx;\n      var curIdx;\n      var handled;\n      prevIdx = _this12.getIndex(_this12.target);\n\n      var isPlaceHolderPresent = _this12.isPlaceHolderPresent(dropInst);\n\n      if (isPlaceHolderPresent) {\n        var _curIdx = _this12.getIndex(dropInst.placeHolderElement, dropInst);\n\n        var args = {\n          previousIndex: prevIdx,\n          currentIndex: _curIdx,\n          target: e.target,\n          droppedElement: _this12.target,\n          helper: e.helper,\n          cancel: false,\n          handled: false\n        };\n\n        _this12.trigger('beforeDrop', args, function (observedArgs) {\n          if (!observedArgs.cancel) {\n            handled = observedArgs.handled;\n\n            _this12.updateItemClass(dropInst);\n\n            if (observedArgs.handled) {\n              var ele = _this12.target.cloneNode(true);\n\n              _this12.target.classList.remove('e-grabbed');\n\n              _this12.target = ele;\n            }\n\n            dropInst.element.insertBefore(_this12.target, dropInst.placeHolderElement);\n\n            var _curIdx2 = _this12.getIndex(_this12.target, dropInst);\n\n            prevIdx = _assertThisInitialized(_this12) === dropInst && prevIdx - _curIdx2 > 1 ? prevIdx - 1 : prevIdx;\n\n            _this12.trigger('drop', {\n              event: e.event,\n              element: dropInst.element,\n              previousIndex: prevIdx,\n              currentIndex: _curIdx2,\n              target: e.target,\n              helper: e.helper,\n              droppedElement: _this12.target,\n              scopeName: _this12.scope,\n              handled: handled\n            });\n          }\n\n          remove(dropInst.placeHolderElement);\n        });\n      }\n\n      dropInst = _this12.getSortableInstance(e.target); // eslint-disable-next-line prefer-const\n\n      curIdx = dropInst.element.childElementCount;\n      prevIdx = _this12.getIndex(_this12.target);\n\n      if (dropInst.element === e.target || !isPlaceHolderPresent && _this12.curTarget === _this12.target) {\n        var beforeDropArgs = {\n          previousIndex: prevIdx,\n          currentIndex: _this12.curTarget === _this12.target ? prevIdx : curIdx,\n          target: e.target,\n          droppedElement: _this12.target,\n          helper: e.helper,\n          cancel: false\n        };\n\n        _this12.trigger('beforeDrop', beforeDropArgs, function (observedArgs) {\n          if (dropInst.element === e.target && !observedArgs.cancel) {\n            _this12.updateItemClass(dropInst);\n\n            dropInst.element.appendChild(_this12.target);\n\n            _this12.trigger('drop', {\n              event: e.event,\n              element: dropInst.element,\n              previousIndex: prevIdx,\n              currentIndex: curIdx,\n              target: e.target,\n              helper: e.helper,\n              droppedElement: _this12.target,\n              scopeName: _this12.scope\n            });\n          }\n        });\n      }\n\n      _this12.target.classList.remove('e-grabbed');\n\n      _this12.target = null;\n      _this12.curTarget = null;\n      remove(e.helper);\n      getComponent(_this12.element, Draggable).intDestroy(e.event);\n    };\n\n    _this12.bind();\n\n    return _this12;\n  }\n\n  _createClass(Sortable, [{\n    key: \"bind\",\n    value: function bind() {\n      if (!this.element.id) {\n        this.element.id = getUniqueID('sortable');\n      }\n\n      if (!this.itemClass) {\n        this.itemClass = 'e-sort-item';\n        this.dataBind();\n      }\n\n      this.initializeDraggable();\n    }\n  }, {\n    key: \"initializeDraggable\",\n    value: function initializeDraggable() {\n      new Draggable(this.element, {\n        helper: this.getHelper,\n        dragStart: this.onDragStart,\n        drag: this.onDrag,\n        dragStop: this.onDragStop,\n        dragTarget: \".\".concat(this.itemClass),\n        enableTapHold: true,\n        tapHoldThreshold: 200,\n        queryPositionInfo: this.queryPositionInfo,\n        distance: 5\n      });\n    }\n  }, {\n    key: \"getPlaceHolder\",\n    value: function getPlaceHolder(target, instance) {\n      if (instance.placeHolder) {\n        var placeHolderElement = instance.placeHolder({\n          element: instance.element,\n          grabbedElement: this.target,\n          target: target\n        });\n        placeHolderElement.classList.add('e-sortable-placeholder');\n        return placeHolderElement;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"isValidTarget\",\n    value: function isValidTarget(target, instance) {\n      return target && compareElementParent(target, instance.element) && target.classList.contains(instance.itemClass) && !target.classList.contains('e-disabled');\n    }\n  }, {\n    key: \"removePlaceHolder\",\n    value: function removePlaceHolder(instance) {\n      remove(instance.placeHolderElement);\n      instance.placeHolderElement = null;\n    }\n  }, {\n    key: \"updateItemClass\",\n    value: function updateItemClass(instance) {\n      if (this !== instance) {\n        this.target.classList.remove(this.itemClass);\n        this.target.classList.add(instance.itemClass);\n      }\n    }\n  }, {\n    key: \"getSortableInstance\",\n    value: function getSortableInstance(element) {\n      element = closest(element, \".e-\".concat(this.getModuleName()));\n\n      if (element) {\n        var inst = getComponent(element, Sortable_1);\n        return inst.scope && this.scope && inst.scope === this.scope ? inst : this;\n      } else {\n        return this;\n      }\n    }\n  }, {\n    key: \"refreshDisabled\",\n    value: function refreshDisabled(oldIdx, newIdx, instance) {\n      if (instance === this) {\n        var element;\n        var increased = oldIdx < newIdx;\n        var disabledIdx;\n        var start = increased ? oldIdx : newIdx;\n        var end = increased ? newIdx : oldIdx;\n\n        while (start <= end) {\n          element = this.element.children[start];\n\n          if (element.classList.contains('e-disabled')) {\n            disabledIdx = this.getIndex(element);\n            this.element.insertBefore(element, this.element.children[increased ? disabledIdx + 2 : disabledIdx - 1]);\n            start = increased ? disabledIdx + 2 : disabledIdx + 1;\n          } else {\n            start++;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(target) {\n      var instance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n      var e = arguments.length > 2 ? arguments[2] : undefined;\n      var idx;\n      var placeHolderPresent;\n      [].slice.call(instance.element.children).forEach(function (element, index) {\n        if (element.classList.contains('e-sortable-placeholder')) {\n          placeHolderPresent = true;\n        }\n\n        if (element === target) {\n          idx = index;\n\n          if (!isNullOrUndefined(e)) {\n            if (placeHolderPresent) {\n              idx -= 1;\n            }\n\n            var offset = target.getBoundingClientRect();\n            var clientY = offset.bottom - (offset.bottom - offset.top) / 2;\n            idx = e.clientY <= clientY ? idx : idx + 1;\n          }\n\n          return;\n        }\n      });\n      return idx;\n    }\n  }, {\n    key: \"getSortableElement\",\n    value: function getSortableElement(element) {\n      var instance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n      return closest(element, \".\".concat(instance.itemClass));\n    }\n  }, {\n    key: \"queryPositionInfo\",\n    value: function queryPositionInfo(value) {\n      value.left = pageXOffset ? \"\".concat(parseFloat(value.left) - pageXOffset, \"px\") : value.left;\n      value.top = pageYOffset ? \"\".concat(parseFloat(value.top) - pageYOffset, \"px\") : value.top;\n      return value;\n    }\n  }, {\n    key: \"isPlaceHolderPresent\",\n    value: function isPlaceHolderPresent(instance) {\n      return instance.placeHolderElement && !!closest(instance.placeHolderElement, \"#\".concat(instance.element.id));\n    }\n    /**\n     * It is used to sort array of elements from source element to destination element.\n     *\n     * @param destination - Defines the destination element to which the sortable elements needs to be appended.\n     *\n     * If it is null, then the Sortable library element will be considered as destination.\n     * @param targetIndexes - Specifies the sortable elements indexes which needs to be sorted.\n     * @param insertBefore - Specifies the index before which the sortable elements needs to be appended.\n     * If it is null, elements will be appended as last child.\n     * @function moveTo\n     * @returns {void}\n     */\n\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(destination, targetIndexes, insertBefore) {\n      _moveTo(this.element, destination, targetIndexes, insertBefore);\n    }\n    /**\n     * It is used to destroy the Sortable library.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.itemClass === 'e-sort-item') {\n        this.itemClass = null;\n        this.dataBind();\n      }\n\n      getComponent(this.element, Draggable).destroy();\n\n      _get(_getPrototypeOf(Sortable.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return 'sortable';\n    }\n  }, {\n    key: \"onPropertyChanged\",\n    value: function onPropertyChanged(newProp, oldProp) {\n      for (var _i15 = 0, _Object$keys4 = Object.keys(newProp); _i15 < _Object$keys4.length; _i15++) {\n        var prop = _Object$keys4[_i15];\n\n        switch (prop) {\n          case 'itemClass':\n            [].slice.call(this.element.children).forEach(function (element) {\n              if (element.classList.contains(oldProp.itemClass)) {\n                element.classList.remove(oldProp.itemClass);\n              }\n\n              if (newProp.itemClass) {\n                element.classList.add(newProp.itemClass);\n              }\n            });\n            break;\n        }\n      }\n    }\n  }]);\n\n  return Sortable;\n}(Base);\n\n__decorate$1([Property(false)], Sortable.prototype, \"enableAnimation\", void 0);\n\n__decorate$1([Property(null)], Sortable.prototype, \"itemClass\", void 0);\n\n__decorate$1([Property(null)], Sortable.prototype, \"scope\", void 0);\n\n__decorate$1([Property()], Sortable.prototype, \"helper\", void 0);\n\n__decorate$1([Property()], Sortable.prototype, \"placeHolder\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"drag\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"beforeDragStart\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"dragStart\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"beforeDrop\", void 0);\n\n__decorate$1([Event()], Sortable.prototype, \"drop\", void 0);\n\nSortable = Sortable_1 = __decorate$1([NotifyPropertyChanges], Sortable);\n/**\n * It is used to sort array of elements from source element to destination element.\n *\n * @private\n */\n\nfunction _moveTo(from, to, targetIndexes, insertBefore) {\n  var targetElements = [];\n\n  if (!to) {\n    to = from;\n  }\n\n  if (targetIndexes && targetIndexes.length) {\n    targetIndexes.forEach(function (index) {\n      targetElements.push(from.children[index]);\n    });\n  } else {\n    targetElements = [].slice.call(from.children);\n  }\n\n  if (isNullOrUndefined(insertBefore)) {\n    targetElements.forEach(function (target) {\n      to.appendChild(target);\n    });\n  } else {\n    var insertElement = to.children[insertBefore];\n    targetElements.forEach(function (target) {\n      to.insertBefore(target, insertElement);\n    });\n  }\n}\n/**\n * Sortable Module\n */\n\n/**\n * List Components\n */\n\n\nexport { classNames, FieldSettings, ListView, Virtualization, cssClass, ListBase, getFieldValues, Sortable, _moveTo as moveTo };","map":{"version":3,"sources":["D:/angularStarter/11-24/syncfusion-mytemplate/template-v1/node_modules/@syncfusion/ej2-lists/dist/es6/ej2-lists.es2015.js"],"names":["Animation","Base","ChildProperty","Complex","Component","Draggable","Event","EventHandler","NotifyPropertyChanges","Property","SanitizeHtmlHelper","Touch","addClass","append","attributes","closest","compareElementParent","compile","detach","extend","formatUnit","getComponent","getUniqueID","getValue","isBlazor","isNullOrUndefined","isVisible","merge","prepend","remove","removeClass","rippleEffect","DataManager","Query","createCheckBox","cssClass","li","ul","group","icon","text","check","checked","selected","expanded","textContent","hasChild","level","url","collapsible","disabled","image","iconWrapper","anchorWrap","navigable","ListBase","defaultMappedFields","id","value","isChecked","enabled","iconCss","child","hasChildren","tooltip","htmlAttributes","urlAttributes","imageAttributes","imageUrl","groupBy","sortBy","defaultAriaAttributes","listRole","itemRole","groupItemRole","itemText","wrapperRole","defaultListBaseOptions","showCheckBox","showIcon","enableHtmlSanitizer","expandCollapse","fields","ariaAttributes","listClass","itemClass","processSubChild","sortOrder","template","groupTemplate","headerTemplate","expandIconClass","moduleName","expandIconPosition","itemNavigable","createList","createElement","dataSource","options","isSingleLevel","componentInstance","curOpt","type","typeofData","typeof","createListFromArray","createListFromJson","subChild","createListItemFromArray","generateUL","getModuleClass","generateId","i","length","itemCreating","curData","generateSingleLevelLI","undefined","generateLI","itemCreated","item","push","createListItemFromJson","getModuleName","checkboxElement","anchorElement","hasOwnProperty","fieldData","getFieldValues","curItem","innerEle","className","attrs","isHeader","querySelector","firstElementChild","classList","add","setAttribute","toString","style","display","attr","src","imageElemnt","insertAdjacentElement","iconElement","getSiblingLI","elementArray","element","isPrevious","siblingLI","liIndex","liCollections","Array","prototype","slice","call","indexOf","contains","groupDataSource","curFields","cusQuery","addSorting","ds","getDataSource","j","itemObj","items","grpItem","hdr","key","newtext","_id","trim","k","query","queries","fn","splice","executeLocal","createJsonFromElement","curEle","cloneNode","jsonAr","childs","querySelectorAll","anchor","json","childNodes","keys","Object","Number","hasChildNodes","attributes$$1","getAllAttributes","data","match","elementAttributes","class","split","index","nodeName","nodeValue","renderContentTemplate","ulElement","role","compiledString","compileTemplate","liCollection","innerText","currentID","groupTemplateID","templateID","compiledElement","isStringTemplate","renderGroupTemplate","headerItems","category","header","headerData","innerHTML","Math","floor","random","substring","subDS","subLi","appendChild","expandElement","innerElements","grpLI","elementID","href","anchorTag","document","createTextNode","moduleClass","isFullNavigation","anchorWrapper","uID","innerDiv","liElement","generateIcon","dataItem","field","dataField","e","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","d","Reflect","decorate","defineProperty","effectsConfig","effectsRTLConfig","classNames","root","hover","focused","parentItem","listItem","listIcon","listItemText","groupListItem","view","headerText","headerTemplateText","disable","content","backIcon","checkboxWrapper","checkbox","checklist","checkboxIcon","checkboxRight","checkboxLeft","listviewCheckbox","itemCheckList","virtualElementContainer","LISTVIEW_TEMPLATE_PROPERTY","LISTVIEW_GROUPTEMPLATE_PROPERTY","LISTVIEW_HEADERTEMPLATE_PROPERTY","swipeVelocity","FieldSettings","ListView","previousSelectedItems","hiddenItems","enabledItems","disabledItems","newProp","oldProp","prop","setHTMLAttribute","setCSSClass","setEnable","setSize","setEnableRTL","listBaseOption","properties","enableVirtualization","virtualizationModule","reRenderUiVirtualization","reRender","curDSLevel","headerTitle","contentContainer","refresh","setCheckbox","curViewDS","getSubDS","resetCurrentList","oldCSSClass","filter","css","height","width","isWindow","clientHeight","enableElement","enable","enableRtl","isEnabled","showBack","headerEle","showHeader","setProperties","sanitize","innerHeaderEle","textEle","outerHTML","hedBackButton","headerTemplateEle","LISTVIEW_HEADERTEMPLATE_ID","isReact","renderReactTemplates","parentElement","fromView","toView","reverse","fPos","position","overflow","anim","duration","animation","effect","slideLeft","aniObj","animate","name","timingFunction","easing","end","model","trigger","curUL","renderCheckbox","bind","initialization","animateOptions","currentLiElements","isNestedList","selectedData","selectedId","LISTVIEW_TEMPLATE_ID","LISTVIEW_GROUPTEMPLATE_ID","removeElement","args","isValidLI","frameElement","checkInternally","checkBoxPosition","insertBefore","virtualCheckBox","children","lastElementChild","toggleCheckBase","constructor","HTMLLIElement","getLiFromObjOrElement","setSelectedItemData","toggleAllCheckBase","checkIcon","checkItem","uncheckItem","checkedItem","getItemData","selectedItems","refreshItemHeight","closestElement","uncheckAllItems","back","parentNode","removeFocus","setCheckboxLI","eventArgs","selectEventData","removeHover","removeSelect","setSelectLI","removeChild","curLi","setHoverLI","focusedElement","removeAttribute","prev","preventDefault","onArrowKeyDown","elementTop","getBoundingClientRect","top","elementHeight","firstItemBounds","heightDiff","groupItemBounds","siblingTop","siblingHeight","window","innerHeight","scroll","pageYOffset","scrollTop","uiFirstIndex","onUIScrolled","listItemHeight","topHeight","headerBounds","keyCode","homeKeyHandler","arrowKeyHandler","enterKeyHandler","spaceKeyHandler","swipeDirection","velocity","originalEvent","activeElement","keyActionHandler","clickHandler","hoverHandler","leaveHandler","focusout","touchModule","swipe","swipeActionHandler","destroy","focusedLI","ele","hoverLI","selectedLI","renderSubList","selectedItem","isInteracted","event","lastLi","levelKeys","localData","curDSJSON","findItemFromDS","getElementUID","curDS","parent","resultJSON","some","columns","column","select","from","tableName","listViewComponent","isDestroyed","result","renderList","ready","then","isOffline","offline","renderRemoteLists","catch","triggerActionFailure","executeQuery","getQuery","clearTemplate","setLocalData","setViewDataSource","renderIntoDom","liElements","getAttribute","setAttributes","lists","switchView","isNgTemplate","createUIItem","uiVirtualization","obj","Element","tabindex","wireEvents","rippleFn","selector","renderComplete","unWireEvents","classAr","concat","pID","isInAnimation","pop","toUL","fromUL","selectItem","uid","parentId","finalValue","isCompleted","getSelectedItems","getElementsByClassName","liTextCollection","liDataCollection","dataParent","tempData","getParentId","setItemState","enableItem","disableItem","isEnable","showHideItem","showItem","hideItem","isHide","addItemInternally","addItem","targetUL","addItemIntoDom","addItemInNestedList","targetItemData","itemQueue","targetItemId","targetChildDS","isAlreadyRenderedUL","targetLi","targetDS","isTargetEmptyChild","targetRefreshedElement","currentItem","addListItem","curItemDS","targetEle","nextElementSibling","listDataSource","removeItem","removeItemFromList","groupLi","validateNestedView","previousElementSibling","foundData","findParent","dsIndex","isArray","parentLi","liID","toLowerCase","callback","modules","member","addOnPersist","listElementCount","windowElementCount","Virtualization","instance","elementDifference","listViewInstance","templateRef","wireScrollEvent","firstDs","expectedDomItemCount","ValidateItemCount","domItemCount","uiLastIndex","otherDs","listItems","topElement","bottomElement","totalHeight","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","onVirtualScroll","onVirtualUiScroll","addEventListener","removeEventListener","updateUl","updateUlContainer","liElementHeight","updateLiElementHeight","round","documentElement","dataSourceLength","parseFloat","itemCount","uiIndices","activeIndices","disabledItemIndices","context","viewContainerRef","get","nextSibling","startingHeight","scrollPosition","getscrollerHeight","onLongScroll","onNormalScroll","isScrollingDown","elements","updateUI","curViewDs","dataset","checkListWrapper","hiddenItemIndices","checklistElement","activeIndex","dataCollection","textCollection","indices","map","indexArray","resutJSON","findDSAndIndexFromId","isSelected","removeUiItem","changeUiIndices","liItem","previousSibling","scrollTo","increment","ind","createAndInjectNewItem","addUiItem","itemData","virtualTemplate","commonTemplate","div","templateElements","getElementsByTagName","groupTemplateElements","templateData","nodes","flatTemplateNodes","groupTemplateNodes","textProperty","classProperty","attributeProperty","newData","listElement","onChange","node","regex","RegExp","resultantOutput","regexMatch","exec","classNameMatch","classFunction","Function","replace","subNode","bindedvalue","newCss","updateContextData","attributeNames","attributeName","attrNameMatch","attrValueMatch","attributeNameFunction","attributeValueFunction","attrName","attributeValue","isChildHasTextContent","textPropertyMatch","textFunction","preRender","targetElement","onNgChange","updateUiContent","changeElementAttributes","virtualThis","templateCompiler","resultElement","lastChild","__decorate$1","Sortable_1","Sortable","getHelper","getSortableElement","sender","isValidTarget","helper","offsetWidth","offsetHeight","body","onDrag","newInst","getSortableInstance","curTarget","placeHolder","placeHolderElement","oldIdx","getIndex","getPlaceHolder","newIdx","isPlaceHolderPresent","childElementCount","refreshDisabled","idx","updateItemClass","droppedElement","previousIndex","currentIndex","scope","removePlaceHolder","placeHolders","inst","forEach","onDragStart","cancelDrag","cancel","observedArgs","onDragStop","bindEvents","dragElement","dropInst","prevIdx","curIdx","handled","scopeName","beforeDropArgs","intDestroy","dataBind","initializeDraggable","dragStart","drag","dragStop","dragTarget","enableTapHold","tapHoldThreshold","queryPositionInfo","distance","grabbedElement","increased","disabledIdx","start","placeHolderPresent","offset","clientY","bottom","left","pageXOffset","destination","targetIndexes","moveTo","to","targetElements","insertElement"],"mappings":"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","sourcesContent":["import { Animation, Base, ChildProperty, Complex, Component, Draggable, Event, EventHandler, NotifyPropertyChanges, Property, SanitizeHtmlHelper, Touch, addClass, append, attributes, closest, compareElementParent, compile, detach, extend, formatUnit, getComponent, getUniqueID, getValue, isBlazor, isNullOrUndefined, isVisible, merge, prepend, remove, removeClass, rippleEffect } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\n\n/* eslint-disable no-inner-declarations */\nlet cssClass = {\n    li: 'e-list-item',\n    ul: 'e-list-parent e-ul',\n    group: 'e-list-group-item',\n    icon: 'e-list-icon',\n    text: 'e-list-text',\n    check: 'e-list-check',\n    checked: 'e-checked',\n    selected: 'e-selected',\n    expanded: 'e-expanded',\n    textContent: 'e-text-content',\n    hasChild: 'e-has-child',\n    level: 'e-level',\n    url: 'e-list-url',\n    collapsible: 'e-icon-collapsible',\n    disabled: 'e-disabled',\n    image: 'e-list-img',\n    iconWrapper: 'e-icon-wrapper',\n    anchorWrap: 'e-anchor-wrap',\n    navigable: 'e-navigable'\n};\n/**\n * Base List Generator\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar ListBase;\n(function (ListBase) {\n    /**\n     *\n     * Default mapped fields.\n     */\n    ListBase.defaultMappedFields = {\n        id: 'id',\n        text: 'text',\n        url: 'url',\n        value: 'value',\n        isChecked: 'isChecked',\n        enabled: 'enabled',\n        expanded: 'expanded',\n        selected: 'selected',\n        iconCss: 'iconCss',\n        child: 'child',\n        isVisible: 'isVisible',\n        hasChildren: 'hasChildren',\n        tooltip: 'tooltip',\n        htmlAttributes: 'htmlAttributes',\n        urlAttributes: 'urlAttributes',\n        imageAttributes: 'imageAttributes',\n        imageUrl: 'imageUrl',\n        groupBy: null,\n        sortBy: null\n    };\n    const defaultAriaAttributes = {\n        level: 1,\n        listRole: 'presentation',\n        itemRole: 'presentation',\n        groupItemRole: 'group',\n        itemText: 'list-item',\n        wrapperRole: 'presentation'\n    };\n    const defaultListBaseOptions = {\n        showCheckBox: false,\n        showIcon: false,\n        enableHtmlSanitizer: false,\n        expandCollapse: false,\n        fields: ListBase.defaultMappedFields,\n        ariaAttributes: defaultAriaAttributes,\n        listClass: '',\n        itemClass: '',\n        processSubChild: false,\n        sortOrder: 'None',\n        template: null,\n        groupTemplate: null,\n        headerTemplate: null,\n        expandIconClass: 'e-icon-collapsible',\n        moduleName: 'list',\n        expandIconPosition: 'Right',\n        itemNavigable: false\n    };\n    /**\n     * Function helps to created and return the UL Li element based on your data.\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} createListFromJson - Specifies the list options that need to provide.\n     */\n    function createList(createElement, dataSource, \n    // eslint-disable-next-line\n    options, isSingleLevel, componentInstance) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        const type = typeofData(dataSource).typeof;\n        if (type === 'string' || type === 'number') {\n            return createListFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n        }\n        else {\n            return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel, componentInstance);\n        }\n    }\n    ListBase.createList = createList;\n    /**\n     * Function helps to created an element list based on string array input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} generateUL - returns the list options that need to provide.\n     */\n    function createListFromArray(createElement, dataSource, \n    // tslint:disable-next-line\n    // eslint-disable-next-line\n    isSingleLevel, options, componentInstance) {\n        const subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n        return generateUL(createElement, subChild, null, options);\n    }\n    ListBase.createListFromArray = createListFromArray;\n    /**\n     * Function helps to created an element list based on string array input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {HTMLElement[]} subChild - returns the list options that need to provide.\n     */\n    function createListItemFromArray(createElement, dataSource, \n    // eslint-disable-next-line\n    isSingleLevel, options, componentInstance) {\n        const subChild = [];\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        const id = generateId(); // generate id for drop-down-list option.\n        for (let i = 0; i < dataSource.length; i++) {\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            let li;\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    options: curOpt\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (isSingleLevel) {\n                li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, dataSource[i], undefined, null, null, options, componentInstance);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    item: li,\n                    options: curOpt\n                };\n                curOpt.itemCreated(curData);\n            }\n            subChild.push(li);\n        }\n        return subChild;\n    }\n    ListBase.createListItemFromArray = createListItemFromArray;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {number} level? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {HTMLElement[]} child - returns the list options that need to provide.\n     */\n    function createListItemFromJson(createElement, dataSource, \n    // eslint-disable-next-line\n    options, level, isSingleLevel, componentInstance) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        const fields = (componentInstance &&\n            (componentInstance.getModuleName() == \"listview\" || componentInstance.getModuleName() == \"multiselect\")) ? curOpt.fields : extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        let id;\n        let checkboxElement = [];\n        if (level) {\n            ariaAttributes.level = level;\n        }\n        const child = [];\n        let li;\n        let anchorElement;\n        if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) &&\n            // eslint-disable-next-line no-prototype-builtins\n            !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n            id = generateId(); // generate id for drop-down-list option.\n        }\n        for (let i = 0; i < dataSource.length; i++) {\n            let fieldData = getFieldValues(dataSource[i], fields);\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            const curItem = dataSource[i];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n            }\n            // eslint-disable-next-line no-prototype-builtins\n            if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n                id = fieldData[fields.id];\n            }\n            const innerEle = [];\n            if (curOpt.showCheckBox) {\n                if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n                    checkboxElement.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n                else {\n                    innerEle.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n            }\n            if (isSingleLevel === true) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n                    innerEle.push(createElement('span', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] }));\n                }\n                li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, \n                // eslint-disable-next-line no-prototype-builtins\n                (curItem.hasOwnProperty('isHeader') &&\n                    curItem.isHeader) ? true : false, id, i, options);\n                anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n            }\n            else {\n                li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options, componentInstance);\n                li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n                li.setAttribute('aria-level', ariaAttributes.level.toString());\n                anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.tooltip)) {\n                    li.setAttribute('title', fieldData[fields.tooltip]);\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                    setAttribute(li, fieldData[fields.htmlAttributes]);\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n                    li.classList.add(cssClass.disabled);\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n                    li.style.display = 'none';\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl])\n                    && !curOpt.template) {\n                    const attr = { src: fieldData[fields.imageUrl] };\n                    merge(attr, fieldData[fields.imageAttributes]);\n                    const imageElemnt = createElement('img', { className: cssClass.image, attrs: attr });\n                    if (anchorElement) {\n                        anchorElement.insertAdjacentElement('afterbegin', imageElemnt);\n                    }\n                    else {\n                        prepend([imageElemnt], li.firstElementChild);\n                    }\n                }\n                // eslint-disable-next-line no-prototype-builtins\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) &&\n                    !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n                    const iconElement = createElement('div', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] });\n                    if (anchorElement) {\n                        anchorElement.insertAdjacentElement('afterbegin', iconElement);\n                    }\n                    else {\n                        prepend([iconElement], li.firstElementChild);\n                    }\n                }\n                if (innerEle.length) {\n                    prepend(innerEle, li.firstElementChild);\n                }\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n                processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n            }\n            if (anchorElement) {\n                addClass([li], [cssClass.navigable]);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            checkboxElement = [];\n            child.push(li);\n        }\n        return child;\n    }\n    ListBase.createListItemFromJson = createListItemFromJson;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     *\n     * @param  {number} level? - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} isSingleLevel? - Specifies the list options that need to provide.\n     *\n     * @param  {any} componentInstance? - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} generateUL - Specifies the list options that need to provide.\n     */\n    function createListFromJson(createElement, dataSource, \n    // eslint-disable-next-line\n    options, level, isSingleLevel, componentInstance) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance);\n        return generateUL(createElement, li, curOpt.listClass, options);\n    }\n    ListBase.createListFromJson = createListFromJson;\n    /**\n     * Return the next or previous visible element.\n     *\n     * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n     * @param  {Element} li - An element to find next or previous after this element.\n     * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n     */\n    function getSiblingLI(elementArray, element, isPrevious) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        if (!elementArray || !elementArray.length) {\n            return void 0;\n        }\n        let siblingLI;\n        let liIndex;\n        const liCollections = Array.prototype.slice.call(elementArray);\n        if (element) {\n            liIndex = indexOf(element, liCollections);\n        }\n        else {\n            liIndex = (isPrevious === true ? liCollections.length : -1);\n        }\n        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n        while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n            liIndex = liIndex + (isPrevious === true ? -1 : 1);\n            siblingLI = liCollections[liIndex];\n        }\n        return siblingLI;\n    }\n    ListBase.getSiblingLI = getSiblingLI;\n    /**\n     * Return the index of the li element\n     *\n     * @param  {Element} item - An element to find next or previous after this element.\n     * @param  {Element[]} elementArray - An element array to find index of given li.\n     */\n    function indexOf(item, elementArray) {\n        if (!elementArray || !item) {\n            return void 0;\n        }\n        else {\n            let liCollections = elementArray;\n            liCollections = Array.prototype.slice.call(elementArray);\n            return liCollections.indexOf(item);\n        }\n    }\n    ListBase.indexOf = indexOf;\n    /**\n     * Returns the grouped data from given dataSource.\n     *\n     * @param  {{Object}[]} dataSource - The JSON data which is necessary to process.\n     * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n     * @param  {SortOrder} sortOrder- Specifies final result sort order.\n     */\n    function groupDataSource(dataSource, fields, sortOrder = 'None') {\n        const curFields = extend({}, ListBase.defaultMappedFields, fields);\n        let cusQuery = new Query().group(curFields.groupBy);\n        // need to remove once sorting issues fixed in DataManager\n        cusQuery = addSorting(sortOrder, 'key', cusQuery);\n        const ds = getDataSource(dataSource, cusQuery);\n        dataSource = [];\n        for (let j = 0; j < ds.length; j++) {\n            const itemObj = ds[j].items;\n            const grpItem = {};\n            const hdr = 'isHeader';\n            grpItem[curFields.text] = ds[j].key;\n            grpItem[hdr] = true;\n            let newtext = curFields.text;\n            if (newtext === 'id') {\n                newtext = 'text';\n                grpItem[newtext] = ds[j].key;\n            }\n            grpItem._id = 'group-list-item-' + (ds[j].key ?\n                ds[j].key.toString().trim() : 'undefined');\n            grpItem.items = itemObj;\n            dataSource.push(grpItem);\n            for (let k = 0; k < itemObj.length; k++) {\n                dataSource.push(itemObj[k]);\n            }\n        }\n        return dataSource;\n    }\n    ListBase.groupDataSource = groupDataSource;\n    /**\n     * Returns a sorted query object.\n     *\n     * @param  {SortOrder} sortOrder - Specifies that sort order.\n     * @param  {string} sortBy - Specifies sortBy fields.\n     * @param  {Query} query - Pass if any existing query.\n     */\n    function addSorting(sortOrder, sortBy, query = new Query()) {\n        if (sortOrder === 'Ascending') {\n            query.sortBy(sortBy, 'ascending', true);\n        }\n        else if (sortOrder === 'Descending') {\n            query.sortBy(sortBy, 'descending', true);\n        }\n        else {\n            for (let i = 0; i < query.queries.length; i++) {\n                if (query.queries[i].fn === 'onSortBy') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    }\n    ListBase.addSorting = addSorting;\n    /**\n     * Return an array of JSON Data that processed based on queries.\n     *\n     * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n     *\n     * @param  {Query} query - Specifies query that need to process.\n     */\n    function getDataSource(dataSource, query) {\n        // eslint-disable-next-line\n        return new DataManager(dataSource)\n            .executeLocal(query);\n    }\n    ListBase.getDataSource = getDataSource;\n    /**\n     * Created JSON data based the UL and LI element\n     *\n     * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function createJsonFromElement(element, options) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        const curEle = element.cloneNode(true);\n        // eslint-disable-next-line\n        const jsonAr = [];\n        curEle.classList.add('json-parent');\n        const childs = curEle.querySelectorAll('.json-parent>li');\n        curEle.classList.remove('json-parent');\n        for (let i = 0; i < childs.length; i++) {\n            const li = childs[i];\n            const anchor = li.querySelector('a');\n            const ul = li.querySelector('ul');\n            // eslint-disable-next-line\n            const json = {};\n            const childNodes = anchor ? anchor.childNodes : li.childNodes;\n            const keys = Object.keys(childNodes);\n            for (let i = 0; i < childNodes.length; i++) {\n                if (!(childNodes[Number(keys[i])]).hasChildNodes()) {\n                    json[fields.text] = childNodes[Number(keys[i])].textContent;\n                }\n            }\n            let attributes$$1 = getAllAttributes(li);\n            if (attributes$$1.id) {\n                json[fields.id] = attributes$$1.id;\n                delete attributes$$1.id;\n            }\n            else {\n                json[fields.id] = generateId();\n            }\n            if (Object.keys(attributes$$1).length) {\n                json[fields.htmlAttributes] = attributes$$1;\n            }\n            if (anchor) {\n                attributes$$1 = getAllAttributes(anchor);\n                if (Object.keys(attributes$$1).length) {\n                    json[fields.urlAttributes] = attributes$$1;\n                }\n            }\n            if (ul) {\n                json[fields.child] = createJsonFromElement(ul, options);\n            }\n            jsonAr.push(json);\n        }\n        return jsonAr;\n    }\n    ListBase.createJsonFromElement = createJsonFromElement;\n    function typeofData(data) {\n        let match = { typeof: null, item: null };\n        for (let i = 0; i < data.length; i++) {\n            if (!isNullOrUndefined(data[i])) {\n                return match = { typeof: typeof data[i], item: data[i] };\n            }\n        }\n        return match;\n    }\n    function setAttribute(element, elementAttributes) {\n        const attr = {};\n        merge(attr, elementAttributes);\n        if (attr.class) {\n            addClass([element], attr.class.split(' '));\n            delete attr.class;\n        }\n        attributes(element, attr);\n    }\n    function getAllAttributes(element) {\n        const attributes$$1 = {};\n        const attr = element.attributes;\n        for (let index = 0; index < attr.length; index++) {\n            attributes$$1[attr[index].nodeName] = attr[index].nodeValue;\n        }\n        return attributes$$1;\n    }\n    /**\n     * Created UL element from content template.\n     *\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function renderContentTemplate(createElement, template, dataSource, \n    // eslint-disable-next-line\n    fields, options, componentInstance) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        const ulElement = createElement('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const curFields = extend({}, ListBase.defaultMappedFields, fields);\n        // eslint-disable-next-line\n        const compiledString = compileTemplate(template);\n        const liCollection = [];\n        let value;\n        const id = generateId(); // generate id for drop-down-list option.\n        for (let i = 0; i < dataSource.length; i++) {\n            let fieldData = getFieldValues(dataSource[i], curFields);\n            const curItem = dataSource[i];\n            const isHeader = curItem.isHeader;\n            if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                value = curItem;\n            }\n            else {\n                value = fieldData[curFields.value];\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], curFields);\n                if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                    value = curItem;\n                }\n                else {\n                    value = fieldData[curFields.value];\n                }\n            }\n            const li = createElement('li', {\n                id: id + '-' + i,\n                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }\n            });\n            if (isHeader) {\n                if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                    li.innerText = curItem;\n                }\n                else {\n                    li.innerText = fieldData[curFields.text];\n                }\n            }\n            else {\n                const currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n                if (isHeader) {\n                    if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                        // eslint-disable-next-line\n                        const compiledElement = compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate, null, li);\n                        if (compiledElement) {\n                            append(compiledElement, li);\n                        }\n                    }\n                    else {\n                        append(compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate), li);\n                    }\n                }\n                else {\n                    if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                        // eslint-disable-next-line\n                        const compiledElement = compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate, null, li);\n                        if (compiledElement) {\n                            append(compiledElement, li);\n                        }\n                    }\n                    else {\n                        append(compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate), li);\n                    }\n                }\n                li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n                li.setAttribute('role', 'option');\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                const curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    item: li,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreated(curData);\n            }\n            liCollection.push(li);\n        }\n        append(liCollection, ulElement);\n        return ulElement;\n    }\n    ListBase.renderContentTemplate = renderContentTemplate;\n    /**\n     * Created header items from group template.\n     *\n     * @param  {string} template - that need to convert and generate li element.\n     *\n     * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n     *\n     * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n     *\n     * @param  {Element[]} headerItems? - Specifies listbase header items.\n     */\n    // tslint:disable-next-line\n    function renderGroupTemplate(groupTemplate, groupDataSource, fields, \n    // eslint-disable-next-line\n    headerItems, options, componentInstance) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const compiledString = compileTemplate(groupTemplate);\n        const curFields = extend({}, ListBase.defaultMappedFields, fields);\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const category = curFields.groupBy;\n        for (const header of headerItems) {\n            const headerData = {};\n            headerData[category] = header.textContent;\n            header.innerHTML = '';\n            if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                // eslint-disable-next-line\n                const compiledElement = compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, header);\n                if (compiledElement) {\n                    append(compiledElement, header);\n                }\n            }\n            else {\n                append(compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n            }\n        }\n        return headerItems;\n    }\n    ListBase.renderGroupTemplate = renderGroupTemplate;\n    function generateId() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    ListBase.generateId = generateId;\n    function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n        // Get SubList\n        const subDS = fieldData[fields.child] || [];\n        let hasChildren = fieldData[fields.hasChildren];\n        //Create Sub child\n        if (subDS.length) {\n            hasChildren = true;\n            element.classList.add(cssClass.hasChild);\n            if (options.processSubChild) {\n                const subLi = createListFromJson(createElement, subDS, options, ++level);\n                element.appendChild(subLi);\n            }\n        }\n        // Create expand and collapse node\n        if (!!options.expandCollapse && hasChildren && !options.template) {\n            element.firstElementChild.classList.add(cssClass.iconWrapper);\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            const expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n            expandElement([createElement('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));\n        }\n    }\n    function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        let text = item;\n        let value = item;\n        let dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n            dataSource = item;\n            text = (typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number') ?\n                fieldData[fields.text] : (fieldData[fields.text] || '');\n            value = fieldData[fields.value];\n        }\n        let elementID;\n        if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id])\n            && fieldData[fields.id] !== '') {\n            elementID = id;\n        }\n        else {\n            elementID = id + '-' + index;\n        }\n        const li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        // eslint-disable-next-line no-prototype-builtins\n        if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n            li.classList.add(cssClass.disabled);\n        }\n        if (grpLI) {\n            li.innerText = text;\n        }\n        else {\n            li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n            li.setAttribute('role', 'option');\n            // eslint-disable-next-line no-prototype-builtins\n            if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                setAttribute(li, fieldData[fields.htmlAttributes]);\n            }\n            if (innerElements.length && !curOpt.itemNavigable) {\n                append(innerElements, li);\n            }\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n            }\n            else {\n                if (innerElements.length && curOpt.itemNavigable) {\n                    append(innerElements, li);\n                }\n                li.appendChild(document.createTextNode(text));\n            }\n        }\n        return li;\n    }\n    function getModuleClass(moduleName) {\n        let moduleClass;\n        // eslint-disable-next-line\n        return moduleClass = {\n            li: `e-${moduleName}-item`,\n            ul: `e-${moduleName}-parent e-ul`,\n            group: `e-${moduleName}-group-item`,\n            icon: `e-${moduleName}-icon`,\n            text: `e-${moduleName}-text`,\n            check: `e-${moduleName}-check`,\n            checked: 'e-checked',\n            selected: 'e-selected',\n            expanded: 'e-expanded',\n            textContent: 'e-text-content',\n            hasChild: 'e-has-child',\n            level: 'e-level',\n            url: `e-${moduleName}-url`,\n            collapsible: 'e-icon-collapsible',\n            disabled: 'e-disabled',\n            image: `e-${moduleName}-img`,\n            iconWrapper: 'e-icon-wrapper',\n            anchorWrap: 'e-anchor-wrap',\n            navigable: 'e-navigable'\n        };\n    }\n    function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n        const fieldData = getFieldValues(dataSource, fields);\n        const attr = { href: fieldData[fields.url] };\n        // eslint-disable-next-line no-prototype-builtins\n        if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n            merge(attr, fieldData[fields.urlAttributes]);\n            attr.href = fieldData[fields.url] ? fieldData[fields.url] :\n                fieldData[fields.urlAttributes].href;\n        }\n        let anchorTag;\n        if (!isFullNavigation) {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });\n        }\n        else {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url });\n            const anchorWrapper = createElement('div', { className: cssClass.anchorWrap });\n            if (innerElements && innerElements.length) {\n                append(innerElements, anchorWrapper);\n            }\n            anchorWrapper.appendChild(document.createTextNode(text));\n            append([anchorWrapper], anchorTag);\n        }\n        setAttribute(anchorTag, attr);\n        return anchorTag;\n    }\n    // tslint:disable-next-line\n    /* tslint:disable:align */\n    function generateLI(createElement, item, fieldData, \n    // eslint-disable-next-line\n    fields, className, options, componentInstance) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        let text = item;\n        let uID;\n        let grpLI;\n        let dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number') {\n            dataSource = item;\n            text = fieldData[fields.text] || '';\n            // tslint:disable-next-line\n            uID = (isNullOrUndefined(fieldData['_id'])) ? fieldData[fields.id] : fieldData['_id'];\n            // eslint-disable-next-line no-prototype-builtins\n            grpLI = (item.hasOwnProperty('isHeader') && item.isHeader)\n                ? true : false;\n        }\n        if (options && options.enableHtmlSanitizer) {\n            // eslint-disable-next-line no-self-assign\n            text = text;\n        }\n        const li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (!isNullOrUndefined(uID) === true) {\n            li.setAttribute('data-uid', uID);\n        }\n        else {\n            li.setAttribute('data-uid', generateId());\n        }\n        if (grpLI && options && options.groupTemplate) {\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            const compiledString = compileTemplate(options.groupTemplate);\n            if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                // eslint-disable-next-line\n                const compiledElement = compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, li);\n                if (compiledElement) {\n                    append(compiledElement, li);\n                }\n            }\n            else {\n                append(compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n            }\n        }\n        else if (!grpLI && options && options.template) {\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            const compiledString = compileTemplate(options.template);\n            if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                // eslint-disable-next-line\n                const compiledElement = compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate, null, li);\n                if (compiledElement) {\n                    append(compiledElement, li);\n                }\n            }\n            else {\n                append(compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate), li);\n            }\n        }\n        else {\n            const innerDiv = createElement('div', {\n                className: cssClass.textContent,\n                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {})\n            });\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n            }\n            else {\n                const element = createElement('span', {\n                    className: cssClass.text,\n                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {})\n                });\n                if (options && options.enableHtmlSanitizer) {\n                    element.innerText = text;\n                }\n                else {\n                    element.innerHTML = text;\n                }\n                innerDiv.appendChild(element);\n            }\n            li.appendChild(innerDiv);\n        }\n        return li;\n    }\n    /**\n     * Returns UL element based on the given LI element.\n     *\n     * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n     *\n     * @param  {string} className? - Specifies class name that need to be added in UL element.\n     *\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateUL(createElement, liElement, className, options) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        const ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        const ulElement = createElement('ul', {\n            className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})\n        });\n        append(liElement, ulElement);\n        return ulElement;\n    }\n    ListBase.generateUL = generateUL;\n    /**\n     * Returns LI element with additional DIV tag based on the given LI element.\n     *\n     * @param  {liElement} liElement - Specifies LI element.\n     *\n     * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n     *\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateIcon(createElement, liElement, className, options) {\n        const curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n        expandElement([createElement('div', {\n                className: 'e-icons ' + curOpt.expandIconClass + ' ' +\n                    (isNullOrUndefined(className) ? '' : className)\n            })], liElement.querySelector('.' + cssClass.textContent));\n        return liElement;\n    }\n    ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n *\n * @param {Object} dataSource - Specifies an  JSON or String data.\n *\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\nfunction getFieldValues(dataItem, fields) {\n    const fieldData = {};\n    if (isNullOrUndefined(dataItem) || typeof (dataItem) === 'string' || typeof (dataItem) === 'number'\n        || !isNullOrUndefined(dataItem.isHeader)) {\n        return dataItem;\n    }\n    else {\n        for (const field of Object.keys(fields)) {\n            const dataField = fields[field];\n            const value = !isNullOrUndefined(dataField) &&\n                typeof (dataField) === 'string' ? getValue(dataField, dataItem) : undefined;\n            if (!isNullOrUndefined(value)) {\n                fieldData[dataField] = value;\n            }\n        }\n    }\n    return fieldData;\n}\nfunction compileTemplate(template) {\n    if (template) {\n        try {\n            if (document.querySelector(template)) {\n                return compile(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        catch (e) {\n            return compile(template);\n        }\n    }\n    return undefined;\n}\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\nconst effectsConfig = {\n    'None': [],\n    'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n    'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n    'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nconst effectsRTLConfig = {\n    'None': [],\n    'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n    'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n    'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\n// don't use space in classnames.\nconst classNames = {\n    root: 'e-listview',\n    hover: 'e-hover',\n    selected: 'e-active',\n    focused: 'e-focused',\n    parentItem: 'e-list-parent',\n    listItem: 'e-list-item',\n    listIcon: 'e-list-icon',\n    textContent: 'e-text-content',\n    listItemText: 'e-list-text',\n    groupListItem: 'e-list-group-item',\n    hasChild: 'e-has-child',\n    view: 'e-view',\n    header: 'e-list-header',\n    headerText: 'e-headertext',\n    headerTemplateText: 'e-headertemplate-text',\n    text: 'e-text',\n    disable: 'e-disabled',\n    content: 'e-content',\n    icon: 'e-icons',\n    backIcon: 'e-icon-back',\n    checkboxWrapper: 'e-checkbox-wrapper',\n    checkbox: 'e-checkbox',\n    checked: 'e-check',\n    checklist: 'e-checklist',\n    checkboxIcon: 'e-frame',\n    checkboxRight: 'e-checkbox-right',\n    checkboxLeft: 'e-checkbox-left',\n    listviewCheckbox: 'e-listview-checkbox',\n    itemCheckList: 'e-checklist',\n    virtualElementContainer: 'e-list-virtualcontainer'\n};\nconst LISTVIEW_TEMPLATE_PROPERTY = 'Template';\nconst LISTVIEW_GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nconst LISTVIEW_HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nconst swipeVelocity = 0.5;\n/**\n * Represents the field settings of the ListView.\n */\nclass FieldSettings extends ChildProperty {\n}\n__decorate([\n    Property('id')\n], FieldSettings.prototype, \"id\", void 0);\n__decorate([\n    Property('text')\n], FieldSettings.prototype, \"text\", void 0);\n__decorate([\n    Property('isChecked')\n], FieldSettings.prototype, \"isChecked\", void 0);\n__decorate([\n    Property('isVisible')\n], FieldSettings.prototype, \"isVisible\", void 0);\n__decorate([\n    Property('enabled')\n], FieldSettings.prototype, \"enabled\", void 0);\n__decorate([\n    Property('iconCss')\n], FieldSettings.prototype, \"iconCss\", void 0);\n__decorate([\n    Property('child')\n], FieldSettings.prototype, \"child\", void 0);\n__decorate([\n    Property('tooltip')\n], FieldSettings.prototype, \"tooltip\", void 0);\n__decorate([\n    Property('groupBy')\n], FieldSettings.prototype, \"groupBy\", void 0);\n__decorate([\n    Property('text')\n], FieldSettings.prototype, \"sortBy\", void 0);\n__decorate([\n    Property('htmlAttributes')\n], FieldSettings.prototype, \"htmlAttributes\", void 0);\n__decorate([\n    Property('tableName')\n], FieldSettings.prototype, \"tableName\", void 0);\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favorite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var listviewObject = new ListView({});\n *   listviewObject.appendTo(\"#listview\");\n * ```\n */\nlet ListView = class ListView extends Component {\n    /**\n     * Constructor for creating the widget\n     *\n     * @param options\n     *\n     * @param element\n     */\n    constructor(options, element) {\n        super(options, element);\n        this.previousSelectedItems = [];\n        this.hiddenItems = [];\n        this.enabledItems = [];\n        this.disabledItems = [];\n    }\n    /**\n     * @param newProp\n     *\n     * @param oldProp\n     *\n     * @private\n     */\n    onPropertyChanged(newProp, oldProp) {\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'htmlAttributes':\n                    this.setHTMLAttribute();\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enable':\n                    this.setEnable();\n                    break;\n                case 'width':\n                case 'height':\n                    this.setSize();\n                    break;\n                case 'enableRtl':\n                    this.setEnableRTL();\n                    break;\n                case 'fields':\n                    // eslint-disable-next-line\n                    this.listBaseOption.fields = this.fields.properties;\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'headerTitle':\n                    if (!this.curDSLevel.length) {\n                        this.header(this.headerTitle, false, 'header');\n                    }\n                    break;\n                case 'query':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'showHeader':\n                    this.header(this.headerTitle, false, 'header');\n                    break;\n                case 'enableVirtualization':\n                    if (!isNullOrUndefined(this.contentContainer)) {\n                        detach(this.contentContainer);\n                    }\n                    this.refresh();\n                    break;\n                case 'showCheckBox':\n                case 'checkBoxPosition':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.setCheckbox();\n                    }\n                    break;\n                case 'dataSource':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'sortOrder':\n                case 'template':\n                    if (!this.enableVirtualization) {\n                        this.refresh();\n                    }\n                    break;\n                case 'showIcon':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.listBaseOption.showIcon = this.showIcon;\n                        this.curViewDS = this.getSubDS();\n                        this.resetCurrentList();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    // Model Changes\n    setHTMLAttribute() {\n        if (Object.keys(this.htmlAttributes).length) {\n            attributes(this.element, this.htmlAttributes);\n        }\n    }\n    setCSSClass(oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' ').filter((css) => css));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' ').filter((css) => css));\n        }\n    }\n    setSize() {\n        this.element.style.height = formatUnit(this.height);\n        this.element.style.width = formatUnit(this.width);\n        this.isWindow = this.element.clientHeight ? false : true;\n    }\n    setEnable() {\n        this.enableElement(this.element, this.enable);\n    }\n    setEnableRTL() {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    }\n    enableElement(element, isEnabled) {\n        if (isEnabled) {\n            element.classList.remove(classNames.disable);\n        }\n        else {\n            element.classList.add(classNames.disable);\n        }\n    }\n    // Support Component Functions\n    header(text, showBack, prop) {\n        if (this.headerEle === undefined && this.showHeader) {\n            if (this.enableHtmlSanitizer) {\n                this.setProperties({ headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle) }, true);\n            }\n            this.headerEle = this.createElement('div', { className: classNames.header });\n            const innerHeaderEle = this.createElement('span', { className: classNames.headerText, innerHTML: this.headerTitle });\n            const textEle = this.createElement('div', { className: classNames.text, innerHTML: innerHeaderEle.outerHTML });\n            const hedBackButton = this.createElement('div', {\n                className: classNames.icon + ' ' + classNames.backIcon + ' e-but-back',\n                attrs: { style: 'display:none;' }\n            });\n            this.headerEle.appendChild(hedBackButton);\n            this.headerEle.appendChild(textEle);\n            if (this.headerTemplate) {\n                // eslint-disable-next-line\n                const compiledString = compile(this.headerTemplate);\n                const headerTemplateEle = this.createElement('div', { className: classNames.headerTemplateText });\n                // eslint-disable-next-line\n                const compiledElement = compiledString({}, this, prop, this.LISTVIEW_HEADERTEMPLATE_ID, null, null, this.headerEle);\n                if (compiledElement) {\n                    append(compiledElement, headerTemplateEle);\n                }\n                append([headerTemplateEle], this.headerEle);\n                // eslint-disable-next-line\n                if (this.isReact) {\n                    this.renderReactTemplates();\n                }\n            }\n            if (this.headerTemplate && this.headerTitle) {\n                textEle.classList.add('header');\n            }\n            this.element.classList.add('e-has-header');\n            prepend([this.headerEle], this.element);\n        }\n        else if (this.headerEle) {\n            if (this.showHeader) {\n                this.headerEle.style.display = '';\n                const textEle = this.headerEle.querySelector('.' + classNames.headerText);\n                const hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n                if (this.enableHtmlSanitizer) {\n                    text = SanitizeHtmlHelper.sanitize(text);\n                }\n                textEle.innerHTML = text;\n                if (this.headerTemplate && showBack) {\n                    textEle.parentElement.classList.remove('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('nested-header');\n                }\n                if (this.headerTemplate && !showBack) {\n                    textEle.parentElement.classList.add('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.remove('nested-header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('header');\n                }\n                if (showBack === true) {\n                    hedBackButton.style.display = '';\n                }\n                else {\n                    hedBackButton.style.display = 'none';\n                }\n            }\n            else {\n                this.headerEle.style.display = 'none';\n            }\n        }\n    }\n    // Animation Related Functions\n    switchView(fromView, toView, reverse) {\n        if (fromView && toView) {\n            const fPos = fromView.style.position;\n            const overflow = (this.element.style.overflow !== 'hidden') ? this.element.style.overflow : '';\n            fromView.style.position = 'absolute';\n            fromView.classList.add('e-view');\n            let anim;\n            let duration = this.animation.duration;\n            if (this.animation.effect) {\n                anim = (this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect]);\n            }\n            else {\n                const slideLeft = 'SlideLeft';\n                anim = effectsConfig[slideLeft];\n                reverse = this.enableRtl;\n                duration = 0;\n            }\n            this.element.style.overflow = 'hidden';\n            this.aniObj.animate(fromView, {\n                name: (reverse === true ? anim[0] : anim[1]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                // eslint-disable-next-line\n                end: (model) => {\n                    fromView.style.display = 'none';\n                    this.element.style.overflow = overflow;\n                    fromView.style.position = fPos;\n                    fromView.classList.remove('e-view');\n                }\n            });\n            toView.style.display = '';\n            this.aniObj.animate(toView, {\n                name: (reverse === true ? anim[2] : anim[3]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                end: () => {\n                    this.trigger('actionComplete');\n                }\n            });\n            this.curUL = toView;\n        }\n    }\n    preRender() {\n        if (this.template) {\n            try {\n                if (document.querySelectorAll(this.template).length) {\n                    this.setProperties({ template: document.querySelector(this.template).innerHTML.trim() }, true);\n                }\n            }\n            catch (e) {\n                compile(this.template);\n            }\n        }\n        this.listBaseOption = {\n            template: this.template,\n            headerTemplate: this.headerTemplate,\n            groupTemplate: this.groupTemplate, expandCollapse: true, listClass: '',\n            ariaAttributes: {\n                itemRole: 'option', listRole: 'presentation', itemText: '',\n                groupItemRole: 'group', wrapperRole: 'presentation'\n            },\n            // eslint-disable-next-line\n            fields: (this.fields.properties),\n            sortOrder: this.sortOrder,\n            showIcon: this.showIcon,\n            itemCreated: this.renderCheckbox.bind(this),\n            templateID: `${this.element.id}${LISTVIEW_TEMPLATE_PROPERTY}`,\n            groupTemplateID: `${this.element.id}${LISTVIEW_GROUPTEMPLATE_PROPERTY}`,\n            enableHtmlSanitizer: this.enableHtmlSanitizer,\n        };\n        this.initialization();\n    }\n    initialization() {\n        this.curDSLevel = [];\n        this.animateOptions = {};\n        this.curViewDS = [];\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.selectedData = [];\n        this.selectedId = [];\n        this.LISTVIEW_TEMPLATE_ID = `${this.element.id}${LISTVIEW_TEMPLATE_PROPERTY}`;\n        this.LISTVIEW_GROUPTEMPLATE_ID = `${this.element.id}${LISTVIEW_GROUPTEMPLATE_PROPERTY}`;\n        this.LISTVIEW_HEADERTEMPLATE_ID = `${this.element.id}${LISTVIEW_HEADERTEMPLATE_PROPERTY}`;\n        this.aniObj = new Animation(this.animateOptions);\n        this.removeElement(this.curUL);\n        this.removeElement(this.ulElement);\n        this.removeElement(this.headerEle);\n        this.removeElement(this.contentContainer);\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = this.contentContainer = undefined;\n    }\n    renderCheckbox(args) {\n        if (args.item.classList.contains(classNames.hasChild)) {\n            this.isNestedList = true;\n        }\n        if (this.showCheckBox && this.isValidLI(args.item)) {\n            let checkboxElement;\n            let fieldData;\n            // eslint-disable-next-line prefer-const\n            checkboxElement = createCheckBox(this.createElement, false, {\n                checked: false, enableRtl: this.enableRtl,\n                cssClass: classNames.listviewCheckbox\n            });\n            checkboxElement.setAttribute('role', 'checkbox');\n            const frameElement = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n            args.item.classList.add(classNames.itemCheckList);\n            args.item.firstElementChild.classList.add(classNames.checkbox);\n            if (typeof this.dataSource[0] !== 'string' && typeof this.dataSource[0] !== 'number') {\n                fieldData = getFieldValues(args.curData, this.listBaseOption.fields);\n                if (fieldData[this.listBaseOption.fields.isChecked]) {\n                    this.checkInternally(args, checkboxElement);\n                }\n            }\n            else if (((typeof this.dataSource[0] === 'string' ||\n                typeof this.dataSource[0] === 'number') && this.selectedData.indexOf(args.text) !== -1)) {\n                this.checkInternally(args, checkboxElement);\n            }\n            checkboxElement.setAttribute('aria-checked', frameElement.classList.contains(classNames.checked) ? 'true' : 'false');\n            if (this.checkBoxPosition === 'Left') {\n                checkboxElement.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n            }\n            else {\n                checkboxElement.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.appendChild(checkboxElement);\n            }\n            this.currentLiElements.push(args.item);\n            if (this.checkBoxPosition === 'Left') {\n                this.virtualCheckBox = args.item.firstElementChild.children[0];\n            }\n            else {\n                this.virtualCheckBox = args.item.firstElementChild.lastElementChild;\n            }\n        }\n    }\n    checkInternally(args, checkboxElement) {\n        args.item.classList.add(classNames.selected);\n        args.item.setAttribute('aria-selected', 'true');\n        checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n        checkboxElement.setAttribute('aria-checked', 'true');\n    }\n    /**\n     * Checks the specific list item by passing the unchecked fields as an argument to this method.\n     *\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    checkItem(item) {\n        this.toggleCheckBase(item, true);\n    }\n    toggleCheckBase(item, checked) {\n        if (this.showCheckBox) {\n            let liElement = item;\n            if (item instanceof Object && item.constructor !== HTMLLIElement) {\n                liElement = this.getLiFromObjOrElement(item);\n            }\n            if (!isNullOrUndefined(liElement)) {\n                const checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n                if (checked === true) {\n                    liElement.classList.add(classNames.selected);\n                }\n                else {\n                    liElement.classList.remove(classNames.selected);\n                }\n                liElement.setAttribute('aria-selected', checked ? 'true' : 'false');\n                if (checked === true) {\n                    checkboxIcon.classList.add(classNames.checked);\n                }\n                else {\n                    checkboxIcon.classList.remove(classNames.checked);\n                }\n                checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n            }\n            this.setSelectedItemData(liElement);\n        }\n    }\n    /**\n     * Uncheck the specific list item by passing the checked fields as an argument to this method.\n     *\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    uncheckItem(item) {\n        this.toggleCheckBase(item, false);\n    }\n    /**\n     * Checks all the unchecked items in the ListView.\n     */\n    checkAllItems() {\n        this.toggleAllCheckBase(true);\n    }\n    /**\n     * Uncheck all the checked items in ListView.\n     */\n    uncheckAllItems() {\n        this.toggleAllCheckBase(false);\n    }\n    toggleAllCheckBase(checked) {\n        if (this.showCheckBox) {\n            for (let i = 0; i < this.liCollection.length; i++) {\n                const checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n                if (checkIcon) {\n                    if (checked) {\n                        if (!checkIcon.classList.contains(classNames.checked)) {\n                            this.checkItem(this.liCollection[i]);\n                        }\n                    }\n                    else {\n                        if (checkIcon.classList.contains(classNames.checked)) {\n                            this.uncheckItem(this.liCollection[i]);\n                        }\n                    }\n                }\n            }\n            if (this.enableVirtualization) {\n                this.virtualizationModule.checkedItem(checked);\n            }\n        }\n    }\n    setCheckbox() {\n        if (this.showCheckBox) {\n            const liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n            const args = {\n                item: undefined, curData: undefined, dataSource: undefined, fields: undefined,\n                options: undefined, text: ''\n            };\n            for (let i = 0; i < liCollection.length; i++) {\n                const element = liCollection[i];\n                args.item = element;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                args.curData = this.getItemData(element);\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n                this.renderCheckbox(args);\n                if (args.item.classList.contains(classNames.selected)) {\n                    this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n        }\n        else {\n            const liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n            for (let i = 0; i < liCollection.length; i++) {\n                const element = liCollection[i];\n                element.classList.remove(classNames.selected);\n                element.firstElementChild.classList.remove(classNames.checkbox);\n                this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n            }\n            if (this.selectedItems) {\n                this.selectedItems.item.classList.add(classNames.selected);\n            }\n        }\n    }\n    /**\n     * Refresh the height of the list item only on enabling the virtualization property.\n     */\n    refreshItemHeight() {\n        if (this.virtualizationModule) {\n            this.virtualizationModule.refreshItemHeight();\n        }\n    }\n    clickHandler(e) {\n        const target = e.target;\n        const classList = target.classList;\n        let closestElement;\n        if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n        else {\n            let li = closest(target.parentNode, '.' + classNames.listItem);\n            if (li === null) {\n                li = target;\n            }\n            this.removeFocus();\n            if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n                if (e.target.classList.contains(classNames.checkboxIcon)) {\n                    li.classList.add(classNames.focused);\n                    if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                        const args = {\n                            curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                            text: undefined, item: li\n                        };\n                        this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                    }\n                    else {\n                        this.uncheckItem(li);\n                        li.classList.add(classNames.focused);\n                    }\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.setCheckboxLI(li, e);\n                    }\n                    if (e) {\n                        const eventArgs = this.selectEventData(li, e);\n                        const checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n                        merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n                        this.trigger('select', eventArgs);\n                    }\n                }\n                else if (li.classList.contains(classNames.hasChild)) {\n                    this.removeHover();\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.setSelectLI(li, e);\n                    li.classList.remove(classNames.selected);\n                }\n                else {\n                    this.setCheckboxLI(li, e);\n                }\n            }\n            else {\n                this.setSelectLI(li, e);\n            }\n            closestElement = closest(e.target, 'li');\n            if (!isNullOrUndefined(closestElement)) {\n                if (closestElement.classList.contains('e-has-child') &&\n                    !e.target.parentElement.classList.contains('e-listview-checkbox')) {\n                    closestElement.classList.add(classNames.disable);\n                }\n            }\n        }\n    }\n    removeElement(element) {\n        return element && element.parentNode && element.parentNode.removeChild(element);\n    }\n    hoverHandler(e) {\n        const curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n        this.setHoverLI(curLi);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    leaveHandler(e) {\n        this.removeHover();\n    }\n    homeKeyHandler(e, end) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            if (this.selectedItems) {\n                (this.selectedItems.item).setAttribute('aria-selected', 'false');\n            }\n            const li = this.curUL.querySelectorAll('.' + classNames.listItem);\n            const focusedElement = this.curUL.querySelector('.' + classNames.focused) ||\n                this.curUL.querySelector('.' + classNames.selected);\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (!this.showCheckBox) {\n                    focusedElement.classList.remove(classNames.selected);\n                }\n            }\n            const index = !end ? 0 : li.length - 1;\n            if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n                li[index].classList.add(classNames.focused);\n            }\n            else {\n                this.setSelectLI(li[index], e);\n            }\n            if (li[index]) {\n                this.element.setAttribute('aria-activedescendant', li[index].id.toString());\n            }\n            else {\n                this.element.removeAttribute('aria-activedescendant');\n            }\n        }\n    }\n    onArrowKeyDown(e, prev) {\n        let siblingLI;\n        let li;\n        const hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n        if (hasChild || this.showCheckBox) {\n            li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            if (!isNullOrUndefined(siblingLI)) {\n                if (li) {\n                    li.classList.remove(classNames.focused);\n                    if (!this.showCheckBox) {\n                        li.classList.remove(classNames.selected);\n                    }\n                }\n                if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n                    siblingLI.classList.add(classNames.focused);\n                }\n                else {\n                    this.setSelectLI(siblingLI, e);\n                }\n            }\n        }\n        else {\n            li = this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            this.setSelectLI(siblingLI, e);\n        }\n        if (siblingLI) {\n            this.element.setAttribute('aria-activedescendant', siblingLI.id.toString());\n        }\n        else {\n            this.element.removeAttribute('aria-activedescendant');\n        }\n        return siblingLI;\n    }\n    arrowKeyHandler(e, prev) {\n        e.preventDefault();\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            const siblingLI = this.onArrowKeyDown(e, prev);\n            const elementTop = this.element.getBoundingClientRect().top;\n            const elementHeight = this.element.getBoundingClientRect().height;\n            const firstItemBounds = this.curUL.querySelector('.' + classNames.listItem).getBoundingClientRect();\n            let heightDiff;\n            let groupItemBounds;\n            if (this.fields.groupBy) {\n                groupItemBounds = this.curUL.querySelector('.' + classNames.groupListItem).getBoundingClientRect();\n            }\n            if (siblingLI) {\n                const siblingTop = siblingLI.getBoundingClientRect().top;\n                const siblingHeight = siblingLI.getBoundingClientRect().height;\n                if (!prev) {\n                    const height = this.isWindow ? window.innerHeight : elementHeight;\n                    heightDiff = this.isWindow ? (siblingTop + siblingHeight) :\n                        ((siblingTop - elementTop) + siblingHeight);\n                    if (heightDiff > height) {\n                        if (this.isWindow === true) {\n                            window.scroll(0, pageYOffset + (heightDiff - height));\n                        }\n                        else {\n                            this.element.scrollTop = this.element.scrollTop + (heightDiff - height);\n                        }\n                    }\n                }\n                else {\n                    heightDiff = this.isWindow ? siblingTop : (siblingTop - elementTop);\n                    if (heightDiff < 0) {\n                        if (this.isWindow === true) {\n                            window.scroll(0, pageYOffset + heightDiff);\n                        }\n                        else {\n                            this.element.scrollTop = this.element.scrollTop + heightDiff;\n                        }\n                    }\n                }\n            }\n            else if (this.enableVirtualization && prev && this.virtualizationModule.uiFirstIndex) {\n                this.onUIScrolled = () => {\n                    this.onArrowKeyDown(e, prev);\n                    this.onUIScrolled = undefined;\n                };\n                heightDiff = this.virtualizationModule.listItemHeight;\n                if (this.isWindow === true) {\n                    window.scroll(0, pageYOffset - heightDiff);\n                }\n                else {\n                    this.element.scrollTop = this.element.scrollTop - heightDiff;\n                }\n            }\n            else if (prev) {\n                if (this.showHeader && this.headerEle) {\n                    const topHeight = groupItemBounds ? groupItemBounds.top : firstItemBounds.top;\n                    const headerBounds = this.headerEle.getBoundingClientRect();\n                    heightDiff = headerBounds.top < 0 ? (headerBounds.height - topHeight) : 0;\n                    if (this.isWindow === true) {\n                        window.scroll(0, pageYOffset - heightDiff);\n                    }\n                    else {\n                        this.element.scrollTop = 0;\n                    }\n                }\n                else if (this.fields.groupBy) {\n                    heightDiff = this.isWindow ? (groupItemBounds.top < 0 ? groupItemBounds.top : 0) :\n                        (elementTop - firstItemBounds.top) + groupItemBounds.height;\n                    if (this.isWindow === true) {\n                        window.scroll(0, pageYOffset + heightDiff);\n                    }\n                    else {\n                        this.element.scrollTop = this.element.scrollTop - heightDiff;\n                    }\n                }\n            }\n        }\n    }\n    enterKeyHandler(e) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            const hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n            const li = this.curUL.querySelector('.' + classNames.focused);\n            if (hasChild && li) {\n                li.classList.remove(classNames.focused);\n                if (this.showCheckBox) {\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.removeHover();\n                }\n                this.setSelectLI(li, e);\n            }\n        }\n    }\n    spaceKeyHandler(e) {\n        if (this.enable && this.showCheckBox && Object.keys(this.dataSource).length && this.curUL) {\n            const li = this.curUL.querySelector('.' + classNames.focused);\n            let checkboxElement;\n            let checkIcon;\n            if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                const args = {\n                    curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                    text: undefined, item: li\n                };\n                checkboxElement = args.item.querySelector('.' + classNames.checkboxWrapper);\n                this.checkInternally(args, checkboxElement);\n                checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            }\n            else {\n                this.uncheckItem(li);\n            }\n            const eventArgs = this.selectEventData(li, e);\n            merge(eventArgs, { isChecked: checkIcon ? checkIcon.classList.contains(classNames.checked) : false });\n            this.trigger('select', eventArgs);\n        }\n    }\n    keyActionHandler(e) {\n        switch (e.keyCode) {\n            case 36:\n                this.homeKeyHandler(e);\n                break;\n            case 35:\n                this.homeKeyHandler(e, true);\n                break;\n            case 40:\n                this.arrowKeyHandler(e);\n                break;\n            case 38:\n                this.arrowKeyHandler(e, true);\n                break;\n            case 13:\n                this.enterKeyHandler(e);\n                break;\n            case 8:\n                if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                    this.uncheckAllItems();\n                }\n                this.back();\n                break;\n            case 32:\n                this.spaceKeyHandler(e);\n                break;\n        }\n    }\n    swipeActionHandler(e) {\n        if (e.swipeDirection === 'Right' && e.velocity > swipeVelocity && e.originalEvent.type === 'touchend') {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n    }\n    focusout() {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            const focusedElement = this.curUL.querySelector('.' + classNames.focused);\n            const activeElement = this.curUL.querySelector('[aria-selected = true]');\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (activeElement && !this.showCheckBox) {\n                    activeElement.classList.add(classNames.selected);\n                }\n            }\n        }\n    }\n    wireEvents() {\n        EventHandler.add(this.element, 'keydown', this.keyActionHandler, this);\n        EventHandler.add(this.element, 'click', this.clickHandler, this);\n        EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusout, this);\n        this.touchModule = new Touch(this.element, { swipe: this.swipeActionHandler.bind(this) });\n    }\n    unWireEvents() {\n        EventHandler.remove(this.element, 'click', this.clickHandler);\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        this.touchModule.destroy();\n    }\n    removeFocus() {\n        const focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n        for (const ele of focusedLI) {\n            ele.classList.remove(classNames.focused);\n        }\n    }\n    removeHover() {\n        const hoverLI = this.element.querySelector('.' + classNames.hover);\n        if (hoverLI) {\n            hoverLI.classList.remove(classNames.hover);\n        }\n    }\n    removeSelect(li) {\n        if (isNullOrUndefined(li)) {\n            const selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n            for (const ele of selectedLI) {\n                if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n                    continue;\n                }\n                else {\n                    ele.setAttribute('aria-selected', 'false');\n                    ele.classList.remove(classNames.selected);\n                }\n            }\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n    }\n    isValidLI(li) {\n        return (li && li.classList.contains(classNames.listItem)\n            && !li.classList.contains(classNames.groupListItem)\n            && !li.classList.contains(classNames.disable));\n    }\n    setCheckboxLI(li, e) {\n        if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n            if (this.curUL.querySelector('.' + classNames.focused)) {\n                this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n            }\n            li.classList.add(classNames.focused);\n            const checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n            const checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            this.removeHover();\n            if (!checkIcon.classList.contains(classNames.checked)) {\n                checkIcon.classList.add(classNames.checked);\n                li.classList.add(classNames.selected);\n                li.setAttribute('aria-selected', 'true');\n            }\n            else {\n                checkIcon.classList.remove(classNames.checked);\n                li.classList.remove(classNames.selected);\n                li.setAttribute('aria-selected', 'false');\n            }\n            checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ?\n                'true' : 'false');\n            const eventArgs = this.selectEventData(li, e);\n            merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setCheckboxLI(li, e);\n            }\n            this.trigger('select', eventArgs);\n            this.setSelectedItemData(li);\n            this.renderSubList(li);\n        }\n    }\n    selectEventData(li, e) {\n        const data = this.getItemData(li);\n        const fieldData = getFieldValues(data, this.listBaseOption.fields);\n        let selectedItem;\n        if (!isNullOrUndefined(data)\n            && typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') {\n            selectedItem = { item: li, text: li && li.innerText.trim(), data: this.dataSource };\n        }\n        else {\n            selectedItem =\n                // eslint-disable-next-line\n                { item: li, text: fieldData && fieldData[this.listBaseOption.fields.text],\n                    // eslint-disable-next-line\n                    data: data };\n        }\n        const eventArgs = {};\n        merge(eventArgs, selectedItem);\n        if (e) {\n            merge(eventArgs, { isInteracted: true, event: e, index: this.curUL && Array.prototype.indexOf.call(this.curUL.children, li) });\n        }\n        return eventArgs;\n    }\n    setSelectedItemData(li) {\n        const data = this.getItemData(li);\n        // eslint-disable-next-line\n        const fieldData = getFieldValues(data, this.listBaseOption.fields);\n        if (!isNullOrUndefined(data) && ((typeof this.dataSource[0] === 'string') ||\n            (typeof this.dataSource[0] === 'number'))) {\n            this.selectedItems = {\n                item: li,\n                text: li && li.innerText.trim(),\n                data: this.dataSource\n            };\n        }\n        else {\n            this.selectedItems = {\n                item: li,\n                // eslint-disable-next-line\n                text: fieldData && fieldData[this.listBaseOption.fields.text],\n                // eslint-disable-next-line\n                data: data\n            };\n        }\n    }\n    setSelectLI(li, e) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n            if (!this.showCheckBox) {\n                this.removeSelect();\n            }\n            li.classList.add(classNames.selected);\n            li.setAttribute('aria-selected', 'true');\n            this.removeHover();\n            this.setSelectedItemData(li);\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setSelectLI(li, e);\n            }\n            const eventArgs = this.selectEventData(li, e);\n            this.trigger('select', eventArgs);\n            this.selectedLI = li;\n            this.renderSubList(li);\n        }\n    }\n    setHoverLI(li) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n            const lastLi = this.element.querySelectorAll('.' + classNames.hover);\n            if (lastLi && lastLi.length) {\n                removeClass(lastLi, classNames.hover);\n            }\n            if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n                li.classList.add(classNames.hover);\n            }\n        }\n    }\n    //Data Source Related Functions\n    getSubDS() {\n        const levelKeys = this.curDSLevel;\n        if (levelKeys.length) {\n            let ds = this.localData;\n            for (const key of levelKeys) {\n                const field = {};\n                // eslint-disable-next-line\n                field[this.fields.id] = key;\n                this.curDSJSON = this.findItemFromDS(ds, field);\n                const fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n                ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n            }\n            return ds;\n        }\n        return this.localData;\n    }\n    getItemData(li) {\n        const dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        const fields = this.getElementUID(li);\n        let curDS;\n        if (isNullOrUndefined(this.element.querySelector('.' + classNames.hasChild)) && this.fields.groupBy) {\n            curDS = this.curViewDS;\n        }\n        else {\n            curDS = dataSource;\n        }\n        return this.findItemFromDS(curDS, fields);\n    }\n    findItemFromDS(dataSource, fields, parent) {\n        let resultJSON;\n        if (dataSource && dataSource.length && fields) {\n            dataSource.some((data) => {\n                const fieldData = \n                // eslint-disable-next-line\n                getFieldValues(data, this.listBaseOption.fields);\n                //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n                if ((fields[this.fields.id] || fields[this.fields.text]) &&\n                    (!fields[this.fields.id] || (!isNullOrUndefined(fieldData[this.fields.id]) &&\n                        fieldData[this.fields.id].toString()) === fields[this.fields.id].toString()) &&\n                    (!fields[this.fields.text] || fieldData[this.fields.text] === fields[this.fields.text])) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (typeof data !== 'object' && dataSource.indexOf(data) !== -1) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (!isNullOrUndefined(fields[this.fields.id]) && isNullOrUndefined(fieldData[this.fields.id])) {\n                    const li = this.element.querySelector('[data-uid=\"'\n                        + fields[this.fields.id] + '\"]');\n                    // eslint-disable-next-line\n                    if (li && li.innerText.trim() === fieldData[this.fields.text]) {\n                        resultJSON = data;\n                    }\n                    // eslint-disable-next-line\n                }\n                else if (fieldData.hasOwnProperty(this.fields.child) && fieldData[this.fields.child].length) {\n                    resultJSON = this.findItemFromDS(fieldData[this.fields.child], fields, parent);\n                }\n                return !!resultJSON;\n            });\n        }\n        else {\n            resultJSON = dataSource;\n        }\n        return resultJSON;\n    }\n    getQuery() {\n        const columns = [];\n        const query = (this.query ? this.query : new Query());\n        if (!this.query) {\n            // eslint-disable-next-line\n            for (const column of Object.keys(this.fields.properties)) {\n                if (column !== 'tableName' && !!(this.fields[column]) &&\n                    this.fields[column] !==\n                        ListBase.defaultMappedFields[column]\n                    && columns.indexOf(this.fields[column]) === -1) {\n                    columns.push(this.fields[column]);\n                }\n            }\n            query.select(columns);\n            // eslint-disable-next-line\n            if (this.fields.properties.hasOwnProperty('tableName')) {\n                query.from(this.fields.tableName);\n            }\n        }\n        return query;\n    }\n    setViewDataSource(dataSource = this.localData) {\n        if (dataSource && this.fields.groupBy) {\n            if (this.sortOrder !== 'None') {\n                this.curViewDS = ListBase.groupDataSource(ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, (isNullOrUndefined(this.fields.sortBy)) ? this.fields.text : this.fields.sortBy)), this.listBaseOption.fields, this.sortOrder);\n            }\n            else {\n                this.curViewDS = ListBase.groupDataSource(dataSource, this.listBaseOption.fields, this.sortOrder);\n            }\n        }\n        else if (dataSource && this.sortOrder !== 'None') {\n            this.curViewDS = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, (isNullOrUndefined(this.fields.sortBy)) ? this.fields.text : this.fields.sortBy));\n        }\n        else {\n            this.curViewDS = dataSource;\n        }\n    }\n    isInAnimation() {\n        return this.curUL.classList.contains('.e-animate');\n    }\n    renderRemoteLists(e, listViewComponent) {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.localData = e.result;\n        listViewComponent.removeElement(listViewComponent.contentContainer);\n        this.renderList();\n        this.trigger('actionComplete', e);\n    }\n    triggerActionFailure(e) {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.trigger('actionFailure', e);\n    }\n    setLocalData() {\n        this.trigger('actionBegin');\n        // eslint-disable-next-line\n        const listViewComponent = this;\n        if (this.dataSource instanceof DataManager) {\n            if (this.dataSource.ready) {\n                this.dataSource.ready.then((e) => {\n                    /* eslint-disable */\n                    this.isOffline = this.dataSource.dataSource.offline;\n                    if (this.dataSource instanceof DataManager && this.isOffline) {\n                        this.renderRemoteLists(e, listViewComponent);\n                    }\n                }).catch((e) => {\n                    this.triggerActionFailure(e);\n                });\n            }\n            else {\n                this.dataSource.executeQuery(this.getQuery()).then((e) => {\n                    this.renderRemoteLists(e, listViewComponent);\n                }).catch((e) => {\n                    this.triggerActionFailure(e);\n                });\n            }\n        }\n        else if (!this.dataSource || !this.dataSource.length) {\n            const ul = this.element.querySelector('ul');\n            if (ul) {\n                remove(ul);\n                this.setProperties({ dataSource: ListBase.createJsonFromElement(ul) }, true);\n                this.localData = this.dataSource;\n                this.renderList();\n                this.trigger('actionComplete', { data: this.localData });\n            }\n        }\n        else {\n            this.localData = this.dataSource;\n            this.renderList();\n            this.trigger('actionComplete', { data: this.localData });\n        }\n    }\n    reRender() {\n        this.removeElement(this.headerEle);\n        this.removeElement(this.ulElement);\n        this.removeElement(this.contentContainer);\n        // eslint-disable-next-line\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        if (Object.keys(window).indexOf('ejsInterop') === -1) {\n            this.element.innerHTML = '';\n        }\n        this.headerEle = this.ulElement = this.liCollection = undefined;\n        this.header();\n        this.setLocalData();\n    }\n    resetCurrentList() {\n        this.setViewDataSource(this.curViewDS);\n        this.contentContainer.innerHTML = '';\n        this.createList();\n        this.renderIntoDom(this.curUL);\n    }\n    setAttributes(liElements) {\n        for (let i = 0; i < liElements.length; i++) {\n            const element = liElements[i];\n            if (element.classList.contains('e-list-item')) {\n                element.setAttribute('id', this.element.id + '_' + element.getAttribute('data-uid'));\n                element.setAttribute('aria-selected', 'false');\n                element.setAttribute('tabindex', '-1');\n            }\n        }\n    }\n    createList() {\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.ulElement = this.curUL = ListBase.createList(this.createElement, this.curViewDS, this.listBaseOption, null, this);\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        this.setAttributes(this.liCollection);\n    }\n    exceptionEvent(e) {\n        this.trigger('actionFailure', e);\n    }\n    UpdateCurrentUL() {\n        this.ulElement = this.curUL = this.element.querySelector('.' + classNames.parentItem);\n        if (this.curUL) {\n            // eslint-disable-next-line\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        }\n    }\n    renderSubList(li) {\n        this.liElement = li;\n        const uID = li.getAttribute('data-uid');\n        if (li.classList.contains(classNames.hasChild) && uID) {\n            const ul = closest(li.parentNode, '.' + classNames.parentItem);\n            let ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n            this.curDSLevel.push(uID);\n            this.setViewDataSource(this.getSubDS());\n            if (!ele) {\n                const data = this.curViewDS;\n                ele = ListBase.createListFromJson(this.createElement, data, this.listBaseOption, this.curDSLevel.length, null, this);\n                // eslint-disable-next-line\n                if (this.isReact) {\n                    this.renderReactTemplates();\n                }\n                const lists = ele.querySelectorAll('.' + classNames.listItem);\n                this.setAttributes(lists);\n                ele.setAttribute('pID', uID);\n                ele.style.display = 'none';\n                this.renderIntoDom(ele);\n            }\n            this.switchView(ul, ele);\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n            if (this.selectedItems) {\n                const fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields);\n                // eslint-disable-next-line\n                this.header((fieldData[this.listBaseOption.fields.text]), true, 'header');\n            }\n            this.selectedLI = undefined;\n        }\n    }\n    renderIntoDom(ele) {\n        this.contentContainer.appendChild(ele);\n    }\n    renderList(data) {\n        this.setViewDataSource(data);\n        if (this.enableVirtualization) {\n            if (Object.keys(this.dataSource).length) {\n                if ((this.template || this.groupTemplate) && !this.virtualizationModule.isNgTemplate()) {\n                    if (this.isReact) {\n                        if (typeof this.template == \"string\") {\n                            this.listBaseOption.template = null;\n                        }\n                        if (typeof this.groupTemplate == \"string\") {\n                            this.listBaseOption.groupTemplate = null;\n                        }\n                    }\n                    else {\n                        this.listBaseOption.template = null;\n                        this.listBaseOption.groupTemplate = null;\n                    }\n                    this.listBaseOption.itemCreated = this.virtualizationModule.createUIItem.bind(this.virtualizationModule);\n                }\n            }\n            this.virtualizationModule.uiVirtualization();\n        }\n        else {\n            this.createList();\n            this.contentContainer = this.createElement('div', { className: classNames.content });\n            this.element.appendChild(this.contentContainer);\n            this.renderIntoDom(this.ulElement);\n            // eslint-disable-next-line\n            if (this.isReact) {\n                this.renderReactTemplates();\n            }\n        }\n    }\n    getElementUID(obj) {\n        let fields = {};\n        if (obj instanceof Element) {\n            // eslint-disable-next-line\n            fields[this.fields.id] = obj.getAttribute('data-uid');\n        }\n        else {\n            fields = obj;\n        }\n        return fields;\n    }\n    /**\n     * Initializes the ListView component rendering.\n     */\n    render() {\n        this.element.classList.add(classNames.root);\n        attributes(this.element, { role: 'list', tabindex: '0' });\n        this.setCSSClass();\n        this.setEnableRTL();\n        this.setEnable();\n        this.setSize();\n        this.wireEvents();\n        this.header();\n        this.setLocalData();\n        this.setHTMLAttribute();\n        this.rippleFn = rippleEffect(this.element, {\n            selector: '.' + classNames.listItem\n        });\n        this.renderComplete();\n    }\n    /**\n     * It is used to destroy the ListView component.\n     */\n    destroy() {\n        // eslint-disable-next-line\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.unWireEvents();\n        const classAr = [classNames.root, classNames.disable, 'e-rtl',\n            'e-has-header', 'e-lib'].concat(this.cssClass.split(' ').filter((css) => css));\n        removeClass([this.element], classAr);\n        this.element.removeAttribute('role');\n        this.element.removeAttribute('tabindex');\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = undefined;\n        this.element.innerHTML = '';\n        super.destroy();\n    }\n    /**\n     * Switches back from the navigated sub list item.\n     */\n    back() {\n        const pID = this.curDSLevel[this.curDSLevel.length - 1];\n        if (pID === undefined || this.isInAnimation()) {\n            return;\n        }\n        this.curDSLevel.pop();\n        this.setViewDataSource(this.getSubDS());\n        let toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        const fromUL = this.curUL;\n        if (!toUL) {\n            this.createList();\n            this.renderIntoDom(this.ulElement);\n            toUL = this.curUL;\n        }\n        else {\n            toUL = toUL.parentElement;\n        }\n        const fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n        // eslint-disable-next-line\n        const text = fieldData[this.fields.text];\n        this.switchView(fromUL, toUL, true);\n        this.removeFocus();\n        const li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        li.classList.remove(classNames.disable);\n        li.classList.add(classNames.focused);\n        if (this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked)) {\n            li.setAttribute('aria-selected', 'true');\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        if (this.enableHtmlSanitizer) {\n            this.setProperties({ headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle) }, true);\n        }\n        this.header((this.curDSLevel.length ? text : this.headerTitle), (this.curDSLevel.length ? true : false), 'header');\n    }\n    /**\n     * Selects the list item from the ListView by passing the elements or field object.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    selectItem(item) {\n        if (this.enableVirtualization) {\n            this.virtualizationModule.selectItem(item);\n        }\n        else if (this.showCheckBox) {\n            this.setCheckboxLI(this.getLiFromObjOrElement(item));\n        }\n        else {\n            if (isNullOrUndefined(item) === true) {\n                this.removeSelect();\n            }\n            else {\n                this.setSelectLI(this.getLiFromObjOrElement(item));\n            }\n        }\n    }\n    getLiFromObjOrElement(obj) {\n        let li;\n        const dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (!isNullOrUndefined(obj)) {\n            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                if (obj instanceof Element) {\n                    const uid = obj.getAttribute('data-uid').toString();\n                    for (let i = 0; i < this.liCollection.length; i++) {\n                        if (this.liCollection[i].getAttribute('data-uid').toString() === uid) {\n                            li = this.liCollection[i];\n                            break;\n                        }\n                    }\n                }\n                else {\n                    Array.prototype.some.call(this.curUL.querySelectorAll('.' + classNames.listItem), (item) => {\n                        if (item.innerText.trim() === obj.toString()) {\n                            li = item;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                }\n            }\n            else {\n                const resultJSON = this.getItemData(obj);\n                const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n                if (resultJSON) {\n                    li = this.element.querySelector('[data-uid=\"'\n                        + fieldData[this.fields.id] + '\"]');\n                    if (!this.enableVirtualization && isNullOrUndefined(li)) {\n                        const curLi = this.element.querySelectorAll('.' + classNames.listItem);\n                        for (let i = 0; i < curLi.length; i++) {\n                            // eslint-disable-next-line\n                            if (curLi[i].innerText.trim() === fieldData[this.fields.text]) {\n                                li = curLi[i];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return li;\n    }\n    /**\n     * Selects multiple list items from the ListView.\n     *\n     * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of\n     *  elements or array of fields Object with ID and Text fields.\n     */\n    selectMultipleItems(item) {\n        if (!isNullOrUndefined(item)) {\n            for (let i = 0; i < item.length; i++) {\n                if (!isNullOrUndefined(item[i])) {\n                    this.selectItem(item[i]);\n                }\n            }\n        }\n    }\n    getParentId() {\n        const parentId = [];\n        if (this.isNestedList) {\n            for (let i = this.curDSLevel.length - 1; i >= 0; i--) {\n                parentId.push(this.curDSLevel[i]);\n            }\n        }\n        return parentId;\n    }\n    /**\n     * Gets the details of the currently selected item from the list items.\n     *\n     */\n    getSelectedItems() {\n        // eslint-disable-next-line\n        let finalValue;\n        let isCompleted = false;\n        this.selectedId = [];\n        const dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (this.enableVirtualization && !isCompleted) {\n            finalValue = this.virtualizationModule.getSelectedItems();\n            isCompleted = true;\n        }\n        else if (this.showCheckBox && !isCompleted) {\n            // eslint-disable-next-line\n            const liCollection = this.curUL.getElementsByClassName(classNames.selected);\n            const liTextCollection = [];\n            const liDataCollection = [];\n            this.selectedId = [];\n            const dataParent = [];\n            for (let i = 0; i < liCollection.length; i++) {\n                if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                    liTextCollection.push(liCollection[i].innerText.trim());\n                }\n                else {\n                    const tempData = this.getItemData(liCollection[i]);\n                    const fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n                    if (this.isNestedList) {\n                        dataParent.push({ data: tempData, parentId: this.getParentId() });\n                    }\n                    else {\n                        liDataCollection.push(tempData);\n                    }\n                    if (fieldData) {\n                        // eslint-disable-next-line\n                        liTextCollection.push(fieldData[this.listBaseOption.fields.text]);\n                        // eslint-disable-next-line\n                        this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    }\n                    else {\n                        liTextCollection.push(undefined);\n                        this.selectedId.push(undefined);\n                    }\n                }\n            }\n            if ((typeof dataSource[0] === 'string'\n                || typeof dataSource[0] === 'number')\n                && !isCompleted) {\n                finalValue = { item: liCollection, data: dataSource, text: liTextCollection };\n                isCompleted = true;\n            }\n            if (this.isNestedList && !isCompleted) {\n                finalValue = { item: liCollection, data: dataParent, text: liTextCollection };\n                isCompleted = true;\n            }\n            else if (!isCompleted) {\n                finalValue = { item: liCollection, data: liDataCollection, text: liTextCollection };\n                isCompleted = true;\n            }\n        }\n        else if (!isCompleted) {\n            const liElement = this.element.getElementsByClassName(classNames.selected)[0];\n            const fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n            if ((typeof dataSource[0] === 'string'\n                || typeof dataSource[0] === 'number')\n                && !isCompleted) {\n                finalValue = (!isNullOrUndefined(liElement)) ? {\n                    item: liElement, data: dataSource,\n                    text: liElement.innerText.trim()\n                } : undefined;\n                isCompleted = true;\n            }\n            else if (!isCompleted) {\n                if (isNullOrUndefined(fieldData) || isNullOrUndefined(liElement)) {\n                    finalValue = undefined;\n                    isCompleted = true;\n                }\n                else {\n                    // eslint-disable-next-line\n                    this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    finalValue = {\n                        text: fieldData[this.listBaseOption.fields.text], item: liElement,\n                        data: this.getItemData(liElement)\n                    };\n                    isCompleted = true;\n                }\n            }\n        }\n        return finalValue;\n    }\n    /**\n     * Finds out an item details from the current list.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    findItem(item) {\n        return this.getItemData(item);\n    }\n    /**\n     * Enables the disabled list items by passing the Id and text fields.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    enableItem(item) {\n        this.setItemState(item, true);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.enableItem(item);\n        }\n    }\n    /**\n     * Disables the list items by passing the Id and text fields.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    disableItem(item) {\n        this.setItemState(item, false);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.disableItem(item);\n        }\n    }\n    //A function that used to set state of the list item like enable, disable.\n    setItemState(item, isEnable) {\n        const resultJSON = this.getItemData(item);\n        const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            const li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (isEnable) {\n                if (li) {\n                    li.classList.remove(classNames.disable);\n                }\n                delete resultJSON[this.fields.enabled];\n            }\n            else if (!isEnable) {\n                if (li) {\n                    li.classList.add(classNames.disable);\n                }\n                // eslint-disable-next-line\n                resultJSON[this.fields.enabled] = false;\n            }\n        }\n    }\n    /**\n     * Shows the hide list item from the ListView.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    showItem(item) {\n        this.showHideItem(item, false, '');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.showItem(item);\n        }\n    }\n    /**\n     * Hides an list item from the ListView.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    hideItem(item) {\n        this.showHideItem(item, true, 'none');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.hideItem(item);\n        }\n    }\n    showHideItem(obj, isHide, display) {\n        const resultJSON = this.getItemData(obj);\n        const fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            const li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (li) {\n                li.style.display = display;\n            }\n            if (isHide) {\n                // eslint-disable-next-line\n                resultJSON[this.fields.isVisible] = false;\n            }\n            else {\n                delete resultJSON[this.fields.isVisible];\n            }\n        }\n    }\n    /**\n     * Adds the new list item(s) to the current ListView.\n     * To add a new list item(s) in the ListView, we need to pass the `data` as an array of items that need\n     * to be added and `fields` as the target item to which we need to add the given item(s) as its children.\n     * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     *\n     * @param  {{Object}[]} data - JSON Array Data that need to add.\n     *\n     * @param  {Fields} fields - Target item to add the given data as its children (can be null).\n     *\n     */\n    addItem(data, fields = undefined) {\n        const dataSource = this.dataSource instanceof DataManager\n            ? this.localData : this.dataSource;\n        this.addItemInternally(data, fields, dataSource);\n    }\n    addItemInternally(data, fields, dataSource) {\n        if (data instanceof Array) {\n            if (this.enableVirtualization) {\n                this.virtualizationModule.addItem(data, fields, dataSource);\n            }\n            else {\n                const ds = this.findItemFromDS(dataSource, fields);\n                let child;\n                if (ds) {\n                    const fieldData = getFieldValues(ds, this.listBaseOption.fields);\n                    child = fieldData[this.fields.child];\n                    if (!child) {\n                        child = [];\n                    }\n                    child = child.concat(data);\n                }\n                // check for whether target is nested level or top level in list\n                if (ds instanceof Array) {\n                    for (let i = 0; i < data.length; i++) {\n                        dataSource.push(data[i]);\n                        this.setViewDataSource(dataSource);\n                        // since it is top level target, get the content container's first child\n                        // as it is always the top level UL\n                        const targetUL = this.contentContainer\n                            ? this.contentContainer.children[0]\n                            : null;\n                        // check for whether the list was previously empty or not, if it is\n                        // proceed to call initial render\n                        if (this.contentContainer && targetUL) {\n                            this.addItemIntoDom(data[i], targetUL, this.curViewDS);\n                        }\n                        else {\n                            this.reRender();\n                        }\n                    }\n                    this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n                }\n                else {\n                    // proceed as target item is in nested level, only if it is a valid target ds\n                    if (ds) {\n                        ds[this.fields.child] = child;\n                        this.addItemInNestedList(ds, data);\n                    }\n                }\n            }\n        }\n    }\n    addItemInNestedList(targetItemData, itemQueue) {\n        // eslint-disable-next-line\n        const targetItemId = targetItemData[this.fields.id];\n        const targetChildDS = targetItemData[this.fields.child];\n        const isAlreadyRenderedUL = this.element.querySelector('[pid=\\'' + targetItemId + '\\']');\n        const targetLi = this.element.querySelector('[data-uid=\\'' + targetItemId + '\\']');\n        const targetUL = isAlreadyRenderedUL\n            ? isAlreadyRenderedUL\n            : targetLi\n                ? closest(targetLi, 'ul')\n                : null;\n        const targetDS = isAlreadyRenderedUL ? targetChildDS : [targetItemData];\n        const isTargetEmptyChild = targetLi ? !targetLi.classList.contains(classNames.hasChild) : false;\n        if (isTargetEmptyChild) {\n            const targetRefreshedElement = ListBase.createListItemFromJson(this.createElement, targetDS, this.listBaseOption, null, null, this);\n            this.setAttributes(targetRefreshedElement);\n            targetUL.insertBefore(targetRefreshedElement[0], targetLi);\n            detach(targetLi);\n            \n        }\n        // if it is already rendered element, we need to create and append new elements\n        if (isAlreadyRenderedUL && itemQueue) {\n            for (let i = 0; i < itemQueue.length; i++) {\n                targetDS.push(itemQueue[i]);\n                this.addItemIntoDom(itemQueue[i], targetUL, targetDS);\n            }\n            \n        }\n    }\n    addItemIntoDom(currentItem, targetUL, curViewDS) {\n        const index = curViewDS.indexOf(currentItem);\n        this.addListItem(currentItem, index, targetUL, curViewDS);\n        const curItemDS = curViewDS[index - 1];\n        if (curItemDS && curItemDS.isHeader && curItemDS.items.length === 1) {\n            this.addListItem(curItemDS, (index - 1), targetUL, curViewDS);\n        }\n    }\n    addListItem(dataSource, index, ulElement, curViewDS) {\n        let target = this.getLiFromObjOrElement(curViewDS[index + 1]) ||\n            this.getLiFromObjOrElement(curViewDS[index + 2]) || null;\n        const li = ListBase.createListItemFromJson(this.createElement, [dataSource], this.listBaseOption, null, null, this);\n        this.setAttributes(li);\n        // eslint-disable-next-line\n        if (this.template && this.isReact) {\n            this.renderReactTemplates();\n        }\n        if (this.fields.groupBy && curViewDS[index + 1] && curViewDS[index + 1].isHeader) {\n            let targetEle = this.getLiFromObjOrElement(curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        ulElement.insertBefore(li[0], target);\n    }\n    /**\n     * Removes the list item from the data source based on a passed\n     *  element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    removeItem(item) {\n        const listDataSource = this.dataSource instanceof DataManager\n            ? this.localData : this.dataSource;\n        if (this.enableVirtualization) {\n            this.virtualizationModule.removeItem(item);\n        }\n        else {\n            this.removeItemFromList(item, listDataSource);\n        }\n    }\n    removeItemFromList(obj, listDataSource) {\n        const curViewDS = this.curViewDS;\n        const fields = obj instanceof Element ? this.getElementUID(obj) : obj;\n        let dataSource;\n        // eslint-disable-next-line prefer-const\n        dataSource = this.findItemFromDS(listDataSource, fields, true);\n        if (dataSource) {\n            let data;\n            // eslint-disable-next-line prefer-const\n            data = this.findItemFromDS(dataSource, fields);\n            const index = curViewDS.indexOf(data);\n            const li = this.getLiFromObjOrElement(obj);\n            let groupLi;\n            this.validateNestedView(li);\n            if (this.fields.groupBy && this.curViewDS[index - 1] &&\n                curViewDS[index - 1].isHeader &&\n                curViewDS[index - 1].items.length === 1) {\n                if (li && li.previousElementSibling.classList.contains(classNames.groupListItem) &&\n                    (isNullOrUndefined(li.nextElementSibling) || (li.nextElementSibling &&\n                        li.nextElementSibling.classList.contains(classNames.groupListItem)))) {\n                    groupLi = li.previousElementSibling;\n                }\n            }\n            if (li) {\n                detach(li);\n            }\n            if (groupLi) {\n                detach(groupLi);\n            }\n            // eslint-disable-next-line\n            const foundData = (dataSource.length - 1) <= 0\n                ? this.findParent(this.localData, this.fields.id, \n                // eslint-disable-next-line\n                (value) => value === data[this.fields.id], null) : null;\n            const dsIndex = dataSource.indexOf(data);\n            dataSource.splice(dsIndex, 1);\n            this.setViewDataSource(listDataSource);\n            if (foundData\n                && foundData.parent\n                && Array.isArray(foundData.parent[this.fields.child])\n                && foundData.parent[this.fields.child].length <= 0) {\n                const parentLi = this.getLiFromObjOrElement(foundData.parent);\n                if (parentLi) {\n                    const li = ListBase.createListItemFromJson(this.createElement, [foundData.parent], this.listBaseOption, null, null, this);\n                    this.setAttributes(li);\n                    parentLi.parentElement.insertBefore(li[0], parentLi);\n                    parentLi.parentElement.removeChild(parentLi);\n                }\n            }\n            if (dataSource.length <= 0) {\n                this.back();\n            }\n            this.liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n        }\n    }\n    // validate before removing an element whether the current view is inside target element's child view\n    validateNestedView(li) {\n        const liID = li ? li.getAttribute('data-uid').toString().toLowerCase() : null;\n        if (liID && this.curDSLevel && this.curDSLevel.length > 0) {\n            while (this.curDSLevel.some((id) => id.toString().toLowerCase() === liID)) {\n                this.back();\n            }\n        }\n    }\n    /**\n     * Removes multiple items from the ListView by passing the array of elements or array of field objects.\n     *\n     * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n    removeMultipleItems(item) {\n        if (item.length) {\n            for (let i = 0; i < item.length; i++) {\n                this.removeItem(item[i]);\n            }\n        }\n    }\n    // eslint-disable-next-line\n    findParent(dataSource, id, callback, parent) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (dataSource.hasOwnProperty(id) && callback(dataSource[id]) === true) {\n            return extend({}, dataSource);\n        }\n        for (let i = 0; i < Object.keys(dataSource).length; i++) {\n            if (dataSource[Object.keys(dataSource)[i]]\n                && typeof dataSource[Object.keys(dataSource)[i]] === 'object') {\n                // eslint-disable-next-line\n                const result = this.findParent(dataSource[Object.keys(dataSource)[i]], id, callback, dataSource);\n                if (result != null) {\n                    if (!result.parent) {\n                        result.parent = parent;\n                    }\n                    return result;\n                }\n            }\n        }\n        return null;\n    }\n    // Module Required function\n    getModuleName() {\n        return 'listview';\n    }\n    requiredModules() {\n        const modules = [];\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualization' });\n        }\n        return modules;\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     */\n    getPersistData() {\n        return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes',\n            'enable', 'fields', 'animation', 'headerTitle',\n            'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition']);\n    }\n};\n__decorate([\n    Property('')\n], ListView.prototype, \"cssClass\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"enableVirtualization\", void 0);\n__decorate([\n    Property({})\n], ListView.prototype, \"htmlAttributes\", void 0);\n__decorate([\n    Property(true)\n], ListView.prototype, \"enable\", void 0);\n__decorate([\n    Property([])\n], ListView.prototype, \"dataSource\", void 0);\n__decorate([\n    Property()\n], ListView.prototype, \"query\", void 0);\n__decorate([\n    Complex(ListBase.defaultMappedFields, FieldSettings)\n], ListView.prototype, \"fields\", void 0);\n__decorate([\n    Property({ effect: 'SlideLeft', duration: 400, easing: 'ease' })\n], ListView.prototype, \"animation\", void 0);\n__decorate([\n    Property('None')\n], ListView.prototype, \"sortOrder\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"showIcon\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"showCheckBox\", void 0);\n__decorate([\n    Property('Left')\n], ListView.prototype, \"checkBoxPosition\", void 0);\n__decorate([\n    Property('')\n], ListView.prototype, \"headerTitle\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"showHeader\", void 0);\n__decorate([\n    Property(false)\n], ListView.prototype, \"enableHtmlSanitizer\", void 0);\n__decorate([\n    Property('')\n], ListView.prototype, \"height\", void 0);\n__decorate([\n    Property('')\n], ListView.prototype, \"width\", void 0);\n__decorate([\n    Property(null)\n], ListView.prototype, \"template\", void 0);\n__decorate([\n    Property(null)\n], ListView.prototype, \"headerTemplate\", void 0);\n__decorate([\n    Property(null)\n], ListView.prototype, \"groupTemplate\", void 0);\n__decorate([\n    Event()\n], ListView.prototype, \"select\", void 0);\n__decorate([\n    Event()\n], ListView.prototype, \"actionBegin\", void 0);\n__decorate([\n    Event()\n], ListView.prototype, \"actionComplete\", void 0);\n__decorate([\n    Event()\n], ListView.prototype, \"actionFailure\", void 0);\nListView = __decorate([\n    NotifyPropertyChanges\n], ListView);\n\nconst listElementCount = 1.5;\nconst windowElementCount = 3;\nclass Virtualization {\n    constructor(instance) {\n        this.elementDifference = 0;\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    isNgTemplate() {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    uiVirtualization() {\n        this.wireScrollEvent(false);\n        const curViewDS = this.listViewInstance.curViewDS;\n        const firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.content });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        const otherDs = curViewDS.slice(1, this.domItemCount);\n        const listItems = ListBase.createListItemFromJson(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    }\n    wireScrollEvent(destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            if (this.listViewInstance.isWindow === true) {\n                window.removeEventListener('scroll', this.onVirtualScroll);\n                window.removeEventListener('scroll', this.updateUl);\n            }\n            else {\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n            }\n        }\n    }\n    updateUlContainer(e) {\n        let listDiff;\n        const virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n        if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n            this.listViewInstance.updateLiElementHeight();\n        }\n        if (this.listViewInstance.isWindow) {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        else {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        if (((listDiff - 1) * this.listViewInstance.liElementHeight) < 0) {\n            virtualElementContainer.style.top = '0px';\n        }\n        else {\n            virtualElementContainer.style.top = (listDiff) * this.listViewInstance.liElementHeight + 'px';\n        }\n    }\n    ValidateItemCount(dataSourceLength) {\n        const height = parseFloat(formatUnit(this.listViewInstance.height));\n        let itemCount;\n        if (this.listViewInstance.isWindow) {\n            itemCount = Math.round((window.innerHeight / this.listItemHeight) * windowElementCount);\n        }\n        else {\n            if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n                // eslint-disable-next-line max-len\n                itemCount = Math.round((this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight) * listElementCount);\n            }\n            else {\n                itemCount = Math.round((height / this.listItemHeight) * listElementCount);\n            }\n        }\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    }\n    uiIndicesInitialization() {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        const data = this.listViewInstance.curViewDS;\n        for (let i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            // eslint-disable-next-line\n            if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) &&\n                !data[i][this.listViewInstance.fields.enabled]) {\n                // eslint-disable-next-line\n                (this.uiIndices.disabledItemIndices.push(i));\n            }\n        }\n        if (this.isNgTemplate()) {\n            const items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (let index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n            }\n        }\n    }\n    refreshItemHeight() {\n        if (this.listViewInstance.curViewDS.length) {\n            const curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    }\n    getscrollerHeight(startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    }\n    onVirtualUiScroll(e) {\n        let startingHeight;\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        const scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        [this.topElementHeight, this.bottomElementHeight] = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                const listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                const listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n        }\n        this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n        if (typeof this.listViewInstance.onUIScrolled === 'function') {\n            this.listViewInstance.onUIScrolled();\n        }\n        this.scrollPosition = scroll;\n    }\n    onLongScroll(listDiff, isScrollingDown) {\n        let index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        const elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (let i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    }\n    onNormalScroll(listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (let i = 0; i < listDiff; i++) {\n                const index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (let i = 0; i < listDiff; i++) {\n                const index = --this.uiFirstIndex;\n                const target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    }\n    updateUiContent(element, index) {\n        const curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDs[index][this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.id]) : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.text]);\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                const textContent = element.querySelector('.' + classNames.textContent);\n                const target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            const textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    }\n    changeElementAttributes(element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            const checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    }\n    findDSAndIndexFromId(ds, fields) {\n        const resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some((data, index) => {\n                if ((fields[this.listViewInstance.fields.id] &&\n                    // eslint-disable-next-line\n                    fields[this.listViewInstance.fields.id]\n                        // eslint-disable-next-line\n                        === (data[this.listViewInstance.fields.id] && data[this.listViewInstance.fields.id]) || fields === data)) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    }\n    getSelectedItems() {\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            const dataCollection = [];\n            const textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                const curViewDS = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    const indices = this.uiIndices.activeIndices;\n                    for (let i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map((index) => this.listViewInstance.dataSource.indexOf(curViewDS[index]))\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS[this.activeIndex],\n                        data: curViewDS[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                const curViewDS = this.listViewInstance.curViewDS;\n                const text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    const indexArray = this.uiIndices.activeIndices;\n                    for (let i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS[indexArray[i]][text]);\n                        dataCollection.push(curViewDS[indexArray[i]]);\n                    }\n                    const dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map((index) => dataSource.indexOf(curViewDS[index]))\n                    };\n                }\n                else {\n                    const dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        // eslint-disable-next-line\n                        data: curViewDS[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    selectItem(obj) {\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            const isSelected = this.activeIndex === resutJSON.index;\n            let isChecked;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                let eventArgs;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    const curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    }\n    enableItem(obj) {\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    }\n    disableItem(obj) {\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    }\n    showItem(obj) {\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    }\n    hideItem(obj) {\n        const resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    }\n    removeItem(obj) {\n        let dataSource;\n        const curViewDS = this.listViewInstance.curViewDS;\n        const resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        const listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        const index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    }\n    // eslint-disable-next-line\n    setCheckboxLI(li, e) {\n        const index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    }\n    // eslint-disable-next-line\n    setSelectLI(li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    }\n    checkedItem(checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            const data = this.listViewInstance.curViewDS;\n            for (let index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    }\n    addUiItem(index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        const curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            const liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            const target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            const liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            let target;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                if (this.listViewInstance.isWindow === true) {\n                    window.scrollTo(0, (pageYOffset + this.listItemHeight));\n                }\n                else {\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n                }\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    }\n    removeUiItem(index) {\n        this.totalHeight -= this.listItemHeight;\n        const curViewDS = this.listViewInstance.curViewDS[index];\n        const liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    const checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    }\n    changeUiIndices(index, increment) {\n        const keys = Object.keys(this.uiIndices);\n        for (let ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map((i) => {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    }\n    addItem(data, fields, dataSource) {\n        for (let i = 0; i < data.length; i++) {\n            const currentItem = data[i];\n            // push the given data to main data array\n            dataSource.push(currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                const ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        let index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index);\n                        // check for group header item\n                        const curViewDS = this.listViewInstance.curViewDS[index - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                const index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index);\n                // check for group header item needs to be added\n                const curViewDS = this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index - 1);\n                }\n            }\n        }\n    }\n    createAndInjectNewItem(itemData, index) {\n        // generate li item for given datasource\n        let target;\n        const li = ListBase.createListItemFromJson(this.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n            let targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    }\n    createUIItem(args) {\n        const virtualTemplate = this.listViewInstance.template;\n        const template = this.listViewInstance.createElement('div');\n        let commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        if (this.listViewInstance.isReact) {\n            commonTemplate = null;\n        }\n        if (this.listViewInstance.showCheckBox) {\n            // eslint-disable-next-line\n            this.listViewInstance.renderCheckbox(args);\n            if ((!isNullOrUndefined(this.listViewInstance.virtualCheckBox)) &&\n                (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML))) {\n                const div = document.createElement('div');\n                div.innerHTML = this.listViewInstance.template || commonTemplate;\n                if (div.children && div.children[0]) {\n                    div.children[0].classList.add('e-checkbox');\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div.children[0].classList.add('e-checkbox-left');\n                    }\n                    else {\n                        div.children[0].classList.add('e-checkbox-right');\n                    }\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n                    }\n                    else {\n                        div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                    }\n                    this.listViewInstance.template = div.innerHTML;\n                }\n            }\n            template.innerHTML = this.listViewInstance.template;\n            this.listViewInstance.template = virtualTemplate;\n        }\n        else {\n            template.innerHTML = this.listViewInstance.template || commonTemplate;\n        }\n        // eslint-disable-next-line\n        const templateElements = template.getElementsByTagName('*');\n        const groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n        }\n        // eslint-disable-next-line\n        let groupTemplateElements = groupTemplate.getElementsByTagName('*');\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        if (!this.listViewInstance.isReact || (typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\")) ||\n            (typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\"))) {\n            args.item.innerHTML = '';\n        }\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (let i = 0; i < templateElements.length; i++) {\n            this.compileTemplate(templateElements[i], args.item, false);\n        }\n        for (let i = 0; i < groupTemplateElements.length; i++) {\n            this.compileTemplate(groupTemplateElements[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        const element = args.curData.isHeader ? groupTemplate : template;\n        if (element.firstElementChild) {\n            args.item.insertBefore(element.firstElementChild, null);\n        }\n    }\n    compileTemplate(element, item, isHeader) {\n        this.textProperty(element, item, isHeader);\n        this.classProperty(element, item, isHeader);\n        this.attributeProperty(element, item, isHeader);\n    }\n    onChange(newData, listElement) {\n        listElement.context.data = newData;\n        // eslint-disable-next-line max-len\n        const groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        // eslint-disable-next-line max-len\n        const flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        // eslint-disable-next-line\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            // eslint-disable-next-line\n            const element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            for (let i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            const element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            for (let i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader) {\n            for (let i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else {\n            for (let i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n    }\n    // eslint-disable-next-line\n    updateContextData(listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    }\n    classProperty(element, listElement, isHeader) {\n        const regex = new RegExp('\\\\${([^}]*)}', 'g');\n        const resultantOutput = [];\n        let regexMatch;\n        while (regexMatch !== null) {\n            const match = regex.exec(element.className);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        if (resultantOutput && resultantOutput.length) {\n            for (let i = 0; i < resultantOutput.length; i++) {\n                const classNameMatch = resultantOutput[i];\n                // eslint-disable-next-line\n                let classFunction;\n                if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n                }\n                // eslint-disable-next-line\n                const subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = classFunction(this.headerData);\n                }\n                else {\n                    subNode.bindedvalue = classFunction(this.templateData);\n                }\n                subNode.onChange = (value) => {\n                    if (subNode.bindedvalue) {\n                        removeClass([element], subNode.bindedvalue.split(' ').filter((css) => css));\n                    }\n                    const newCss = classFunction(value);\n                    if (newCss) {\n                        addClass([element], (newCss).split(' ').filter((css) => css));\n                    }\n                    subNode.bindedvalue = newCss;\n                };\n                const className = classNameMatch[0].split(' ');\n                for (let i = 0; i < className.length; i++) {\n                    element.classList.remove(className[i]);\n                }\n                if (subNode.bindedvalue) {\n                    addClass([element], subNode.bindedvalue.split(' ').filter((css) => css));\n                }\n                this.updateContextData(listElement, subNode, isHeader);\n            }\n        }\n    }\n    attributeProperty(element, listElement, isHeader) {\n        const attributeNames = [];\n        for (let i = 0; i < element.attributes.length; i++) {\n            attributeNames.push(element.attributes[i].nodeName);\n        }\n        if (attributeNames.indexOf('class') !== -1) {\n            attributeNames.splice(attributeNames.indexOf('class'), 1);\n        }\n        for (let i = 0; i < attributeNames.length; i++) {\n            const attributeName = attributeNames[i];\n            const attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n            const attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName))\n                || [];\n            // eslint-disable-next-line\n            let attributeNameFunction;\n            // eslint-disable-next-line\n            let attributeValueFunction;\n            if (attrNameMatch.length || attrValueMatch.length) {\n                if (attrNameMatch[1]) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n                }\n                if (attrValueMatch[1]) {\n                    if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n                    }\n                    else {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n                    }\n                }\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                const subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this.headerData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this.headerData)];\n                }\n                else {\n                    subNode.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this.templateData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this.templateData)];\n                }\n                subNode.attrName = subNode.bindedvalue[0] === undefined ?\n                    attributeName : subNode.bindedvalue[0];\n                subNode.onChange = (value) => {\n                    const bindedvalue = subNode.bindedvalue[1] === undefined ?\n                        element.getAttribute(subNode.attrName) : attributeValueFunction(value);\n                    element.removeAttribute(subNode.attrName);\n                    subNode.attrName = subNode.bindedvalue[0] === undefined ? subNode.attrName : attributeNameFunction(value);\n                    element.setAttribute(subNode.attrName, bindedvalue);\n                    subNode.bindedvalue = [subNode.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value),\n                        subNode.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n                };\n                const attributeValue = subNode.bindedvalue[1] === undefined ? element.getAttribute(attributeName) :\n                    subNode.bindedvalue[1];\n                element.removeAttribute(attributeName);\n                element.setAttribute(subNode.attrName, attributeValue);\n                this.updateContextData(listElement, subNode, isHeader);\n            }\n        }\n    }\n    textProperty(element, listElement, isHeader) {\n        const regex = new RegExp('\\\\${([^}]*)}', 'g');\n        const resultantOutput = [];\n        let regexMatch;\n        while (regexMatch !== null) {\n            const match = regex.exec(element.innerText);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        const isChildHasTextContent = Array.prototype.some.call(element.children, (element) => {\n            if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n            for (let i = 0; i < resultantOutput.length; i++) {\n                const textPropertyMatch = resultantOutput[i];\n                // eslint-disable-next-line\n                const subNode = {};\n                // eslint-disable-next-line\n                let textFunction;\n                if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n                }\n                if (isHeader) {\n                    subNode.bindedvalue = textFunction(this.headerData);\n                }\n                else {\n                    subNode.bindedvalue = textFunction(this.templateData);\n                }\n                subNode.onChange = (value) => {\n                    element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n                    subNode.bindedvalue = textFunction(value);\n                };\n                element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n                this.updateContextData(listElement, subNode, isHeader);\n            }\n        }\n    }\n    reRenderUiVirtualization() {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    }\n    updateUI(element, index, targetElement) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            const curViewDS = this.listViewInstance.curViewDS[index];\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDS[this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDS[this.listViewInstance.fields.id]) : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    }\n    onNgChange(newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        // eslint-disable-next-line\n        const templateCompiler = compile(virtualThis.listViewInstance.template);\n        const resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    }\n    getModuleName() {\n        return 'virtualization';\n    }\n    destroy() {\n        this.wireScrollEvent(true);\n    }\n}\n\n/**\n * Listview Component\n */\n\n/**\n * Listview Component\n */\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Sortable_1;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Sortable Module provides support to enable sortable functionality in Dom Elements.\n * ```html\n * <div id=\"sortable\">\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n *   <div>Item 3</div>\n *   <div>Item 4</div>\n *   <div>Item 5</div>\n * </div>\n * ```\n * ```typescript\n *   let ele: HTMLElement = document.getElementById('sortable');\n *   let sortObj: Sortable = new Sortable(ele, {});\n * ```\n */\nlet Sortable = Sortable_1 = class Sortable extends Base {\n    /* es-lint enable  */\n    constructor(element, options) {\n        super(options, element);\n        // eslint-disable-next-line\n        this.getHelper = (e) => {\n            // eslint-disable-next-line prefer-const\n            let target = this.getSortableElement(e.sender.target);\n            if (!this.isValidTarget(target, this)) {\n                return false;\n            }\n            let element;\n            if (this.helper) {\n                element = this.helper({ sender: target, element: e.element });\n            }\n            else {\n                element = target.cloneNode(true);\n                element.style.width = `${target.offsetWidth}px`;\n                element.style.height = `${target.offsetHeight}px`;\n            }\n            addClass([element], ['e-sortableclone']);\n            document.body.appendChild(element);\n            return element;\n        };\n        // eslint-disable-next-line\n        this.onDrag = (e) => {\n            this.trigger('drag', { event: e.event, element: this.element, target: e.target });\n            let newInst = this.getSortableInstance(e.target);\n            let target = this.getSortableElement(e.target, newInst);\n            if ((this.isValidTarget(target, newInst) || e.target.className.indexOf('e-list-group-item') > -1) && (this.curTarget !== target ||\n                !isNullOrUndefined(newInst.placeHolder)) && (newInst.placeHolderElement ? newInst.placeHolderElement !== e.target :\n                true)) {\n                if (e.target.className.indexOf('e-list-group-item') > -1) {\n                    target = e.target;\n                }\n                this.curTarget = target;\n                if (this.target === target) {\n                    return;\n                }\n                let oldIdx = this.getIndex(newInst.placeHolderElement, newInst);\n                const placeHolder = this.getPlaceHolder(target, newInst);\n                let newIdx;\n                if (placeHolder) {\n                    oldIdx = isNullOrUndefined(oldIdx) ? this.getIndex(this.target) : oldIdx;\n                    newIdx = this.getIndex(target, newInst, e.event);\n                    const isPlaceHolderPresent = this.isPlaceHolderPresent(newInst);\n                    if (isPlaceHolderPresent && oldIdx === newIdx) {\n                        return;\n                    }\n                    if (isPlaceHolderPresent) {\n                        remove(newInst.placeHolderElement);\n                    }\n                    newInst.placeHolderElement = placeHolder;\n                    if (e.target.className.indexOf('e-list-group-item') > -1) {\n                        newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n                    }\n                    else if (newInst.element !== this.element && newIdx === newInst.element.childElementCount) {\n                        newInst.element.appendChild(newInst.placeHolderElement);\n                    }\n                    else {\n                        newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n                    }\n                    this.refreshDisabled(oldIdx, newIdx, newInst);\n                }\n                else {\n                    oldIdx = isNullOrUndefined(oldIdx) ? this.getIndex(this.target) :\n                        this.getIndex(target, newInst) < oldIdx || !oldIdx ? oldIdx : oldIdx - 1;\n                    newIdx = this.getIndex(target, newInst);\n                    const idx = newInst.element !== this.element ? newIdx : oldIdx < newIdx ? newIdx + 1 : newIdx;\n                    this.updateItemClass(newInst);\n                    newInst.element.insertBefore(this.target, newInst.element.children[idx]);\n                    this.refreshDisabled(oldIdx, newIdx, newInst);\n                    this.curTarget = this.target;\n                    this.trigger('drop', {\n                        droppedElement: this.target, element: newInst.element, previousIndex: oldIdx, currentIndex: newIdx,\n                        target: e.target, helper: document.getElementsByClassName('e-sortableclone')[0], event: e.event, scope: this.scope\n                    });\n                }\n            }\n            newInst = this.getSortableInstance(this.curTarget);\n            if (isNullOrUndefined(target) && e.target !== newInst.placeHolderElement) {\n                if (this.isPlaceHolderPresent(newInst)) {\n                    this.removePlaceHolder(newInst);\n                }\n            }\n            else {\n                const placeHolders = [].slice.call(document.getElementsByClassName('e-sortable-placeholder'));\n                let inst;\n                placeHolders.forEach((placeHolder) => {\n                    inst = this.getSortableInstance(placeHolder);\n                    if (inst.element && inst !== newInst) {\n                        this.removePlaceHolder(inst);\n                    }\n                });\n            }\n        };\n        // eslint-disable-next-line\n        this.onDragStart = (e) => {\n            this.target = this.getSortableElement(e.target);\n            let cancelDrag = false;\n            this.target.classList.add('e-grabbed');\n            this.curTarget = this.target;\n            e.helper = document.getElementsByClassName('e-sortableclone')[0];\n            const args = { cancel: false, element: this.element, target: this.target };\n            this.trigger('beforeDragStart', args, (observedArgs) => {\n                if (observedArgs.cancel) {\n                    cancelDrag = observedArgs.cancel;\n                    this.onDragStop(e);\n                }\n            });\n            if (cancelDrag) {\n                return;\n            }\n            if (isBlazor) {\n                this.trigger('dragStart', {\n                    event: e.event, element: this.element, target: this.target,\n                    bindEvents: e.bindEvents, dragElement: e.dragElement\n                });\n            }\n            else {\n                this.trigger('dragStart', { event: e.event, element: this.element, target: this.target });\n            }\n        };\n        // eslint-disable-next-line\n        this.onDragStop = (e) => {\n            let dropInst = this.getSortableInstance(this.curTarget);\n            let prevIdx;\n            let curIdx;\n            let handled;\n            prevIdx = this.getIndex(this.target);\n            const isPlaceHolderPresent = this.isPlaceHolderPresent(dropInst);\n            if (isPlaceHolderPresent) {\n                const curIdx = this.getIndex(dropInst.placeHolderElement, dropInst);\n                const args = {\n                    previousIndex: prevIdx, currentIndex: curIdx, target: e.target, droppedElement: this.target,\n                    helper: e.helper, cancel: false, handled: false\n                };\n                this.trigger('beforeDrop', args, (observedArgs) => {\n                    if (!observedArgs.cancel) {\n                        handled = observedArgs.handled;\n                        this.updateItemClass(dropInst);\n                        if (observedArgs.handled) {\n                            const ele = this.target.cloneNode(true);\n                            this.target.classList.remove('e-grabbed');\n                            this.target = ele;\n                        }\n                        dropInst.element.insertBefore(this.target, dropInst.placeHolderElement);\n                        const curIdx = this.getIndex(this.target, dropInst);\n                        prevIdx = this === dropInst && (prevIdx - curIdx) > 1 ? prevIdx - 1 : prevIdx;\n                        this.trigger('drop', {\n                            event: e.event, element: dropInst.element, previousIndex: prevIdx, currentIndex: curIdx,\n                            target: e.target, helper: e.helper, droppedElement: this.target, scopeName: this.scope, handled: handled\n                        });\n                    }\n                    remove(dropInst.placeHolderElement);\n                });\n            }\n            dropInst = this.getSortableInstance(e.target);\n            // eslint-disable-next-line prefer-const\n            curIdx = dropInst.element.childElementCount;\n            prevIdx = this.getIndex(this.target);\n            if (dropInst.element === e.target || (!isPlaceHolderPresent && this.curTarget === this.target)) {\n                const beforeDropArgs = {\n                    previousIndex: prevIdx, currentIndex: this.curTarget === this.target ? prevIdx : curIdx,\n                    target: e.target, droppedElement: this.target, helper: e.helper, cancel: false\n                };\n                this.trigger('beforeDrop', beforeDropArgs, (observedArgs) => {\n                    if (dropInst.element === e.target && !observedArgs.cancel) {\n                        this.updateItemClass(dropInst);\n                        dropInst.element.appendChild(this.target);\n                        this.trigger('drop', {\n                            event: e.event, element: dropInst.element, previousIndex: prevIdx, currentIndex: curIdx,\n                            target: e.target, helper: e.helper, droppedElement: this.target, scopeName: this.scope\n                        });\n                    }\n                });\n            }\n            this.target.classList.remove('e-grabbed');\n            this.target = null;\n            this.curTarget = null;\n            remove(e.helper);\n            getComponent(this.element, Draggable).intDestroy(e.event);\n        };\n        this.bind();\n    }\n    bind() {\n        if (!this.element.id) {\n            this.element.id = getUniqueID('sortable');\n        }\n        if (!this.itemClass) {\n            this.itemClass = 'e-sort-item';\n            this.dataBind();\n        }\n        this.initializeDraggable();\n    }\n    initializeDraggable() {\n        new Draggable(this.element, {\n            helper: this.getHelper,\n            dragStart: this.onDragStart,\n            drag: this.onDrag,\n            dragStop: this.onDragStop,\n            dragTarget: `.${this.itemClass}`,\n            enableTapHold: true,\n            tapHoldThreshold: 200,\n            queryPositionInfo: this.queryPositionInfo,\n            distance: 5\n        });\n    }\n    getPlaceHolder(target, instance) {\n        if (instance.placeHolder) {\n            const placeHolderElement = instance.placeHolder({ element: instance.element, grabbedElement: this.target, target: target });\n            placeHolderElement.classList.add('e-sortable-placeholder');\n            return placeHolderElement;\n        }\n        return null;\n    }\n    isValidTarget(target, instance) {\n        return target && compareElementParent(target, instance.element) && target.classList.contains(instance.itemClass) &&\n            !target.classList.contains('e-disabled');\n    }\n    removePlaceHolder(instance) {\n        remove(instance.placeHolderElement);\n        instance.placeHolderElement = null;\n    }\n    updateItemClass(instance) {\n        if (this !== instance) {\n            this.target.classList.remove(this.itemClass);\n            this.target.classList.add(instance.itemClass);\n        }\n    }\n    getSortableInstance(element) {\n        element = closest(element, `.e-${this.getModuleName()}`);\n        if (element) {\n            const inst = getComponent(element, Sortable_1);\n            return inst.scope && this.scope && inst.scope === this.scope ? inst : this;\n        }\n        else {\n            return this;\n        }\n    }\n    refreshDisabled(oldIdx, newIdx, instance) {\n        if (instance === this) {\n            let element;\n            const increased = oldIdx < newIdx;\n            let disabledIdx;\n            let start = increased ? oldIdx : newIdx;\n            const end = increased ? newIdx : oldIdx;\n            while (start <= end) {\n                element = this.element.children[start];\n                if (element.classList.contains('e-disabled')) {\n                    disabledIdx = this.getIndex(element);\n                    this.element.insertBefore(element, this.element.children[increased ? disabledIdx + 2 : disabledIdx - 1]);\n                    start = increased ? disabledIdx + 2 : disabledIdx + 1;\n                }\n                else {\n                    start++;\n                }\n            }\n        }\n    }\n    getIndex(target, instance = this, e) {\n        let idx;\n        let placeHolderPresent;\n        [].slice.call(instance.element.children).forEach((element, index) => {\n            if (element.classList.contains('e-sortable-placeholder')) {\n                placeHolderPresent = true;\n            }\n            if (element === target) {\n                idx = index;\n                if (!isNullOrUndefined(e)) {\n                    if (placeHolderPresent) {\n                        idx -= 1;\n                    }\n                    const offset = target.getBoundingClientRect();\n                    const clientY = offset.bottom - ((offset.bottom - offset.top) / 2);\n                    idx = e.clientY <= clientY ? idx : idx + 1;\n                }\n                return;\n            }\n        });\n        return idx;\n    }\n    getSortableElement(element, instance = this) {\n        return closest(element, `.${instance.itemClass}`);\n    }\n    queryPositionInfo(value) {\n        value.left = pageXOffset ? `${parseFloat(value.left) - pageXOffset}px` : value.left;\n        value.top = pageYOffset ? `${parseFloat(value.top) - pageYOffset}px` : value.top;\n        return value;\n    }\n    isPlaceHolderPresent(instance) {\n        return instance.placeHolderElement && !!closest(instance.placeHolderElement, `#${instance.element.id}`);\n    }\n    /**\n     * It is used to sort array of elements from source element to destination element.\n     *\n     * @param destination - Defines the destination element to which the sortable elements needs to be appended.\n     *\n     * If it is null, then the Sortable library element will be considered as destination.\n     * @param targetIndexes - Specifies the sortable elements indexes which needs to be sorted.\n     * @param insertBefore - Specifies the index before which the sortable elements needs to be appended.\n     * If it is null, elements will be appended as last child.\n     * @function moveTo\n     * @returns {void}\n     */\n    moveTo(destination, targetIndexes, insertBefore) {\n        moveTo(this.element, destination, targetIndexes, insertBefore);\n    }\n    /**\n     * It is used to destroy the Sortable library.\n     */\n    destroy() {\n        if (this.itemClass === 'e-sort-item') {\n            this.itemClass = null;\n            this.dataBind();\n        }\n        getComponent(this.element, Draggable).destroy();\n        super.destroy();\n    }\n    getModuleName() {\n        return 'sortable';\n    }\n    onPropertyChanged(newProp, oldProp) {\n        for (const prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'itemClass':\n                    [].slice.call(this.element.children).forEach((element) => {\n                        if (element.classList.contains(oldProp.itemClass)) {\n                            element.classList.remove(oldProp.itemClass);\n                        }\n                        if (newProp.itemClass) {\n                            element.classList.add(newProp.itemClass);\n                        }\n                    });\n                    break;\n            }\n        }\n    }\n};\n__decorate$1([\n    Property(false)\n], Sortable.prototype, \"enableAnimation\", void 0);\n__decorate$1([\n    Property(null)\n], Sortable.prototype, \"itemClass\", void 0);\n__decorate$1([\n    Property(null)\n], Sortable.prototype, \"scope\", void 0);\n__decorate$1([\n    Property()\n], Sortable.prototype, \"helper\", void 0);\n__decorate$1([\n    Property()\n], Sortable.prototype, \"placeHolder\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"drag\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"beforeDragStart\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"dragStart\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"beforeDrop\", void 0);\n__decorate$1([\n    Event()\n], Sortable.prototype, \"drop\", void 0);\nSortable = Sortable_1 = __decorate$1([\n    NotifyPropertyChanges\n], Sortable);\n/**\n * It is used to sort array of elements from source element to destination element.\n *\n * @private\n */\nfunction moveTo(from, to, targetIndexes, insertBefore) {\n    let targetElements = [];\n    if (!to) {\n        to = from;\n    }\n    if (targetIndexes && targetIndexes.length) {\n        targetIndexes.forEach((index) => {\n            targetElements.push(from.children[index]);\n        });\n    }\n    else {\n        targetElements = [].slice.call(from.children);\n    }\n    if (isNullOrUndefined(insertBefore)) {\n        targetElements.forEach((target) => {\n            to.appendChild(target);\n        });\n    }\n    else {\n        const insertElement = to.children[insertBefore];\n        targetElements.forEach((target) => {\n            to.insertBefore(target, insertElement);\n        });\n    }\n}\n\n/**\n * Sortable Module\n */\n\n/**\n * List Components\n */\n\nexport { classNames, FieldSettings, ListView, Virtualization, cssClass, ListBase, getFieldValues, Sortable, moveTo };\n"]},"metadata":{},"sourceType":"module"}